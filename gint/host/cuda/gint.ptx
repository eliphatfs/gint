//
// Generated by LLVM NVPTX Back-End
//

.version 8.5
.target sm_70
.address_size 64

	// .globl	geval                   // -- Begin function geval
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
                                        // @geval
.visible .entry geval(
	.param .u64 .ptr .global .align 1 geval_param_0,
	.param .u64 .ptr .global .align 1 geval_param_1,
	.param .u32 geval_param_2
)
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<1108>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<1862>;
	.reg .f32 	%f<3770>;
	.reg .b64 	%rd<526>;
	.reg .f64 	%fd<49>;

// %bb.0:                               // %entry
	mov.u64 	%SPL, __local_depot0;
	add.u64 	%rd1, %SPL, 0;
	ld.param.u32 	%r419, [geval_param_2];
	add.u64 	%rd2, %SPL, 0;
	add.u64 	%rd3, %SPL, 0;
	add.u64 	%rd4, %SPL, 0;
	add.u64 	%rd5, %SPL, 0;
	add.u64 	%rd6, %SPL, 0;
	add.u64 	%rd7, %SPL, 0;
	add.u64 	%rd8, %SPL, 0;
	add.u64 	%rd9, %SPL, 0;
	add.u64 	%rd10, %SPL, 0;
	add.u64 	%rd11, %SPL, 0;
	add.u64 	%rd12, %SPL, 0;
	add.u64 	%rd13, %SPL, 0;
	add.u64 	%rd14, %SPL, 0;
	add.u64 	%rd15, %SPL, 0;
	add.u64 	%rd16, %SPL, 0;
	add.u64 	%rd17, %SPL, 0;
	add.u64 	%rd18, %SPL, 0;
	add.u64 	%rd19, %SPL, 0;
	add.u64 	%rd20, %SPL, 0;
	add.u64 	%rd21, %SPL, 0;
	add.u64 	%rd22, %SPL, 0;
	add.u64 	%rd23, %SPL, 0;
	add.u64 	%rd24, %SPL, 0;
	mov.u32 	%r1, %laneid;
	setp.lt.s32 	%p9, %r1, %r419;
	mov.b32 	%r9, 0;
	mov.u32 	%r10, %r9;
	mov.u32 	%r11, %r9;
	mov.u32 	%r12, %r9;
	mov.u32 	%r16, %r9;
	mov.u32 	%r17, %r9;
	mov.u32 	%r15, %r9;
	@%p9 bra 	$L__BB0_1;
$L__BB0_2:                              // %entry.endif
	ld.param.u64 	%rd25, [geval_param_0];
	mov.f32 	%f3648, 0f00000000;
	mov.u32 	%r18, %tid.x;
	mov.f32 	%f3649, %f3648;
	mov.f32 	%f3650, %f3648;
	mov.f32 	%f3651, %f3648;
	mov.f32 	%f3652, %f3648;
	mov.f32 	%f3653, %f3648;
	mov.f32 	%f3654, %f3648;
	mov.f32 	%f3655, %f3648;
                                        // implicit-def: %f3656
                                        // implicit-def: %f3657
                                        // implicit-def: %f3658
                                        // implicit-def: %f3659
                                        // implicit-def: %f3660
                                        // implicit-def: %f3661
                                        // implicit-def: %f3662
                                        // implicit-def: %f3663
                                        // implicit-def: %f3664
                                        // implicit-def: %f3665
                                        // implicit-def: %f3666
                                        // implicit-def: %f3667
                                        // implicit-def: %f3668
                                        // implicit-def: %f3669
                                        // implicit-def: %f3670
                                        // implicit-def: %f3671
                                        // implicit-def: %f3672
                                        // implicit-def: %f3673
                                        // implicit-def: %f3674
                                        // implicit-def: %f3675
                                        // implicit-def: %f3676
                                        // implicit-def: %f3677
                                        // implicit-def: %f3678
                                        // implicit-def: %f3679
	bra.uni 	$L__BB0_3;
$L__BB0_60:                             // %LoadF3Imm
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.f32 	%f3672, [%rd25+4];
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3673, %f3672;
	mov.f32 	%f3674, %f3672;
	mov.f32 	%f3675, %f3672;
	mov.f32 	%f3676, %f3672;
	mov.f32 	%f3677, %f3672;
	mov.f32 	%f3678, %f3672;
	mov.f32 	%f3679, %f3672;
$L__BB0_502:                            // %dispatch.backedge
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s64 	%rd25, %rd25, 8;
$L__BB0_3:                              // %dispatch
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_201 Depth 2
                                        //     Child Loop BB0_211 Depth 2
                                        //     Child Loop BB0_221 Depth 2
                                        //     Child Loop BB0_231 Depth 2
                                        //     Child Loop BB0_241 Depth 2
                                        //     Child Loop BB0_251 Depth 2
                                        //     Child Loop BB0_261 Depth 2
                                        //     Child Loop BB0_271 Depth 2
                                        //     Child Loop BB0_136 Depth 2
                                        //     Child Loop BB0_144 Depth 2
                                        //     Child Loop BB0_152 Depth 2
                                        //     Child Loop BB0_160 Depth 2
                                        //     Child Loop BB0_168 Depth 2
                                        //     Child Loop BB0_176 Depth 2
                                        //     Child Loop BB0_184 Depth 2
                                        //     Child Loop BB0_192 Depth 2
                                        //     Child Loop BB0_71 Depth 2
                                        //     Child Loop BB0_79 Depth 2
                                        //     Child Loop BB0_87 Depth 2
                                        //     Child Loop BB0_95 Depth 2
                                        //     Child Loop BB0_103 Depth 2
                                        //     Child Loop BB0_111 Depth 2
                                        //     Child Loop BB0_119 Depth 2
                                        //     Child Loop BB0_127 Depth 2
	mov.f32 	%f8, %f3655;
	ld.global.u32 	%r454, [%rd25];
	mov.f32 	%f3655, %f8;
	$L_brx_0: .branchtargets
		$L__BB0_4,
		$L__BB0_502,
		$L__BB0_5,
		$L__BB0_21,
		$L__BB0_37,
		$L__BB0_38,
		$L__BB0_39,
		$L__BB0_40,
		$L__BB0_41,
		$L__BB0_42,
		$L__BB0_43,
		$L__BB0_44,
		$L__BB0_45,
		$L__BB0_46,
		$L__BB0_47,
		$L__BB0_48,
		$L__BB0_49,
		$L__BB0_50,
		$L__BB0_51,
		$L__BB0_52,
		$L__BB0_53,
		$L__BB0_54,
		$L__BB0_55,
		$L__BB0_56,
		$L__BB0_57,
		$L__BB0_58,
		$L__BB0_59,
		$L__BB0_60,
		$L__BB0_61,
		$L__BB0_62,
		$L__BB0_63,
		$L__BB0_64,
		$L__BB0_65,
		$L__BB0_66,
		$L__BB0_67,
		$L__BB0_132,
		$L__BB0_197,
		$L__BB0_277,
		$L__BB0_278,
		$L__BB0_279,
		$L__BB0_280,
		$L__BB0_320,
		$L__BB0_401,
		$L__BB0_402,
		$L__BB0_403,
		$L__BB0_404,
		$L__BB0_405,
		$L__BB0_406,
		$L__BB0_422,
		$L__BB0_438,
		$L__BB0_454,
		$L__BB0_470,
		$L__BB0_486;
	brx.idx 	%r454, $L_brx_0;
$L__BB0_5:                              // %LoadGlobalF32
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u32 	%r1767, [%rd25+4];
	and.b32  	%r1768, %r1767, 15;
	shr.u32 	%r1769, %r1767, 4;
	shfl.sync.idx.b32	%r1770, %r16, %r1768, 31, -1;
	shfl.sync.idx.b32	%r1771, %r17, %r1768, 31, -1;
	cvt.u64.u32 	%rd488, %r1770;
	cvt.u64.u32 	%rd489, %r1771;
	shl.b64 	%rd490, %rd489, 32;
	or.b64  	%rd491, %rd488, %rd490;
	add.s32 	%r19, %r1769, %r18;
	shfl.sync.idx.b32	%r20, %r10, %r1768, 31, -1;
	shfl.sync.idx.b32	%r1772, %r9, %r1768, 31, -1;
	shfl.sync.idx.b32	%r21, %r11, %r1768, 31, -1;
	shfl.sync.idx.b32	%r22, %r12, %r1768, 31, -1;
	shfl.sync.idx.b32	%r23, %r15, %r1768, 31, -1;
	mul.lo.s32 	%r1773, %r1772, %r19;
	mul.wide.s32 	%rd492, %r1773, 4;
	add.s64 	%rd27, %rd491, %rd492;
	setp.ge.u32 	%p1086, %r19, %r20;
	mov.f32 	%f3657, 0f00000000;
	mov.f32 	%f3656, %f3657;
	@%p1086 bra 	$L__BB0_7;
// %bb.6:                               // %LoadGlobalF32.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.f32 	%f3656, [%rd27];
$L__BB0_7:                              // %LoadGlobalF32.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r24, %r23, %r19;
	cvt.s64.s32 	%rd28, %r21;
	mul.wide.s32 	%rd493, %r21, 4;
	add.s64 	%rd29, %rd27, %rd493;
	setp.ge.u32 	%p1087, %r24, %r20;
	setp.lt.u32 	%p1088, %r22, 2;
	or.pred  	%p1089, %p1088, %p1087;
	@%p1089 bra 	$L__BB0_9;
// %bb.8:                               // %LoadGlobalF32.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.f32 	%f3657, [%rd29];
$L__BB0_9:                              // %LoadGlobalF32.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r25, %r24, %r23;
	shl.b64 	%rd494, %rd28, 2;
	add.s64 	%rd30, %rd29, %rd494;
	setp.ge.u32 	%p1090, %r25, %r20;
	setp.lt.u32 	%p1091, %r22, 3;
	mov.f32 	%f3659, 0f00000000;
	or.pred  	%p1092, %p1091, %p1090;
	mov.f32 	%f3658, %f3659;
	@%p1092 bra 	$L__BB0_11;
// %bb.10:                              // %LoadGlobalF32.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.f32 	%f3658, [%rd30];
$L__BB0_11:                             // %LoadGlobalF32.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r26, %r25, %r23;
	add.s64 	%rd31, %rd30, %rd494;
	setp.ge.u32 	%p1093, %r26, %r20;
	setp.lt.u32 	%p1094, %r22, 4;
	or.pred  	%p1095, %p1094, %p1093;
	@%p1095 bra 	$L__BB0_13;
// %bb.12:                              // %LoadGlobalF32.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.f32 	%f3659, [%rd31];
$L__BB0_13:                             // %LoadGlobalF32.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r27, %r26, %r23;
	add.s64 	%rd32, %rd31, %rd494;
	setp.ge.u32 	%p1096, %r27, %r20;
	setp.lt.u32 	%p1097, %r22, 5;
	mov.f32 	%f3661, 0f00000000;
	or.pred  	%p1098, %p1097, %p1096;
	mov.f32 	%f3660, %f3661;
	@%p1098 bra 	$L__BB0_15;
// %bb.14:                              // %LoadGlobalF32.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.f32 	%f3660, [%rd32];
$L__BB0_15:                             // %LoadGlobalF32.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r28, %r27, %r23;
	add.s64 	%rd33, %rd32, %rd494;
	setp.ge.u32 	%p1099, %r28, %r20;
	setp.lt.u32 	%p1100, %r22, 6;
	or.pred  	%p1101, %p1100, %p1099;
	@%p1101 bra 	$L__BB0_17;
// %bb.16:                              // %LoadGlobalF32.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.f32 	%f3661, [%rd33];
$L__BB0_17:                             // %LoadGlobalF32.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r29, %r28, %r23;
	add.s64 	%rd34, %rd33, %rd494;
	setp.ge.u32 	%p1102, %r29, %r20;
	setp.lt.u32 	%p1103, %r22, 7;
	mov.f32 	%f3663, 0f00000000;
	or.pred  	%p1104, %p1103, %p1102;
	mov.f32 	%f3662, %f3663;
	@%p1104 bra 	$L__BB0_19;
// %bb.18:                              // %LoadGlobalF32.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.f32 	%f3662, [%rd34];
$L__BB0_19:                             // %LoadGlobalF32.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r1774, %r29, %r23;
	setp.ge.u32 	%p1105, %r1774, %r20;
	setp.lt.u32 	%p1106, %r22, 8;
	or.pred  	%p1107, %p1106, %p1105;
	mov.f32 	%f3655, %f8;
	@%p1107 bra 	$L__BB0_502;
// %bb.20:                              // %LoadGlobalF32.endif.endif...if
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s64 	%rd35, %rd34, %rd494;
	ld.global.f32 	%f3663, [%rd35];
	mov.f32 	%f3655, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_49:                             // %MovF2F3
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3664, %f3672;
	mov.f32 	%f3665, %f3673;
	mov.f32 	%f3666, %f3674;
	mov.f32 	%f3667, %f3675;
	mov.f32 	%f3668, %f3676;
	mov.f32 	%f3669, %f3677;
	mov.f32 	%f3670, %f3678;
	mov.f32 	%f3671, %f3679;
	bra.uni 	$L__BB0_502;
$L__BB0_470:                            // %StoreGlobalBF16
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u32 	%r463, [%rd25+4];
	and.b32  	%r464, %r463, 15;
	shr.u32 	%r465, %r463, 4;
	shfl.sync.idx.b32	%r466, %r16, %r464, 31, -1;
	shfl.sync.idx.b32	%r467, %r17, %r464, 31, -1;
	cvt.u64.u32 	%rd212, %r466;
	cvt.u64.u32 	%rd213, %r467;
	shl.b64 	%rd214, %rd213, 32;
	or.b64  	%rd215, %rd212, %rd214;
	add.s32 	%r394, %r465, %r18;
	shfl.sync.idx.b32	%r395, %r10, %r464, 31, -1;
	shfl.sync.idx.b32	%r468, %r9, %r464, 31, -1;
	shfl.sync.idx.b32	%r396, %r11, %r464, 31, -1;
	shfl.sync.idx.b32	%r397, %r12, %r464, 31, -1;
	shfl.sync.idx.b32	%r398, %r15, %r464, 31, -1;
	mul.lo.s32 	%r469, %r468, %r394;
	mul.wide.s32 	%rd216, %r469, 2;
	add.s64 	%rd144, %rd215, %rd216;
	setp.ge.u32 	%p32, %r394, %r395;
	@%p32 bra 	$L__BB0_472;
// %bb.471:                             // %StoreGlobalBF16.if
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r470, %f3648;
	bfe.u32 	%r471, %r470, 16, 1;
	add.s32 	%r472, %r471, %r470;
	add.s32 	%r473, %r472, 32767;
	setp.nan.f32 	%p33, %f3648, %f3648;
	or.b32  	%r474, %r470, 4194304;
	selp.b32 	%r475, %r474, %r473, %p33;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs9}, %r475; }
	st.global.b16 	[%rd144], %rs9;
$L__BB0_472:                            // %StoreGlobalBF16.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r399, %r398, %r394;
	cvt.s64.s32 	%rd145, %r396;
	mul.wide.s32 	%rd217, %r396, 2;
	add.s64 	%rd146, %rd144, %rd217;
	setp.ge.u32 	%p34, %r399, %r395;
	setp.lt.u32 	%p35, %r397, 2;
	or.pred  	%p37, %p35, %p34;
	@%p37 bra 	$L__BB0_474;
// %bb.473:                             // %StoreGlobalBF16.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r476, %f3649;
	bfe.u32 	%r477, %r476, 16, 1;
	add.s32 	%r478, %r477, %r476;
	add.s32 	%r479, %r478, 32767;
	setp.nan.f32 	%p36, %f3649, %f3649;
	or.b32  	%r480, %r476, 4194304;
	selp.b32 	%r481, %r480, %r479, %p36;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs10}, %r481; }
	st.global.b16 	[%rd146], %rs10;
$L__BB0_474:                            // %StoreGlobalBF16.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r400, %r399, %r398;
	shl.b64 	%rd218, %rd145, 1;
	add.s64 	%rd147, %rd146, %rd218;
	setp.ge.u32 	%p38, %r400, %r395;
	setp.lt.u32 	%p39, %r397, 3;
	or.pred  	%p41, %p39, %p38;
	@%p41 bra 	$L__BB0_476;
// %bb.475:                             // %StoreGlobalBF16.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r482, %f3650;
	bfe.u32 	%r483, %r482, 16, 1;
	add.s32 	%r484, %r483, %r482;
	add.s32 	%r485, %r484, 32767;
	setp.nan.f32 	%p40, %f3650, %f3650;
	or.b32  	%r486, %r482, 4194304;
	selp.b32 	%r487, %r486, %r485, %p40;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs11}, %r487; }
	st.global.b16 	[%rd147], %rs11;
$L__BB0_476:                            // %StoreGlobalBF16.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r401, %r400, %r398;
	add.s64 	%rd148, %rd147, %rd218;
	setp.ge.u32 	%p42, %r401, %r395;
	setp.lt.u32 	%p43, %r397, 4;
	or.pred  	%p45, %p43, %p42;
	@%p45 bra 	$L__BB0_478;
// %bb.477:                             // %StoreGlobalBF16.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r488, %f3651;
	bfe.u32 	%r489, %r488, 16, 1;
	add.s32 	%r490, %r489, %r488;
	add.s32 	%r491, %r490, 32767;
	setp.nan.f32 	%p44, %f3651, %f3651;
	or.b32  	%r492, %r488, 4194304;
	selp.b32 	%r493, %r492, %r491, %p44;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs12}, %r493; }
	st.global.b16 	[%rd148], %rs12;
$L__BB0_478:                            // %StoreGlobalBF16.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r402, %r401, %r398;
	add.s64 	%rd149, %rd148, %rd218;
	setp.ge.u32 	%p46, %r402, %r395;
	setp.lt.u32 	%p47, %r397, 5;
	or.pred  	%p49, %p47, %p46;
	@%p49 bra 	$L__BB0_480;
// %bb.479:                             // %StoreGlobalBF16.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r494, %f3652;
	bfe.u32 	%r495, %r494, 16, 1;
	add.s32 	%r496, %r495, %r494;
	add.s32 	%r497, %r496, 32767;
	setp.nan.f32 	%p48, %f3652, %f3652;
	or.b32  	%r498, %r494, 4194304;
	selp.b32 	%r499, %r498, %r497, %p48;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs13}, %r499; }
	st.global.b16 	[%rd149], %rs13;
$L__BB0_480:                            // %StoreGlobalBF16.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r403, %r402, %r398;
	add.s64 	%rd150, %rd149, %rd218;
	setp.ge.u32 	%p50, %r403, %r395;
	setp.lt.u32 	%p51, %r397, 6;
	or.pred  	%p53, %p51, %p50;
	@%p53 bra 	$L__BB0_482;
// %bb.481:                             // %StoreGlobalBF16.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r500, %f3653;
	bfe.u32 	%r501, %r500, 16, 1;
	add.s32 	%r502, %r501, %r500;
	add.s32 	%r503, %r502, 32767;
	setp.nan.f32 	%p52, %f3653, %f3653;
	or.b32  	%r504, %r500, 4194304;
	selp.b32 	%r505, %r504, %r503, %p52;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs14}, %r505; }
	st.global.b16 	[%rd150], %rs14;
$L__BB0_482:                            // %StoreGlobalBF16.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r404, %r403, %r398;
	add.s64 	%rd151, %rd150, %rd218;
	setp.ge.u32 	%p54, %r404, %r395;
	setp.lt.u32 	%p55, %r397, 7;
	or.pred  	%p57, %p55, %p54;
	@%p57 bra 	$L__BB0_484;
// %bb.483:                             // %StoreGlobalBF16.endif.end...if
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r506, %f3654;
	bfe.u32 	%r507, %r506, 16, 1;
	add.s32 	%r508, %r507, %r506;
	add.s32 	%r509, %r508, 32767;
	setp.nan.f32 	%p56, %f3654, %f3654;
	or.b32  	%r510, %r506, 4194304;
	selp.b32 	%r511, %r510, %r509, %p56;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs15}, %r511; }
	st.global.b16 	[%rd151], %rs15;
$L__BB0_484:                            // %StoreGlobalBF16.endif.end...endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r512, %r404, %r398;
	setp.ge.u32 	%p58, %r512, %r395;
	setp.lt.u32 	%p59, %r397, 8;
	or.pred  	%p61, %p59, %p58;
	mov.f32 	%f3655, %f8;
	@%p61 bra 	$L__BB0_502;
// %bb.485:                             // %StoreGlobalBF16.endif.end...endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r513, %f8;
	bfe.u32 	%r514, %r513, 16, 1;
	add.s32 	%r515, %r514, %r513;
	add.s32 	%r516, %r515, 32767;
	setp.nan.f32 	%p60, %f8, %f8;
	or.b32  	%r517, %r513, 4194304;
	selp.b32 	%r518, %r517, %r516, %p60;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs16}, %r518; }
	add.s64 	%rd152, %rd151, %rd218;
	st.global.b16 	[%rd152], %rs16;
	mov.f32 	%f3655, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_47:                             // %MovF0F3
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3648, %f3672;
	mov.f32 	%f3649, %f3673;
	mov.f32 	%f3650, %f3674;
	mov.f32 	%f3651, %f3675;
	mov.f32 	%f3652, %f3676;
	mov.f32 	%f3653, %f3677;
	mov.f32 	%f3654, %f3678;
	mov.f32 	%f3655, %f3679;
	bra.uni 	$L__BB0_502;
$L__BB0_422:                            // %LoadGlobalF16
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u32 	%r551, [%rd25+4];
	and.b32  	%r552, %r551, 15;
	shr.u32 	%r553, %r551, 4;
	shfl.sync.idx.b32	%r554, %r16, %r552, 31, -1;
	shfl.sync.idx.b32	%r555, %r17, %r552, 31, -1;
	cvt.u64.u32 	%rd248, %r554;
	cvt.u64.u32 	%rd249, %r555;
	shl.b64 	%rd250, %rd249, 32;
	or.b64  	%rd251, %rd248, %rd250;
	add.s32 	%r361, %r553, %r18;
	shfl.sync.idx.b32	%r362, %r10, %r552, 31, -1;
	shfl.sync.idx.b32	%r556, %r9, %r552, 31, -1;
	shfl.sync.idx.b32	%r363, %r11, %r552, 31, -1;
	shfl.sync.idx.b32	%r364, %r12, %r552, 31, -1;
	shfl.sync.idx.b32	%r365, %r15, %r552, 31, -1;
	mul.lo.s32 	%r557, %r556, %r361;
	mul.wide.s32 	%rd252, %r557, 2;
	add.s64 	%rd117, %rd251, %rd252;
	setp.ge.u32 	%p106, %r361, %r362;
	mov.f32 	%f3657, 0f00000000;
	mov.f32 	%f3656, %f3657;
	@%p106 bra 	$L__BB0_424;
// %bb.423:                             // %LoadGlobalF16.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.b16 	%rs25, [%rd117];
	cvt.f32.f16 	%f3656, %rs25;
$L__BB0_424:                            // %LoadGlobalF16.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r366, %r365, %r361;
	cvt.s64.s32 	%rd118, %r363;
	mul.wide.s32 	%rd253, %r363, 2;
	add.s64 	%rd119, %rd117, %rd253;
	setp.ge.u32 	%p107, %r366, %r362;
	setp.lt.u32 	%p108, %r364, 2;
	or.pred  	%p109, %p108, %p107;
	@%p109 bra 	$L__BB0_426;
// %bb.425:                             // %LoadGlobalF16.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.b16 	%rs26, [%rd119];
	cvt.f32.f16 	%f3657, %rs26;
$L__BB0_426:                            // %LoadGlobalF16.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r367, %r366, %r365;
	shl.b64 	%rd254, %rd118, 1;
	add.s64 	%rd120, %rd119, %rd254;
	setp.ge.u32 	%p110, %r367, %r362;
	setp.lt.u32 	%p111, %r364, 3;
	mov.f32 	%f3659, 0f00000000;
	or.pred  	%p112, %p111, %p110;
	mov.f32 	%f3658, %f3659;
	@%p112 bra 	$L__BB0_428;
// %bb.427:                             // %LoadGlobalF16.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.b16 	%rs27, [%rd120];
	cvt.f32.f16 	%f3658, %rs27;
$L__BB0_428:                            // %LoadGlobalF16.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r368, %r367, %r365;
	add.s64 	%rd121, %rd120, %rd254;
	setp.ge.u32 	%p113, %r368, %r362;
	setp.lt.u32 	%p114, %r364, 4;
	or.pred  	%p115, %p114, %p113;
	@%p115 bra 	$L__BB0_430;
// %bb.429:                             // %LoadGlobalF16.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.b16 	%rs28, [%rd121];
	cvt.f32.f16 	%f3659, %rs28;
$L__BB0_430:                            // %LoadGlobalF16.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r369, %r368, %r365;
	add.s64 	%rd122, %rd121, %rd254;
	setp.ge.u32 	%p116, %r369, %r362;
	setp.lt.u32 	%p117, %r364, 5;
	mov.f32 	%f3661, 0f00000000;
	or.pred  	%p118, %p117, %p116;
	mov.f32 	%f3660, %f3661;
	@%p118 bra 	$L__BB0_432;
// %bb.431:                             // %LoadGlobalF16.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.b16 	%rs29, [%rd122];
	cvt.f32.f16 	%f3660, %rs29;
$L__BB0_432:                            // %LoadGlobalF16.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r370, %r369, %r365;
	add.s64 	%rd123, %rd122, %rd254;
	setp.ge.u32 	%p119, %r370, %r362;
	setp.lt.u32 	%p120, %r364, 6;
	or.pred  	%p121, %p120, %p119;
	@%p121 bra 	$L__BB0_434;
// %bb.433:                             // %LoadGlobalF16.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.b16 	%rs30, [%rd123];
	cvt.f32.f16 	%f3661, %rs30;
$L__BB0_434:                            // %LoadGlobalF16.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r371, %r370, %r365;
	add.s64 	%rd124, %rd123, %rd254;
	setp.ge.u32 	%p122, %r371, %r362;
	setp.lt.u32 	%p123, %r364, 7;
	mov.f32 	%f3663, 0f00000000;
	or.pred  	%p124, %p123, %p122;
	mov.f32 	%f3662, %f3663;
	@%p124 bra 	$L__BB0_436;
// %bb.435:                             // %LoadGlobalF16.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.b16 	%rs31, [%rd124];
	cvt.f32.f16 	%f3662, %rs31;
$L__BB0_436:                            // %LoadGlobalF16.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r558, %r371, %r365;
	setp.ge.u32 	%p125, %r558, %r362;
	setp.lt.u32 	%p126, %r364, 8;
	or.pred  	%p127, %p126, %p125;
	mov.f32 	%f3655, %f8;
	@%p127 bra 	$L__BB0_502;
// %bb.437:                             // %LoadGlobalF16.endif.endif...if
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s64 	%rd125, %rd124, %rd254;
	ld.global.b16 	%rs32, [%rd125];
	cvt.f32.f16 	%f3663, %rs32;
	mov.f32 	%f3655, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_44:                             // %MovF0F2
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3648, %f3664;
	mov.f32 	%f3649, %f3665;
	mov.f32 	%f3650, %f3666;
	mov.f32 	%f3651, %f3667;
	mov.f32 	%f3652, %f3668;
	mov.f32 	%f3653, %f3669;
	mov.f32 	%f3654, %f3670;
	mov.f32 	%f3655, %f3671;
	bra.uni 	$L__BB0_502;
$L__BB0_37:                             // %FAdd
                                        //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f3648, %f3648, %f3656;
	add.rn.f32 	%f3649, %f3649, %f3657;
	add.rn.f32 	%f3650, %f3650, %f3658;
	add.rn.f32 	%f3651, %f3651, %f3659;
	add.rn.f32 	%f3652, %f3652, %f3660;
	add.rn.f32 	%f3653, %f3653, %f3661;
	add.rn.f32 	%f3654, %f3654, %f3662;
	add.rn.f32 	%f3655, %f8, %f3663;
	bra.uni 	$L__BB0_502;
$L__BB0_45:                             // %MovF1F2
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3656, %f3664;
	mov.f32 	%f3657, %f3665;
	mov.f32 	%f3658, %f3666;
	mov.f32 	%f3659, %f3667;
	mov.f32 	%f3660, %f3668;
	mov.f32 	%f3661, %f3669;
	mov.f32 	%f3662, %f3670;
	mov.f32 	%f3663, %f3671;
	bra.uni 	$L__BB0_502;
$L__BB0_42:                             // %MovF2F1
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3664, %f3656;
	mov.f32 	%f3665, %f3657;
	mov.f32 	%f3666, %f3658;
	mov.f32 	%f3667, %f3659;
	mov.f32 	%f3668, %f3660;
	mov.f32 	%f3669, %f3661;
	mov.f32 	%f3670, %f3662;
	mov.f32 	%f3671, %f3663;
	bra.uni 	$L__BB0_502;
$L__BB0_58:                             // %LoadF1Imm
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.f32 	%f3656, [%rd25+4];
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3657, %f3656;
	mov.f32 	%f3658, %f3656;
	mov.f32 	%f3659, %f3656;
	mov.f32 	%f3660, %f3656;
	mov.f32 	%f3661, %f3656;
	mov.f32 	%f3662, %f3656;
	mov.f32 	%f3663, %f3656;
	bra.uni 	$L__BB0_502;
$L__BB0_57:                             // %LoadF0Imm
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.f32 	%f3648, [%rd25+4];
	mov.f32 	%f3649, %f3648;
	mov.f32 	%f3650, %f3648;
	mov.f32 	%f3651, %f3648;
	mov.f32 	%f3652, %f3648;
	mov.f32 	%f3653, %f3648;
	mov.f32 	%f3654, %f3648;
	mov.f32 	%f3655, %f3648;
	bra.uni 	$L__BB0_502;
$L__BB0_48:                             // %MovF1F3
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3656, %f3672;
	mov.f32 	%f3657, %f3673;
	mov.f32 	%f3658, %f3674;
	mov.f32 	%f3659, %f3675;
	mov.f32 	%f3660, %f3676;
	mov.f32 	%f3661, %f3677;
	mov.f32 	%f3662, %f3678;
	mov.f32 	%f3663, %f3679;
	bra.uni 	$L__BB0_502;
$L__BB0_21:                             // %StoreGlobalF32
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u32 	%r1759, [%rd25+4];
	and.b32  	%r1760, %r1759, 15;
	shr.u32 	%r1761, %r1759, 4;
	shfl.sync.idx.b32	%r1762, %r16, %r1760, 31, -1;
	shfl.sync.idx.b32	%r1763, %r17, %r1760, 31, -1;
	cvt.u64.u32 	%rd476, %r1762;
	cvt.u64.u32 	%rd477, %r1763;
	shl.b64 	%rd478, %rd477, 32;
	or.b64  	%rd479, %rd476, %rd478;
	add.s32 	%r30, %r1761, %r18;
	shfl.sync.idx.b32	%r31, %r10, %r1760, 31, -1;
	shfl.sync.idx.b32	%r1764, %r9, %r1760, 31, -1;
	shfl.sync.idx.b32	%r32, %r11, %r1760, 31, -1;
	shfl.sync.idx.b32	%r33, %r12, %r1760, 31, -1;
	shfl.sync.idx.b32	%r34, %r15, %r1760, 31, -1;
	mul.lo.s32 	%r1765, %r1764, %r30;
	mul.wide.s32 	%rd480, %r1765, 4;
	add.s64 	%rd36, %rd479, %rd480;
	setp.ge.u32 	%p1064, %r30, %r31;
	@%p1064 bra 	$L__BB0_23;
// %bb.22:                              // %StoreGlobalF32.if
                                        //   in Loop: Header=BB0_3 Depth=1
	st.global.f32 	[%rd36], %f3648;
$L__BB0_23:                             // %StoreGlobalF32.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r35, %r34, %r30;
	cvt.s64.s32 	%rd37, %r32;
	mul.wide.s32 	%rd481, %r32, 4;
	add.s64 	%rd38, %rd36, %rd481;
	setp.ge.u32 	%p1065, %r35, %r31;
	setp.lt.u32 	%p1066, %r33, 2;
	or.pred  	%p1067, %p1066, %p1065;
	@%p1067 bra 	$L__BB0_25;
// %bb.24:                              // %StoreGlobalF32.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	st.global.f32 	[%rd38], %f3649;
$L__BB0_25:                             // %StoreGlobalF32.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r36, %r35, %r34;
	shl.b64 	%rd482, %rd37, 2;
	add.s64 	%rd39, %rd38, %rd482;
	setp.ge.u32 	%p1068, %r36, %r31;
	setp.lt.u32 	%p1069, %r33, 3;
	or.pred  	%p1070, %p1069, %p1068;
	@%p1070 bra 	$L__BB0_27;
// %bb.26:                              // %StoreGlobalF32.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	st.global.f32 	[%rd39], %f3650;
$L__BB0_27:                             // %StoreGlobalF32.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r37, %r36, %r34;
	add.s64 	%rd40, %rd39, %rd482;
	setp.ge.u32 	%p1071, %r37, %r31;
	setp.lt.u32 	%p1072, %r33, 4;
	or.pred  	%p1073, %p1072, %p1071;
	@%p1073 bra 	$L__BB0_29;
// %bb.28:                              // %StoreGlobalF32.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	st.global.f32 	[%rd40], %f3651;
$L__BB0_29:                             // %StoreGlobalF32.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r38, %r37, %r34;
	add.s64 	%rd41, %rd40, %rd482;
	setp.ge.u32 	%p1074, %r38, %r31;
	setp.lt.u32 	%p1075, %r33, 5;
	or.pred  	%p1076, %p1075, %p1074;
	@%p1076 bra 	$L__BB0_31;
// %bb.30:                              // %StoreGlobalF32.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	st.global.f32 	[%rd41], %f3652;
$L__BB0_31:                             // %StoreGlobalF32.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r39, %r38, %r34;
	add.s64 	%rd42, %rd41, %rd482;
	setp.ge.u32 	%p1077, %r39, %r31;
	setp.lt.u32 	%p1078, %r33, 6;
	or.pred  	%p1079, %p1078, %p1077;
	@%p1079 bra 	$L__BB0_33;
// %bb.32:                              // %StoreGlobalF32.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	st.global.f32 	[%rd42], %f3653;
$L__BB0_33:                             // %StoreGlobalF32.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r40, %r39, %r34;
	add.s64 	%rd43, %rd42, %rd482;
	setp.ge.u32 	%p1080, %r40, %r31;
	setp.lt.u32 	%p1081, %r33, 7;
	or.pred  	%p1082, %p1081, %p1080;
	@%p1082 bra 	$L__BB0_35;
// %bb.34:                              // %StoreGlobalF32.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	st.global.f32 	[%rd43], %f3654;
$L__BB0_35:                             // %StoreGlobalF32.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r1766, %r40, %r34;
	setp.ge.u32 	%p1083, %r1766, %r31;
	setp.lt.u32 	%p1084, %r33, 8;
	or.pred  	%p1085, %p1084, %p1083;
	mov.f32 	%f3655, %f8;
	@%p1085 bra 	$L__BB0_502;
// %bb.36:                              // %StoreGlobalF32.endif.endi...if
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s64 	%rd44, %rd43, %rd482;
	st.global.f32 	[%rd44], %f8;
	mov.f32 	%f3655, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_40:                             // %MovF3F0
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3672, %f3648;
	mov.f32 	%f3673, %f3649;
	mov.f32 	%f3674, %f3650;
	mov.f32 	%f3675, %f3651;
	mov.f32 	%f3676, %f3652;
	mov.f32 	%f3677, %f3653;
	mov.f32 	%f3678, %f3654;
	mov.f32 	%f3679, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_64:                             // %WarpAllReduceProd
                                        //   in Loop: Header=BB0_3 Depth=1
	shfl.sync.bfly.b32	%f3000, %f3648, 16, 31, -1;
	mul.rn.f32 	%f3001, %f3648, %f3000;
	shfl.sync.bfly.b32	%f3002, %f3001, 8, 31, -1;
	mul.rn.f32 	%f3003, %f3001, %f3002;
	shfl.sync.bfly.b32	%f3004, %f3003, 4, 31, -1;
	mul.rn.f32 	%f3005, %f3003, %f3004;
	shfl.sync.bfly.b32	%f3006, %f3005, 2, 31, -1;
	mul.rn.f32 	%f3007, %f3005, %f3006;
	shfl.sync.bfly.b32	%f3008, %f3007, 1, 31, -1;
	mul.rn.f32 	%f3648, %f3007, %f3008;
	shfl.sync.bfly.b32	%f3009, %f3649, 16, 31, -1;
	mul.rn.f32 	%f3010, %f3649, %f3009;
	shfl.sync.bfly.b32	%f3011, %f3010, 8, 31, -1;
	mul.rn.f32 	%f3012, %f3010, %f3011;
	shfl.sync.bfly.b32	%f3013, %f3012, 4, 31, -1;
	mul.rn.f32 	%f3014, %f3012, %f3013;
	shfl.sync.bfly.b32	%f3015, %f3014, 2, 31, -1;
	mul.rn.f32 	%f3016, %f3014, %f3015;
	shfl.sync.bfly.b32	%f3017, %f3016, 1, 31, -1;
	mul.rn.f32 	%f3649, %f3016, %f3017;
	shfl.sync.bfly.b32	%f3018, %f3650, 16, 31, -1;
	mul.rn.f32 	%f3019, %f3650, %f3018;
	shfl.sync.bfly.b32	%f3020, %f3019, 8, 31, -1;
	mul.rn.f32 	%f3021, %f3019, %f3020;
	shfl.sync.bfly.b32	%f3022, %f3021, 4, 31, -1;
	mul.rn.f32 	%f3023, %f3021, %f3022;
	shfl.sync.bfly.b32	%f3024, %f3023, 2, 31, -1;
	mul.rn.f32 	%f3025, %f3023, %f3024;
	shfl.sync.bfly.b32	%f3026, %f3025, 1, 31, -1;
	mul.rn.f32 	%f3650, %f3025, %f3026;
	shfl.sync.bfly.b32	%f3027, %f3651, 16, 31, -1;
	mul.rn.f32 	%f3028, %f3651, %f3027;
	shfl.sync.bfly.b32	%f3029, %f3028, 8, 31, -1;
	mul.rn.f32 	%f3030, %f3028, %f3029;
	shfl.sync.bfly.b32	%f3031, %f3030, 4, 31, -1;
	mul.rn.f32 	%f3032, %f3030, %f3031;
	shfl.sync.bfly.b32	%f3033, %f3032, 2, 31, -1;
	mul.rn.f32 	%f3034, %f3032, %f3033;
	shfl.sync.bfly.b32	%f3035, %f3034, 1, 31, -1;
	mul.rn.f32 	%f3651, %f3034, %f3035;
	shfl.sync.bfly.b32	%f3036, %f3652, 16, 31, -1;
	mul.rn.f32 	%f3037, %f3652, %f3036;
	shfl.sync.bfly.b32	%f3038, %f3037, 8, 31, -1;
	mul.rn.f32 	%f3039, %f3037, %f3038;
	shfl.sync.bfly.b32	%f3040, %f3039, 4, 31, -1;
	mul.rn.f32 	%f3041, %f3039, %f3040;
	shfl.sync.bfly.b32	%f3042, %f3041, 2, 31, -1;
	mul.rn.f32 	%f3043, %f3041, %f3042;
	shfl.sync.bfly.b32	%f3044, %f3043, 1, 31, -1;
	mul.rn.f32 	%f3652, %f3043, %f3044;
	shfl.sync.bfly.b32	%f3045, %f3653, 16, 31, -1;
	mul.rn.f32 	%f3046, %f3653, %f3045;
	shfl.sync.bfly.b32	%f3047, %f3046, 8, 31, -1;
	mul.rn.f32 	%f3048, %f3046, %f3047;
	shfl.sync.bfly.b32	%f3049, %f3048, 4, 31, -1;
	mul.rn.f32 	%f3050, %f3048, %f3049;
	shfl.sync.bfly.b32	%f3051, %f3050, 2, 31, -1;
	mul.rn.f32 	%f3052, %f3050, %f3051;
	shfl.sync.bfly.b32	%f3053, %f3052, 1, 31, -1;
	mul.rn.f32 	%f3653, %f3052, %f3053;
	shfl.sync.bfly.b32	%f3054, %f3654, 16, 31, -1;
	mul.rn.f32 	%f3055, %f3654, %f3054;
	shfl.sync.bfly.b32	%f3056, %f3055, 8, 31, -1;
	mul.rn.f32 	%f3057, %f3055, %f3056;
	shfl.sync.bfly.b32	%f3058, %f3057, 4, 31, -1;
	mul.rn.f32 	%f3059, %f3057, %f3058;
	shfl.sync.bfly.b32	%f3060, %f3059, 2, 31, -1;
	mul.rn.f32 	%f3061, %f3059, %f3060;
	shfl.sync.bfly.b32	%f3062, %f3061, 1, 31, -1;
	mul.rn.f32 	%f3654, %f3061, %f3062;
	shfl.sync.bfly.b32	%f3063, %f8, 16, 31, -1;
	mul.rn.f32 	%f3064, %f8, %f3063;
	shfl.sync.bfly.b32	%f3065, %f3064, 8, 31, -1;
	mul.rn.f32 	%f3066, %f3064, %f3065;
	shfl.sync.bfly.b32	%f3067, %f3066, 4, 31, -1;
	mul.rn.f32 	%f3068, %f3066, %f3067;
	shfl.sync.bfly.b32	%f3069, %f3068, 2, 31, -1;
	mul.rn.f32 	%f3070, %f3068, %f3069;
	shfl.sync.bfly.b32	%f3071, %f3070, 1, 31, -1;
	mul.rn.f32 	%f3655, %f3070, %f3071;
	bra.uni 	$L__BB0_502;
$L__BB0_50:                             // %FMul
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f3648, %f3648, %f3656;
	mul.rn.f32 	%f3649, %f3649, %f3657;
	mul.rn.f32 	%f3650, %f3650, %f3658;
	mul.rn.f32 	%f3651, %f3651, %f3659;
	mul.rn.f32 	%f3652, %f3652, %f3660;
	mul.rn.f32 	%f3653, %f3653, %f3661;
	mul.rn.f32 	%f3654, %f3654, %f3662;
	mul.rn.f32 	%f3655, %f8, %f3663;
	bra.uni 	$L__BB0_502;
$L__BB0_53:                             // %FRSub
                                        //   in Loop: Header=BB0_3 Depth=1
	sub.rn.f32 	%f3648, %f3656, %f3648;
	sub.rn.f32 	%f3649, %f3657, %f3649;
	sub.rn.f32 	%f3650, %f3658, %f3650;
	sub.rn.f32 	%f3651, %f3659, %f3651;
	sub.rn.f32 	%f3652, %f3660, %f3652;
	sub.rn.f32 	%f3653, %f3661, %f3653;
	sub.rn.f32 	%f3654, %f3662, %f3654;
	sub.rn.f32 	%f3655, %f3663, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_38:                             // %MovF1F0
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3656, %f3648;
	mov.f32 	%f3657, %f3649;
	mov.f32 	%f3658, %f3650;
	mov.f32 	%f3659, %f3651;
	mov.f32 	%f3660, %f3652;
	mov.f32 	%f3661, %f3653;
	mov.f32 	%f3662, %f3654;
	mov.f32 	%f3663, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_54:                             // %FDiv
                                        //   in Loop: Header=BB0_3 Depth=1
	div.rn.f32 	%f3648, %f3648, %f3656;
	div.rn.f32 	%f3649, %f3649, %f3657;
	div.rn.f32 	%f3650, %f3650, %f3658;
	div.rn.f32 	%f3651, %f3651, %f3659;
	div.rn.f32 	%f3652, %f3652, %f3660;
	div.rn.f32 	%f3653, %f3653, %f3661;
	div.rn.f32 	%f3654, %f3654, %f3662;
	div.rn.f32 	%f3655, %f8, %f3663;
	bra.uni 	$L__BB0_502;
$L__BB0_46:                             // %MovF3F2
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3672, %f3664;
	mov.f32 	%f3673, %f3665;
	mov.f32 	%f3674, %f3666;
	mov.f32 	%f3675, %f3667;
	mov.f32 	%f3676, %f3668;
	mov.f32 	%f3677, %f3669;
	mov.f32 	%f3678, %f3670;
	mov.f32 	%f3679, %f3671;
	bra.uni 	$L__BB0_502;
$L__BB0_39:                             // %MovF2F0
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3664, %f3648;
	mov.f32 	%f3665, %f3649;
	mov.f32 	%f3666, %f3650;
	mov.f32 	%f3667, %f3651;
	mov.f32 	%f3668, %f3652;
	mov.f32 	%f3669, %f3653;
	mov.f32 	%f3670, %f3654;
	mov.f32 	%f3671, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_51:                             // %FMA
                                        //   in Loop: Header=BB0_3 Depth=1
	fma.rn.f32 	%f3648, %f3656, %f3664, %f3648;
	fma.rn.f32 	%f3649, %f3657, %f3665, %f3649;
	fma.rn.f32 	%f3650, %f3658, %f3666, %f3650;
	fma.rn.f32 	%f3651, %f3659, %f3667, %f3651;
	fma.rn.f32 	%f3652, %f3660, %f3668, %f3652;
	fma.rn.f32 	%f3653, %f3661, %f3669, %f3653;
	fma.rn.f32 	%f3654, %f3662, %f3670, %f3654;
	fma.rn.f32 	%f3655, %f3663, %f3671, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_43:                             // %MovF3F1
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3672, %f3656;
	mov.f32 	%f3673, %f3657;
	mov.f32 	%f3674, %f3658;
	mov.f32 	%f3675, %f3659;
	mov.f32 	%f3676, %f3660;
	mov.f32 	%f3677, %f3661;
	mov.f32 	%f3678, %f3662;
	mov.f32 	%f3679, %f3663;
	bra.uni 	$L__BB0_502;
$L__BB0_41:                             // %MovF0F1
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f3648, %f3656;
	mov.f32 	%f3649, %f3657;
	mov.f32 	%f3650, %f3658;
	mov.f32 	%f3651, %f3659;
	mov.f32 	%f3652, %f3660;
	mov.f32 	%f3653, %f3661;
	mov.f32 	%f3654, %f3662;
	mov.f32 	%f3655, %f3663;
	bra.uni 	$L__BB0_502;
$L__BB0_63:                             // %WarpAllReduceMin
                                        //   in Loop: Header=BB0_3 Depth=1
	shfl.sync.bfly.b32	%f3072, %f3648, 16, 31, -1;
	mov.b32 	%r1599, %f3072;
	mov.b32 	%r1600, %f3648;
	setp.nan.f32 	%p744, %f3648, %f3072;
	min.f32 	%f3073, %f3648, %f3072;
	selp.f32 	%f3074, 0f7FC00000, %f3073, %p744;
	setp.eq.s32 	%p745, %r1600, -2147483648;
	selp.f32 	%f3075, %f3648, %f3074, %p745;
	setp.eq.s32 	%p746, %r1599, -2147483648;
	selp.f32 	%f3076, %f3072, %f3075, %p746;
	setp.eq.f32 	%p747, %f3074, 0f00000000;
	selp.f32 	%f3077, %f3076, %f3074, %p747;
	mov.b32 	%r1601, %f3077;
	shfl.sync.bfly.b32	%f3078, %f3077, 8, 31, -1;
	mov.b32 	%r1602, %f3078;
	setp.nan.f32 	%p748, %f3077, %f3078;
	min.f32 	%f3079, %f3077, %f3078;
	selp.f32 	%f3080, 0f7FC00000, %f3079, %p748;
	setp.eq.s32 	%p749, %r1601, -2147483648;
	selp.f32 	%f3081, %f3077, %f3080, %p749;
	setp.eq.s32 	%p750, %r1602, -2147483648;
	selp.f32 	%f3082, %f3078, %f3081, %p750;
	setp.eq.f32 	%p751, %f3080, 0f00000000;
	selp.f32 	%f3083, %f3082, %f3080, %p751;
	mov.b32 	%r1603, %f3083;
	shfl.sync.bfly.b32	%f3084, %f3083, 4, 31, -1;
	mov.b32 	%r1604, %f3084;
	setp.nan.f32 	%p752, %f3083, %f3084;
	min.f32 	%f3085, %f3083, %f3084;
	selp.f32 	%f3086, 0f7FC00000, %f3085, %p752;
	setp.eq.s32 	%p753, %r1603, -2147483648;
	selp.f32 	%f3087, %f3083, %f3086, %p753;
	setp.eq.s32 	%p754, %r1604, -2147483648;
	selp.f32 	%f3088, %f3084, %f3087, %p754;
	setp.eq.f32 	%p755, %f3086, 0f00000000;
	selp.f32 	%f3089, %f3088, %f3086, %p755;
	mov.b32 	%r1605, %f3089;
	shfl.sync.bfly.b32	%f3090, %f3089, 2, 31, -1;
	mov.b32 	%r1606, %f3090;
	setp.nan.f32 	%p756, %f3089, %f3090;
	min.f32 	%f3091, %f3089, %f3090;
	selp.f32 	%f3092, 0f7FC00000, %f3091, %p756;
	setp.eq.s32 	%p757, %r1605, -2147483648;
	selp.f32 	%f3093, %f3089, %f3092, %p757;
	setp.eq.s32 	%p758, %r1606, -2147483648;
	selp.f32 	%f3094, %f3090, %f3093, %p758;
	setp.eq.f32 	%p759, %f3092, 0f00000000;
	selp.f32 	%f3095, %f3094, %f3092, %p759;
	mov.b32 	%r1607, %f3095;
	shfl.sync.bfly.b32	%f3096, %f3095, 1, 31, -1;
	mov.b32 	%r1608, %f3096;
	setp.nan.f32 	%p760, %f3095, %f3096;
	min.f32 	%f3097, %f3095, %f3096;
	selp.f32 	%f3098, 0f7FC00000, %f3097, %p760;
	setp.eq.s32 	%p761, %r1607, -2147483648;
	selp.f32 	%f3099, %f3095, %f3098, %p761;
	setp.eq.s32 	%p762, %r1608, -2147483648;
	selp.f32 	%f3100, %f3096, %f3099, %p762;
	setp.eq.f32 	%p763, %f3098, 0f00000000;
	selp.f32 	%f3648, %f3100, %f3098, %p763;
	shfl.sync.bfly.b32	%f3101, %f3649, 16, 31, -1;
	mov.b32 	%r1609, %f3101;
	mov.b32 	%r1610, %f3649;
	setp.nan.f32 	%p764, %f3649, %f3101;
	min.f32 	%f3102, %f3649, %f3101;
	selp.f32 	%f3103, 0f7FC00000, %f3102, %p764;
	setp.eq.s32 	%p765, %r1610, -2147483648;
	selp.f32 	%f3104, %f3649, %f3103, %p765;
	setp.eq.s32 	%p766, %r1609, -2147483648;
	selp.f32 	%f3105, %f3101, %f3104, %p766;
	setp.eq.f32 	%p767, %f3103, 0f00000000;
	selp.f32 	%f3106, %f3105, %f3103, %p767;
	mov.b32 	%r1611, %f3106;
	shfl.sync.bfly.b32	%f3107, %f3106, 8, 31, -1;
	mov.b32 	%r1612, %f3107;
	setp.nan.f32 	%p768, %f3106, %f3107;
	min.f32 	%f3108, %f3106, %f3107;
	selp.f32 	%f3109, 0f7FC00000, %f3108, %p768;
	setp.eq.s32 	%p769, %r1611, -2147483648;
	selp.f32 	%f3110, %f3106, %f3109, %p769;
	setp.eq.s32 	%p770, %r1612, -2147483648;
	selp.f32 	%f3111, %f3107, %f3110, %p770;
	setp.eq.f32 	%p771, %f3109, 0f00000000;
	selp.f32 	%f3112, %f3111, %f3109, %p771;
	mov.b32 	%r1613, %f3112;
	shfl.sync.bfly.b32	%f3113, %f3112, 4, 31, -1;
	mov.b32 	%r1614, %f3113;
	setp.nan.f32 	%p772, %f3112, %f3113;
	min.f32 	%f3114, %f3112, %f3113;
	selp.f32 	%f3115, 0f7FC00000, %f3114, %p772;
	setp.eq.s32 	%p773, %r1613, -2147483648;
	selp.f32 	%f3116, %f3112, %f3115, %p773;
	setp.eq.s32 	%p774, %r1614, -2147483648;
	selp.f32 	%f3117, %f3113, %f3116, %p774;
	setp.eq.f32 	%p775, %f3115, 0f00000000;
	selp.f32 	%f3118, %f3117, %f3115, %p775;
	mov.b32 	%r1615, %f3118;
	shfl.sync.bfly.b32	%f3119, %f3118, 2, 31, -1;
	mov.b32 	%r1616, %f3119;
	setp.nan.f32 	%p776, %f3118, %f3119;
	min.f32 	%f3120, %f3118, %f3119;
	selp.f32 	%f3121, 0f7FC00000, %f3120, %p776;
	setp.eq.s32 	%p777, %r1615, -2147483648;
	selp.f32 	%f3122, %f3118, %f3121, %p777;
	setp.eq.s32 	%p778, %r1616, -2147483648;
	selp.f32 	%f3123, %f3119, %f3122, %p778;
	setp.eq.f32 	%p779, %f3121, 0f00000000;
	selp.f32 	%f3124, %f3123, %f3121, %p779;
	mov.b32 	%r1617, %f3124;
	shfl.sync.bfly.b32	%f3125, %f3124, 1, 31, -1;
	mov.b32 	%r1618, %f3125;
	setp.nan.f32 	%p780, %f3124, %f3125;
	min.f32 	%f3126, %f3124, %f3125;
	selp.f32 	%f3127, 0f7FC00000, %f3126, %p780;
	setp.eq.s32 	%p781, %r1617, -2147483648;
	selp.f32 	%f3128, %f3124, %f3127, %p781;
	setp.eq.s32 	%p782, %r1618, -2147483648;
	selp.f32 	%f3129, %f3125, %f3128, %p782;
	setp.eq.f32 	%p783, %f3127, 0f00000000;
	selp.f32 	%f3649, %f3129, %f3127, %p783;
	shfl.sync.bfly.b32	%f3130, %f3650, 16, 31, -1;
	mov.b32 	%r1619, %f3130;
	mov.b32 	%r1620, %f3650;
	setp.nan.f32 	%p784, %f3650, %f3130;
	min.f32 	%f3131, %f3650, %f3130;
	selp.f32 	%f3132, 0f7FC00000, %f3131, %p784;
	setp.eq.s32 	%p785, %r1620, -2147483648;
	selp.f32 	%f3133, %f3650, %f3132, %p785;
	setp.eq.s32 	%p786, %r1619, -2147483648;
	selp.f32 	%f3134, %f3130, %f3133, %p786;
	setp.eq.f32 	%p787, %f3132, 0f00000000;
	selp.f32 	%f3135, %f3134, %f3132, %p787;
	mov.b32 	%r1621, %f3135;
	shfl.sync.bfly.b32	%f3136, %f3135, 8, 31, -1;
	mov.b32 	%r1622, %f3136;
	setp.nan.f32 	%p788, %f3135, %f3136;
	min.f32 	%f3137, %f3135, %f3136;
	selp.f32 	%f3138, 0f7FC00000, %f3137, %p788;
	setp.eq.s32 	%p789, %r1621, -2147483648;
	selp.f32 	%f3139, %f3135, %f3138, %p789;
	setp.eq.s32 	%p790, %r1622, -2147483648;
	selp.f32 	%f3140, %f3136, %f3139, %p790;
	setp.eq.f32 	%p791, %f3138, 0f00000000;
	selp.f32 	%f3141, %f3140, %f3138, %p791;
	mov.b32 	%r1623, %f3141;
	shfl.sync.bfly.b32	%f3142, %f3141, 4, 31, -1;
	mov.b32 	%r1624, %f3142;
	setp.nan.f32 	%p792, %f3141, %f3142;
	min.f32 	%f3143, %f3141, %f3142;
	selp.f32 	%f3144, 0f7FC00000, %f3143, %p792;
	setp.eq.s32 	%p793, %r1623, -2147483648;
	selp.f32 	%f3145, %f3141, %f3144, %p793;
	setp.eq.s32 	%p794, %r1624, -2147483648;
	selp.f32 	%f3146, %f3142, %f3145, %p794;
	setp.eq.f32 	%p795, %f3144, 0f00000000;
	selp.f32 	%f3147, %f3146, %f3144, %p795;
	mov.b32 	%r1625, %f3147;
	shfl.sync.bfly.b32	%f3148, %f3147, 2, 31, -1;
	mov.b32 	%r1626, %f3148;
	setp.nan.f32 	%p796, %f3147, %f3148;
	min.f32 	%f3149, %f3147, %f3148;
	selp.f32 	%f3150, 0f7FC00000, %f3149, %p796;
	setp.eq.s32 	%p797, %r1625, -2147483648;
	selp.f32 	%f3151, %f3147, %f3150, %p797;
	setp.eq.s32 	%p798, %r1626, -2147483648;
	selp.f32 	%f3152, %f3148, %f3151, %p798;
	setp.eq.f32 	%p799, %f3150, 0f00000000;
	selp.f32 	%f3153, %f3152, %f3150, %p799;
	mov.b32 	%r1627, %f3153;
	shfl.sync.bfly.b32	%f3154, %f3153, 1, 31, -1;
	mov.b32 	%r1628, %f3154;
	setp.nan.f32 	%p800, %f3153, %f3154;
	min.f32 	%f3155, %f3153, %f3154;
	selp.f32 	%f3156, 0f7FC00000, %f3155, %p800;
	setp.eq.s32 	%p801, %r1627, -2147483648;
	selp.f32 	%f3157, %f3153, %f3156, %p801;
	setp.eq.s32 	%p802, %r1628, -2147483648;
	selp.f32 	%f3158, %f3154, %f3157, %p802;
	setp.eq.f32 	%p803, %f3156, 0f00000000;
	selp.f32 	%f3650, %f3158, %f3156, %p803;
	shfl.sync.bfly.b32	%f3159, %f3651, 16, 31, -1;
	mov.b32 	%r1629, %f3159;
	mov.b32 	%r1630, %f3651;
	setp.nan.f32 	%p804, %f3651, %f3159;
	min.f32 	%f3160, %f3651, %f3159;
	selp.f32 	%f3161, 0f7FC00000, %f3160, %p804;
	setp.eq.s32 	%p805, %r1630, -2147483648;
	selp.f32 	%f3162, %f3651, %f3161, %p805;
	setp.eq.s32 	%p806, %r1629, -2147483648;
	selp.f32 	%f3163, %f3159, %f3162, %p806;
	setp.eq.f32 	%p807, %f3161, 0f00000000;
	selp.f32 	%f3164, %f3163, %f3161, %p807;
	mov.b32 	%r1631, %f3164;
	shfl.sync.bfly.b32	%f3165, %f3164, 8, 31, -1;
	mov.b32 	%r1632, %f3165;
	setp.nan.f32 	%p808, %f3164, %f3165;
	min.f32 	%f3166, %f3164, %f3165;
	selp.f32 	%f3167, 0f7FC00000, %f3166, %p808;
	setp.eq.s32 	%p809, %r1631, -2147483648;
	selp.f32 	%f3168, %f3164, %f3167, %p809;
	setp.eq.s32 	%p810, %r1632, -2147483648;
	selp.f32 	%f3169, %f3165, %f3168, %p810;
	setp.eq.f32 	%p811, %f3167, 0f00000000;
	selp.f32 	%f3170, %f3169, %f3167, %p811;
	mov.b32 	%r1633, %f3170;
	shfl.sync.bfly.b32	%f3171, %f3170, 4, 31, -1;
	mov.b32 	%r1634, %f3171;
	setp.nan.f32 	%p812, %f3170, %f3171;
	min.f32 	%f3172, %f3170, %f3171;
	selp.f32 	%f3173, 0f7FC00000, %f3172, %p812;
	setp.eq.s32 	%p813, %r1633, -2147483648;
	selp.f32 	%f3174, %f3170, %f3173, %p813;
	setp.eq.s32 	%p814, %r1634, -2147483648;
	selp.f32 	%f3175, %f3171, %f3174, %p814;
	setp.eq.f32 	%p815, %f3173, 0f00000000;
	selp.f32 	%f3176, %f3175, %f3173, %p815;
	mov.b32 	%r1635, %f3176;
	shfl.sync.bfly.b32	%f3177, %f3176, 2, 31, -1;
	mov.b32 	%r1636, %f3177;
	setp.nan.f32 	%p816, %f3176, %f3177;
	min.f32 	%f3178, %f3176, %f3177;
	selp.f32 	%f3179, 0f7FC00000, %f3178, %p816;
	setp.eq.s32 	%p817, %r1635, -2147483648;
	selp.f32 	%f3180, %f3176, %f3179, %p817;
	setp.eq.s32 	%p818, %r1636, -2147483648;
	selp.f32 	%f3181, %f3177, %f3180, %p818;
	setp.eq.f32 	%p819, %f3179, 0f00000000;
	selp.f32 	%f3182, %f3181, %f3179, %p819;
	mov.b32 	%r1637, %f3182;
	shfl.sync.bfly.b32	%f3183, %f3182, 1, 31, -1;
	mov.b32 	%r1638, %f3183;
	setp.nan.f32 	%p820, %f3182, %f3183;
	min.f32 	%f3184, %f3182, %f3183;
	selp.f32 	%f3185, 0f7FC00000, %f3184, %p820;
	setp.eq.s32 	%p821, %r1637, -2147483648;
	selp.f32 	%f3186, %f3182, %f3185, %p821;
	setp.eq.s32 	%p822, %r1638, -2147483648;
	selp.f32 	%f3187, %f3183, %f3186, %p822;
	setp.eq.f32 	%p823, %f3185, 0f00000000;
	selp.f32 	%f3651, %f3187, %f3185, %p823;
	shfl.sync.bfly.b32	%f3188, %f3652, 16, 31, -1;
	mov.b32 	%r1639, %f3188;
	mov.b32 	%r1640, %f3652;
	setp.nan.f32 	%p824, %f3652, %f3188;
	min.f32 	%f3189, %f3652, %f3188;
	selp.f32 	%f3190, 0f7FC00000, %f3189, %p824;
	setp.eq.s32 	%p825, %r1640, -2147483648;
	selp.f32 	%f3191, %f3652, %f3190, %p825;
	setp.eq.s32 	%p826, %r1639, -2147483648;
	selp.f32 	%f3192, %f3188, %f3191, %p826;
	setp.eq.f32 	%p827, %f3190, 0f00000000;
	selp.f32 	%f3193, %f3192, %f3190, %p827;
	mov.b32 	%r1641, %f3193;
	shfl.sync.bfly.b32	%f3194, %f3193, 8, 31, -1;
	mov.b32 	%r1642, %f3194;
	setp.nan.f32 	%p828, %f3193, %f3194;
	min.f32 	%f3195, %f3193, %f3194;
	selp.f32 	%f3196, 0f7FC00000, %f3195, %p828;
	setp.eq.s32 	%p829, %r1641, -2147483648;
	selp.f32 	%f3197, %f3193, %f3196, %p829;
	setp.eq.s32 	%p830, %r1642, -2147483648;
	selp.f32 	%f3198, %f3194, %f3197, %p830;
	setp.eq.f32 	%p831, %f3196, 0f00000000;
	selp.f32 	%f3199, %f3198, %f3196, %p831;
	mov.b32 	%r1643, %f3199;
	shfl.sync.bfly.b32	%f3200, %f3199, 4, 31, -1;
	mov.b32 	%r1644, %f3200;
	setp.nan.f32 	%p832, %f3199, %f3200;
	min.f32 	%f3201, %f3199, %f3200;
	selp.f32 	%f3202, 0f7FC00000, %f3201, %p832;
	setp.eq.s32 	%p833, %r1643, -2147483648;
	selp.f32 	%f3203, %f3199, %f3202, %p833;
	setp.eq.s32 	%p834, %r1644, -2147483648;
	selp.f32 	%f3204, %f3200, %f3203, %p834;
	setp.eq.f32 	%p835, %f3202, 0f00000000;
	selp.f32 	%f3205, %f3204, %f3202, %p835;
	mov.b32 	%r1645, %f3205;
	shfl.sync.bfly.b32	%f3206, %f3205, 2, 31, -1;
	mov.b32 	%r1646, %f3206;
	setp.nan.f32 	%p836, %f3205, %f3206;
	min.f32 	%f3207, %f3205, %f3206;
	selp.f32 	%f3208, 0f7FC00000, %f3207, %p836;
	setp.eq.s32 	%p837, %r1645, -2147483648;
	selp.f32 	%f3209, %f3205, %f3208, %p837;
	setp.eq.s32 	%p838, %r1646, -2147483648;
	selp.f32 	%f3210, %f3206, %f3209, %p838;
	setp.eq.f32 	%p839, %f3208, 0f00000000;
	selp.f32 	%f3211, %f3210, %f3208, %p839;
	mov.b32 	%r1647, %f3211;
	shfl.sync.bfly.b32	%f3212, %f3211, 1, 31, -1;
	mov.b32 	%r1648, %f3212;
	setp.nan.f32 	%p840, %f3211, %f3212;
	min.f32 	%f3213, %f3211, %f3212;
	selp.f32 	%f3214, 0f7FC00000, %f3213, %p840;
	setp.eq.s32 	%p841, %r1647, -2147483648;
	selp.f32 	%f3215, %f3211, %f3214, %p841;
	setp.eq.s32 	%p842, %r1648, -2147483648;
	selp.f32 	%f3216, %f3212, %f3215, %p842;
	setp.eq.f32 	%p843, %f3214, 0f00000000;
	selp.f32 	%f3652, %f3216, %f3214, %p843;
	shfl.sync.bfly.b32	%f3217, %f3653, 16, 31, -1;
	mov.b32 	%r1649, %f3217;
	mov.b32 	%r1650, %f3653;
	setp.nan.f32 	%p844, %f3653, %f3217;
	min.f32 	%f3218, %f3653, %f3217;
	selp.f32 	%f3219, 0f7FC00000, %f3218, %p844;
	setp.eq.s32 	%p845, %r1650, -2147483648;
	selp.f32 	%f3220, %f3653, %f3219, %p845;
	setp.eq.s32 	%p846, %r1649, -2147483648;
	selp.f32 	%f3221, %f3217, %f3220, %p846;
	setp.eq.f32 	%p847, %f3219, 0f00000000;
	selp.f32 	%f3222, %f3221, %f3219, %p847;
	mov.b32 	%r1651, %f3222;
	shfl.sync.bfly.b32	%f3223, %f3222, 8, 31, -1;
	mov.b32 	%r1652, %f3223;
	setp.nan.f32 	%p848, %f3222, %f3223;
	min.f32 	%f3224, %f3222, %f3223;
	selp.f32 	%f3225, 0f7FC00000, %f3224, %p848;
	setp.eq.s32 	%p849, %r1651, -2147483648;
	selp.f32 	%f3226, %f3222, %f3225, %p849;
	setp.eq.s32 	%p850, %r1652, -2147483648;
	selp.f32 	%f3227, %f3223, %f3226, %p850;
	setp.eq.f32 	%p851, %f3225, 0f00000000;
	selp.f32 	%f3228, %f3227, %f3225, %p851;
	mov.b32 	%r1653, %f3228;
	shfl.sync.bfly.b32	%f3229, %f3228, 4, 31, -1;
	mov.b32 	%r1654, %f3229;
	setp.nan.f32 	%p852, %f3228, %f3229;
	min.f32 	%f3230, %f3228, %f3229;
	selp.f32 	%f3231, 0f7FC00000, %f3230, %p852;
	setp.eq.s32 	%p853, %r1653, -2147483648;
	selp.f32 	%f3232, %f3228, %f3231, %p853;
	setp.eq.s32 	%p854, %r1654, -2147483648;
	selp.f32 	%f3233, %f3229, %f3232, %p854;
	setp.eq.f32 	%p855, %f3231, 0f00000000;
	selp.f32 	%f3234, %f3233, %f3231, %p855;
	mov.b32 	%r1655, %f3234;
	shfl.sync.bfly.b32	%f3235, %f3234, 2, 31, -1;
	mov.b32 	%r1656, %f3235;
	setp.nan.f32 	%p856, %f3234, %f3235;
	min.f32 	%f3236, %f3234, %f3235;
	selp.f32 	%f3237, 0f7FC00000, %f3236, %p856;
	setp.eq.s32 	%p857, %r1655, -2147483648;
	selp.f32 	%f3238, %f3234, %f3237, %p857;
	setp.eq.s32 	%p858, %r1656, -2147483648;
	selp.f32 	%f3239, %f3235, %f3238, %p858;
	setp.eq.f32 	%p859, %f3237, 0f00000000;
	selp.f32 	%f3240, %f3239, %f3237, %p859;
	mov.b32 	%r1657, %f3240;
	shfl.sync.bfly.b32	%f3241, %f3240, 1, 31, -1;
	mov.b32 	%r1658, %f3241;
	setp.nan.f32 	%p860, %f3240, %f3241;
	min.f32 	%f3242, %f3240, %f3241;
	selp.f32 	%f3243, 0f7FC00000, %f3242, %p860;
	setp.eq.s32 	%p861, %r1657, -2147483648;
	selp.f32 	%f3244, %f3240, %f3243, %p861;
	setp.eq.s32 	%p862, %r1658, -2147483648;
	selp.f32 	%f3245, %f3241, %f3244, %p862;
	setp.eq.f32 	%p863, %f3243, 0f00000000;
	selp.f32 	%f3653, %f3245, %f3243, %p863;
	shfl.sync.bfly.b32	%f3246, %f3654, 16, 31, -1;
	mov.b32 	%r1659, %f3246;
	mov.b32 	%r1660, %f3654;
	setp.nan.f32 	%p864, %f3654, %f3246;
	min.f32 	%f3247, %f3654, %f3246;
	selp.f32 	%f3248, 0f7FC00000, %f3247, %p864;
	setp.eq.s32 	%p865, %r1660, -2147483648;
	selp.f32 	%f3249, %f3654, %f3248, %p865;
	setp.eq.s32 	%p866, %r1659, -2147483648;
	selp.f32 	%f3250, %f3246, %f3249, %p866;
	setp.eq.f32 	%p867, %f3248, 0f00000000;
	selp.f32 	%f3251, %f3250, %f3248, %p867;
	mov.b32 	%r1661, %f3251;
	shfl.sync.bfly.b32	%f3252, %f3251, 8, 31, -1;
	mov.b32 	%r1662, %f3252;
	setp.nan.f32 	%p868, %f3251, %f3252;
	min.f32 	%f3253, %f3251, %f3252;
	selp.f32 	%f3254, 0f7FC00000, %f3253, %p868;
	setp.eq.s32 	%p869, %r1661, -2147483648;
	selp.f32 	%f3255, %f3251, %f3254, %p869;
	setp.eq.s32 	%p870, %r1662, -2147483648;
	selp.f32 	%f3256, %f3252, %f3255, %p870;
	setp.eq.f32 	%p871, %f3254, 0f00000000;
	selp.f32 	%f3257, %f3256, %f3254, %p871;
	mov.b32 	%r1663, %f3257;
	shfl.sync.bfly.b32	%f3258, %f3257, 4, 31, -1;
	mov.b32 	%r1664, %f3258;
	setp.nan.f32 	%p872, %f3257, %f3258;
	min.f32 	%f3259, %f3257, %f3258;
	selp.f32 	%f3260, 0f7FC00000, %f3259, %p872;
	setp.eq.s32 	%p873, %r1663, -2147483648;
	selp.f32 	%f3261, %f3257, %f3260, %p873;
	setp.eq.s32 	%p874, %r1664, -2147483648;
	selp.f32 	%f3262, %f3258, %f3261, %p874;
	setp.eq.f32 	%p875, %f3260, 0f00000000;
	selp.f32 	%f3263, %f3262, %f3260, %p875;
	mov.b32 	%r1665, %f3263;
	shfl.sync.bfly.b32	%f3264, %f3263, 2, 31, -1;
	mov.b32 	%r1666, %f3264;
	setp.nan.f32 	%p876, %f3263, %f3264;
	min.f32 	%f3265, %f3263, %f3264;
	selp.f32 	%f3266, 0f7FC00000, %f3265, %p876;
	setp.eq.s32 	%p877, %r1665, -2147483648;
	selp.f32 	%f3267, %f3263, %f3266, %p877;
	setp.eq.s32 	%p878, %r1666, -2147483648;
	selp.f32 	%f3268, %f3264, %f3267, %p878;
	setp.eq.f32 	%p879, %f3266, 0f00000000;
	selp.f32 	%f3269, %f3268, %f3266, %p879;
	mov.b32 	%r1667, %f3269;
	shfl.sync.bfly.b32	%f3270, %f3269, 1, 31, -1;
	mov.b32 	%r1668, %f3270;
	setp.nan.f32 	%p880, %f3269, %f3270;
	min.f32 	%f3271, %f3269, %f3270;
	selp.f32 	%f3272, 0f7FC00000, %f3271, %p880;
	setp.eq.s32 	%p881, %r1667, -2147483648;
	selp.f32 	%f3273, %f3269, %f3272, %p881;
	setp.eq.s32 	%p882, %r1668, -2147483648;
	selp.f32 	%f3274, %f3270, %f3273, %p882;
	setp.eq.f32 	%p883, %f3272, 0f00000000;
	selp.f32 	%f3654, %f3274, %f3272, %p883;
	shfl.sync.bfly.b32	%f3275, %f8, 16, 31, -1;
	mov.b32 	%r1669, %f3275;
	mov.b32 	%r1670, %f8;
	setp.nan.f32 	%p884, %f8, %f3275;
	min.f32 	%f3276, %f8, %f3275;
	selp.f32 	%f3277, 0f7FC00000, %f3276, %p884;
	setp.eq.s32 	%p885, %r1670, -2147483648;
	selp.f32 	%f3278, %f8, %f3277, %p885;
	setp.eq.s32 	%p886, %r1669, -2147483648;
	selp.f32 	%f3279, %f3275, %f3278, %p886;
	setp.eq.f32 	%p887, %f3277, 0f00000000;
	selp.f32 	%f3280, %f3279, %f3277, %p887;
	mov.b32 	%r1671, %f3280;
	shfl.sync.bfly.b32	%f3281, %f3280, 8, 31, -1;
	mov.b32 	%r1672, %f3281;
	setp.nan.f32 	%p888, %f3280, %f3281;
	min.f32 	%f3282, %f3280, %f3281;
	selp.f32 	%f3283, 0f7FC00000, %f3282, %p888;
	setp.eq.s32 	%p889, %r1671, -2147483648;
	selp.f32 	%f3284, %f3280, %f3283, %p889;
	setp.eq.s32 	%p890, %r1672, -2147483648;
	selp.f32 	%f3285, %f3281, %f3284, %p890;
	setp.eq.f32 	%p891, %f3283, 0f00000000;
	selp.f32 	%f3286, %f3285, %f3283, %p891;
	mov.b32 	%r1673, %f3286;
	shfl.sync.bfly.b32	%f3287, %f3286, 4, 31, -1;
	mov.b32 	%r1674, %f3287;
	setp.nan.f32 	%p892, %f3286, %f3287;
	min.f32 	%f3288, %f3286, %f3287;
	selp.f32 	%f3289, 0f7FC00000, %f3288, %p892;
	setp.eq.s32 	%p893, %r1673, -2147483648;
	selp.f32 	%f3290, %f3286, %f3289, %p893;
	setp.eq.s32 	%p894, %r1674, -2147483648;
	selp.f32 	%f3291, %f3287, %f3290, %p894;
	setp.eq.f32 	%p895, %f3289, 0f00000000;
	selp.f32 	%f3292, %f3291, %f3289, %p895;
	mov.b32 	%r1675, %f3292;
	shfl.sync.bfly.b32	%f3293, %f3292, 2, 31, -1;
	mov.b32 	%r1676, %f3293;
	setp.nan.f32 	%p896, %f3292, %f3293;
	min.f32 	%f3294, %f3292, %f3293;
	selp.f32 	%f3295, 0f7FC00000, %f3294, %p896;
	setp.eq.s32 	%p897, %r1675, -2147483648;
	selp.f32 	%f3296, %f3292, %f3295, %p897;
	setp.eq.s32 	%p898, %r1676, -2147483648;
	selp.f32 	%f3297, %f3293, %f3296, %p898;
	setp.eq.f32 	%p899, %f3295, 0f00000000;
	selp.f32 	%f3298, %f3297, %f3295, %p899;
	mov.b32 	%r1677, %f3298;
	shfl.sync.bfly.b32	%f3299, %f3298, 1, 31, -1;
	mov.b32 	%r1678, %f3299;
	setp.nan.f32 	%p900, %f3298, %f3299;
	min.f32 	%f3300, %f3298, %f3299;
	selp.f32 	%f3301, 0f7FC00000, %f3300, %p900;
	setp.eq.s32 	%p901, %r1677, -2147483648;
	selp.f32 	%f3302, %f3298, %f3301, %p901;
	setp.eq.s32 	%p902, %r1678, -2147483648;
	selp.f32 	%f3303, %f3299, %f3302, %p902;
	setp.eq.f32 	%p903, %f3301, 0f00000000;
	selp.f32 	%f3655, %f3303, %f3301, %p903;
	bra.uni 	$L__BB0_502;
$L__BB0_65:                             // %FRem
                                        //   in Loop: Header=BB0_3 Depth=1
	div.rn.f32 	%f2968, %f3648, %f3656;
	cvt.rzi.f32.f32 	%f2969, %f2968;
	mul.f32 	%f2970, %f2969, %f3656;
	sub.f32 	%f2971, %f3648, %f2970;
	testp.infinite.f32 	%p736, %f3656;
	selp.f32 	%f3648, %f3648, %f2971, %p736;
	div.rn.f32 	%f2972, %f3649, %f3657;
	cvt.rzi.f32.f32 	%f2973, %f2972;
	mul.f32 	%f2974, %f2973, %f3657;
	sub.f32 	%f2975, %f3649, %f2974;
	testp.infinite.f32 	%p737, %f3657;
	selp.f32 	%f3649, %f3649, %f2975, %p737;
	div.rn.f32 	%f2976, %f3650, %f3658;
	cvt.rzi.f32.f32 	%f2977, %f2976;
	mul.f32 	%f2978, %f2977, %f3658;
	sub.f32 	%f2979, %f3650, %f2978;
	testp.infinite.f32 	%p738, %f3658;
	selp.f32 	%f3650, %f3650, %f2979, %p738;
	div.rn.f32 	%f2980, %f3651, %f3659;
	cvt.rzi.f32.f32 	%f2981, %f2980;
	mul.f32 	%f2982, %f2981, %f3659;
	sub.f32 	%f2983, %f3651, %f2982;
	testp.infinite.f32 	%p739, %f3659;
	selp.f32 	%f3651, %f3651, %f2983, %p739;
	div.rn.f32 	%f2984, %f3652, %f3660;
	cvt.rzi.f32.f32 	%f2985, %f2984;
	mul.f32 	%f2986, %f2985, %f3660;
	sub.f32 	%f2987, %f3652, %f2986;
	testp.infinite.f32 	%p740, %f3660;
	selp.f32 	%f3652, %f3652, %f2987, %p740;
	div.rn.f32 	%f2988, %f3653, %f3661;
	cvt.rzi.f32.f32 	%f2989, %f2988;
	mul.f32 	%f2990, %f2989, %f3661;
	sub.f32 	%f2991, %f3653, %f2990;
	testp.infinite.f32 	%p741, %f3661;
	selp.f32 	%f3653, %f3653, %f2991, %p741;
	div.rn.f32 	%f2992, %f3654, %f3662;
	cvt.rzi.f32.f32 	%f2993, %f2992;
	mul.f32 	%f2994, %f2993, %f3662;
	sub.f32 	%f2995, %f3654, %f2994;
	testp.infinite.f32 	%p742, %f3662;
	selp.f32 	%f3654, %f3654, %f2995, %p742;
	div.rn.f32 	%f2996, %f8, %f3663;
	cvt.rzi.f32.f32 	%f2997, %f2996;
	mul.f32 	%f2998, %f2997, %f3663;
	sub.f32 	%f2999, %f8, %f2998;
	testp.infinite.f32 	%p743, %f3663;
	selp.f32 	%f3655, %f8, %f2999, %p743;
	bra.uni 	$L__BB0_502;
$L__BB0_438:                            // %StoreGlobalF16
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u32 	%r543, [%rd25+4];
	and.b32  	%r544, %r543, 15;
	shr.u32 	%r545, %r543, 4;
	shfl.sync.idx.b32	%r546, %r16, %r544, 31, -1;
	shfl.sync.idx.b32	%r547, %r17, %r544, 31, -1;
	cvt.u64.u32 	%rd236, %r546;
	cvt.u64.u32 	%rd237, %r547;
	shl.b64 	%rd238, %rd237, 32;
	or.b64  	%rd239, %rd236, %rd238;
	add.s32 	%r372, %r545, %r18;
	shfl.sync.idx.b32	%r373, %r10, %r544, 31, -1;
	shfl.sync.idx.b32	%r548, %r9, %r544, 31, -1;
	shfl.sync.idx.b32	%r374, %r11, %r544, 31, -1;
	shfl.sync.idx.b32	%r375, %r12, %r544, 31, -1;
	shfl.sync.idx.b32	%r376, %r15, %r544, 31, -1;
	mul.lo.s32 	%r549, %r548, %r372;
	mul.wide.s32 	%rd240, %r549, 2;
	add.s64 	%rd126, %rd239, %rd240;
	setp.ge.u32 	%p84, %r372, %r373;
	@%p84 bra 	$L__BB0_440;
// %bb.439:                             // %StoreGlobalF16.if
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.rn.f16.f32 	%rs1, %f3648;
	st.global.b16 	[%rd126], %rs1;
$L__BB0_440:                            // %StoreGlobalF16.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r377, %r376, %r372;
	cvt.s64.s32 	%rd127, %r374;
	mul.wide.s32 	%rd241, %r374, 2;
	add.s64 	%rd128, %rd126, %rd241;
	setp.ge.u32 	%p85, %r377, %r373;
	setp.lt.u32 	%p86, %r375, 2;
	or.pred  	%p87, %p86, %p85;
	@%p87 bra 	$L__BB0_442;
// %bb.441:                             // %StoreGlobalF16.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.rn.f16.f32 	%rs2, %f3649;
	st.global.b16 	[%rd128], %rs2;
$L__BB0_442:                            // %StoreGlobalF16.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r378, %r377, %r376;
	shl.b64 	%rd242, %rd127, 1;
	add.s64 	%rd129, %rd128, %rd242;
	setp.ge.u32 	%p88, %r378, %r373;
	setp.lt.u32 	%p89, %r375, 3;
	or.pred  	%p90, %p89, %p88;
	@%p90 bra 	$L__BB0_444;
// %bb.443:                             // %StoreGlobalF16.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.rn.f16.f32 	%rs3, %f3650;
	st.global.b16 	[%rd129], %rs3;
$L__BB0_444:                            // %StoreGlobalF16.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r379, %r378, %r376;
	add.s64 	%rd130, %rd129, %rd242;
	setp.ge.u32 	%p91, %r379, %r373;
	setp.lt.u32 	%p92, %r375, 4;
	or.pred  	%p93, %p92, %p91;
	@%p93 bra 	$L__BB0_446;
// %bb.445:                             // %StoreGlobalF16.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.rn.f16.f32 	%rs4, %f3651;
	st.global.b16 	[%rd130], %rs4;
$L__BB0_446:                            // %StoreGlobalF16.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r380, %r379, %r376;
	add.s64 	%rd131, %rd130, %rd242;
	setp.ge.u32 	%p94, %r380, %r373;
	setp.lt.u32 	%p95, %r375, 5;
	or.pred  	%p96, %p95, %p94;
	@%p96 bra 	$L__BB0_448;
// %bb.447:                             // %StoreGlobalF16.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.rn.f16.f32 	%rs5, %f3652;
	st.global.b16 	[%rd131], %rs5;
$L__BB0_448:                            // %StoreGlobalF16.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r381, %r380, %r376;
	add.s64 	%rd132, %rd131, %rd242;
	setp.ge.u32 	%p97, %r381, %r373;
	setp.lt.u32 	%p98, %r375, 6;
	or.pred  	%p99, %p98, %p97;
	@%p99 bra 	$L__BB0_450;
// %bb.449:                             // %StoreGlobalF16.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.rn.f16.f32 	%rs6, %f3653;
	st.global.b16 	[%rd132], %rs6;
$L__BB0_450:                            // %StoreGlobalF16.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r382, %r381, %r376;
	add.s64 	%rd133, %rd132, %rd242;
	setp.ge.u32 	%p100, %r382, %r373;
	setp.lt.u32 	%p101, %r375, 7;
	or.pred  	%p102, %p101, %p100;
	@%p102 bra 	$L__BB0_452;
// %bb.451:                             // %StoreGlobalF16.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.rn.f16.f32 	%rs7, %f3654;
	st.global.b16 	[%rd133], %rs7;
$L__BB0_452:                            // %StoreGlobalF16.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r550, %r382, %r376;
	setp.ge.u32 	%p103, %r550, %r373;
	setp.lt.u32 	%p104, %r375, 8;
	or.pred  	%p105, %p104, %p103;
	mov.f32 	%f3655, %f8;
	@%p105 bra 	$L__BB0_502;
// %bb.453:                             // %StoreGlobalF16.endif.endi...if
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.rn.f16.f32 	%rs8, %f8;
	add.s64 	%rd134, %rd133, %rd242;
	st.global.b16 	[%rd134], %rs8;
	mov.f32 	%f3655, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_55:                             // %FRDiv
                                        //   in Loop: Header=BB0_3 Depth=1
	div.rn.f32 	%f3648, %f3656, %f3648;
	div.rn.f32 	%f3649, %f3657, %f3649;
	div.rn.f32 	%f3650, %f3658, %f3650;
	div.rn.f32 	%f3651, %f3659, %f3651;
	div.rn.f32 	%f3652, %f3660, %f3652;
	div.rn.f32 	%f3653, %f3661, %f3653;
	div.rn.f32 	%f3654, %f3662, %f3654;
	div.rn.f32 	%f3655, %f3663, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_52:                             // %FSub
                                        //   in Loop: Header=BB0_3 Depth=1
	sub.rn.f32 	%f3648, %f3648, %f3656;
	sub.rn.f32 	%f3649, %f3649, %f3657;
	sub.rn.f32 	%f3650, %f3650, %f3658;
	sub.rn.f32 	%f3651, %f3651, %f3659;
	sub.rn.f32 	%f3652, %f3652, %f3660;
	sub.rn.f32 	%f3653, %f3653, %f3661;
	sub.rn.f32 	%f3654, %f3654, %f3662;
	sub.rn.f32 	%f3655, %f8, %f3663;
	bra.uni 	$L__BB0_502;
$L__BB0_56:                             // %FNeg
                                        //   in Loop: Header=BB0_3 Depth=1
	neg.f32 	%f3648, %f3648;
	neg.f32 	%f3649, %f3649;
	neg.f32 	%f3650, %f3650;
	neg.f32 	%f3651, %f3651;
	neg.f32 	%f3652, %f3652;
	neg.f32 	%f3653, %f3653;
	neg.f32 	%f3654, %f3654;
	neg.f32 	%f3655, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_61:                             // %WarpAllReduceSum
                                        //   in Loop: Header=BB0_3 Depth=1
	shfl.sync.bfly.b32	%f3536, %f3648, 16, 31, -1;
	add.rn.f32 	%f3537, %f3648, %f3536;
	shfl.sync.bfly.b32	%f3538, %f3537, 8, 31, -1;
	add.rn.f32 	%f3539, %f3537, %f3538;
	shfl.sync.bfly.b32	%f3540, %f3539, 4, 31, -1;
	add.rn.f32 	%f3541, %f3539, %f3540;
	shfl.sync.bfly.b32	%f3542, %f3541, 2, 31, -1;
	add.rn.f32 	%f3543, %f3541, %f3542;
	shfl.sync.bfly.b32	%f3544, %f3543, 1, 31, -1;
	add.rn.f32 	%f3648, %f3543, %f3544;
	shfl.sync.bfly.b32	%f3545, %f3649, 16, 31, -1;
	add.rn.f32 	%f3546, %f3649, %f3545;
	shfl.sync.bfly.b32	%f3547, %f3546, 8, 31, -1;
	add.rn.f32 	%f3548, %f3546, %f3547;
	shfl.sync.bfly.b32	%f3549, %f3548, 4, 31, -1;
	add.rn.f32 	%f3550, %f3548, %f3549;
	shfl.sync.bfly.b32	%f3551, %f3550, 2, 31, -1;
	add.rn.f32 	%f3552, %f3550, %f3551;
	shfl.sync.bfly.b32	%f3553, %f3552, 1, 31, -1;
	add.rn.f32 	%f3649, %f3552, %f3553;
	shfl.sync.bfly.b32	%f3554, %f3650, 16, 31, -1;
	add.rn.f32 	%f3555, %f3650, %f3554;
	shfl.sync.bfly.b32	%f3556, %f3555, 8, 31, -1;
	add.rn.f32 	%f3557, %f3555, %f3556;
	shfl.sync.bfly.b32	%f3558, %f3557, 4, 31, -1;
	add.rn.f32 	%f3559, %f3557, %f3558;
	shfl.sync.bfly.b32	%f3560, %f3559, 2, 31, -1;
	add.rn.f32 	%f3561, %f3559, %f3560;
	shfl.sync.bfly.b32	%f3562, %f3561, 1, 31, -1;
	add.rn.f32 	%f3650, %f3561, %f3562;
	shfl.sync.bfly.b32	%f3563, %f3651, 16, 31, -1;
	add.rn.f32 	%f3564, %f3651, %f3563;
	shfl.sync.bfly.b32	%f3565, %f3564, 8, 31, -1;
	add.rn.f32 	%f3566, %f3564, %f3565;
	shfl.sync.bfly.b32	%f3567, %f3566, 4, 31, -1;
	add.rn.f32 	%f3568, %f3566, %f3567;
	shfl.sync.bfly.b32	%f3569, %f3568, 2, 31, -1;
	add.rn.f32 	%f3570, %f3568, %f3569;
	shfl.sync.bfly.b32	%f3571, %f3570, 1, 31, -1;
	add.rn.f32 	%f3651, %f3570, %f3571;
	shfl.sync.bfly.b32	%f3572, %f3652, 16, 31, -1;
	add.rn.f32 	%f3573, %f3652, %f3572;
	shfl.sync.bfly.b32	%f3574, %f3573, 8, 31, -1;
	add.rn.f32 	%f3575, %f3573, %f3574;
	shfl.sync.bfly.b32	%f3576, %f3575, 4, 31, -1;
	add.rn.f32 	%f3577, %f3575, %f3576;
	shfl.sync.bfly.b32	%f3578, %f3577, 2, 31, -1;
	add.rn.f32 	%f3579, %f3577, %f3578;
	shfl.sync.bfly.b32	%f3580, %f3579, 1, 31, -1;
	add.rn.f32 	%f3652, %f3579, %f3580;
	shfl.sync.bfly.b32	%f3581, %f3653, 16, 31, -1;
	add.rn.f32 	%f3582, %f3653, %f3581;
	shfl.sync.bfly.b32	%f3583, %f3582, 8, 31, -1;
	add.rn.f32 	%f3584, %f3582, %f3583;
	shfl.sync.bfly.b32	%f3585, %f3584, 4, 31, -1;
	add.rn.f32 	%f3586, %f3584, %f3585;
	shfl.sync.bfly.b32	%f3587, %f3586, 2, 31, -1;
	add.rn.f32 	%f3588, %f3586, %f3587;
	shfl.sync.bfly.b32	%f3589, %f3588, 1, 31, -1;
	add.rn.f32 	%f3653, %f3588, %f3589;
	shfl.sync.bfly.b32	%f3590, %f3654, 16, 31, -1;
	add.rn.f32 	%f3591, %f3654, %f3590;
	shfl.sync.bfly.b32	%f3592, %f3591, 8, 31, -1;
	add.rn.f32 	%f3593, %f3591, %f3592;
	shfl.sync.bfly.b32	%f3594, %f3593, 4, 31, -1;
	add.rn.f32 	%f3595, %f3593, %f3594;
	shfl.sync.bfly.b32	%f3596, %f3595, 2, 31, -1;
	add.rn.f32 	%f3597, %f3595, %f3596;
	shfl.sync.bfly.b32	%f3598, %f3597, 1, 31, -1;
	add.rn.f32 	%f3654, %f3597, %f3598;
	shfl.sync.bfly.b32	%f3599, %f8, 16, 31, -1;
	add.rn.f32 	%f3600, %f8, %f3599;
	shfl.sync.bfly.b32	%f3601, %f3600, 8, 31, -1;
	add.rn.f32 	%f3602, %f3600, %f3601;
	shfl.sync.bfly.b32	%f3603, %f3602, 4, 31, -1;
	add.rn.f32 	%f3604, %f3602, %f3603;
	shfl.sync.bfly.b32	%f3605, %f3604, 2, 31, -1;
	add.rn.f32 	%f3606, %f3604, %f3605;
	shfl.sync.bfly.b32	%f3607, %f3606, 1, 31, -1;
	add.rn.f32 	%f3655, %f3606, %f3607;
	bra.uni 	$L__BB0_502;
$L__BB0_62:                             // %WarpAllReduceMax
                                        //   in Loop: Header=BB0_3 Depth=1
	shfl.sync.bfly.b32	%f3304, %f3648, 16, 31, -1;
	mov.b32 	%r1679, %f3304;
	mov.b32 	%r1680, %f3648;
	setp.nan.f32 	%p904, %f3648, %f3304;
	max.f32 	%f3305, %f3648, %f3304;
	selp.f32 	%f3306, 0f7FC00000, %f3305, %p904;
	setp.eq.s32 	%p905, %r1680, 0;
	selp.f32 	%f3307, %f3648, %f3306, %p905;
	setp.eq.s32 	%p906, %r1679, 0;
	selp.f32 	%f3308, %f3304, %f3307, %p906;
	setp.eq.f32 	%p907, %f3306, 0f00000000;
	selp.f32 	%f3309, %f3308, %f3306, %p907;
	mov.b32 	%r1681, %f3309;
	shfl.sync.bfly.b32	%f3310, %f3309, 8, 31, -1;
	mov.b32 	%r1682, %f3310;
	setp.nan.f32 	%p908, %f3309, %f3310;
	max.f32 	%f3311, %f3309, %f3310;
	selp.f32 	%f3312, 0f7FC00000, %f3311, %p908;
	setp.eq.s32 	%p909, %r1681, 0;
	selp.f32 	%f3313, %f3309, %f3312, %p909;
	setp.eq.s32 	%p910, %r1682, 0;
	selp.f32 	%f3314, %f3310, %f3313, %p910;
	setp.eq.f32 	%p911, %f3312, 0f00000000;
	selp.f32 	%f3315, %f3314, %f3312, %p911;
	mov.b32 	%r1683, %f3315;
	shfl.sync.bfly.b32	%f3316, %f3315, 4, 31, -1;
	mov.b32 	%r1684, %f3316;
	setp.nan.f32 	%p912, %f3315, %f3316;
	max.f32 	%f3317, %f3315, %f3316;
	selp.f32 	%f3318, 0f7FC00000, %f3317, %p912;
	setp.eq.s32 	%p913, %r1683, 0;
	selp.f32 	%f3319, %f3315, %f3318, %p913;
	setp.eq.s32 	%p914, %r1684, 0;
	selp.f32 	%f3320, %f3316, %f3319, %p914;
	setp.eq.f32 	%p915, %f3318, 0f00000000;
	selp.f32 	%f3321, %f3320, %f3318, %p915;
	mov.b32 	%r1685, %f3321;
	shfl.sync.bfly.b32	%f3322, %f3321, 2, 31, -1;
	mov.b32 	%r1686, %f3322;
	setp.nan.f32 	%p916, %f3321, %f3322;
	max.f32 	%f3323, %f3321, %f3322;
	selp.f32 	%f3324, 0f7FC00000, %f3323, %p916;
	setp.eq.s32 	%p917, %r1685, 0;
	selp.f32 	%f3325, %f3321, %f3324, %p917;
	setp.eq.s32 	%p918, %r1686, 0;
	selp.f32 	%f3326, %f3322, %f3325, %p918;
	setp.eq.f32 	%p919, %f3324, 0f00000000;
	selp.f32 	%f3327, %f3326, %f3324, %p919;
	mov.b32 	%r1687, %f3327;
	shfl.sync.bfly.b32	%f3328, %f3327, 1, 31, -1;
	mov.b32 	%r1688, %f3328;
	setp.nan.f32 	%p920, %f3327, %f3328;
	max.f32 	%f3329, %f3327, %f3328;
	selp.f32 	%f3330, 0f7FC00000, %f3329, %p920;
	setp.eq.s32 	%p921, %r1687, 0;
	selp.f32 	%f3331, %f3327, %f3330, %p921;
	setp.eq.s32 	%p922, %r1688, 0;
	selp.f32 	%f3332, %f3328, %f3331, %p922;
	setp.eq.f32 	%p923, %f3330, 0f00000000;
	selp.f32 	%f3648, %f3332, %f3330, %p923;
	shfl.sync.bfly.b32	%f3333, %f3649, 16, 31, -1;
	mov.b32 	%r1689, %f3333;
	mov.b32 	%r1690, %f3649;
	setp.nan.f32 	%p924, %f3649, %f3333;
	max.f32 	%f3334, %f3649, %f3333;
	selp.f32 	%f3335, 0f7FC00000, %f3334, %p924;
	setp.eq.s32 	%p925, %r1690, 0;
	selp.f32 	%f3336, %f3649, %f3335, %p925;
	setp.eq.s32 	%p926, %r1689, 0;
	selp.f32 	%f3337, %f3333, %f3336, %p926;
	setp.eq.f32 	%p927, %f3335, 0f00000000;
	selp.f32 	%f3338, %f3337, %f3335, %p927;
	mov.b32 	%r1691, %f3338;
	shfl.sync.bfly.b32	%f3339, %f3338, 8, 31, -1;
	mov.b32 	%r1692, %f3339;
	setp.nan.f32 	%p928, %f3338, %f3339;
	max.f32 	%f3340, %f3338, %f3339;
	selp.f32 	%f3341, 0f7FC00000, %f3340, %p928;
	setp.eq.s32 	%p929, %r1691, 0;
	selp.f32 	%f3342, %f3338, %f3341, %p929;
	setp.eq.s32 	%p930, %r1692, 0;
	selp.f32 	%f3343, %f3339, %f3342, %p930;
	setp.eq.f32 	%p931, %f3341, 0f00000000;
	selp.f32 	%f3344, %f3343, %f3341, %p931;
	mov.b32 	%r1693, %f3344;
	shfl.sync.bfly.b32	%f3345, %f3344, 4, 31, -1;
	mov.b32 	%r1694, %f3345;
	setp.nan.f32 	%p932, %f3344, %f3345;
	max.f32 	%f3346, %f3344, %f3345;
	selp.f32 	%f3347, 0f7FC00000, %f3346, %p932;
	setp.eq.s32 	%p933, %r1693, 0;
	selp.f32 	%f3348, %f3344, %f3347, %p933;
	setp.eq.s32 	%p934, %r1694, 0;
	selp.f32 	%f3349, %f3345, %f3348, %p934;
	setp.eq.f32 	%p935, %f3347, 0f00000000;
	selp.f32 	%f3350, %f3349, %f3347, %p935;
	mov.b32 	%r1695, %f3350;
	shfl.sync.bfly.b32	%f3351, %f3350, 2, 31, -1;
	mov.b32 	%r1696, %f3351;
	setp.nan.f32 	%p936, %f3350, %f3351;
	max.f32 	%f3352, %f3350, %f3351;
	selp.f32 	%f3353, 0f7FC00000, %f3352, %p936;
	setp.eq.s32 	%p937, %r1695, 0;
	selp.f32 	%f3354, %f3350, %f3353, %p937;
	setp.eq.s32 	%p938, %r1696, 0;
	selp.f32 	%f3355, %f3351, %f3354, %p938;
	setp.eq.f32 	%p939, %f3353, 0f00000000;
	selp.f32 	%f3356, %f3355, %f3353, %p939;
	mov.b32 	%r1697, %f3356;
	shfl.sync.bfly.b32	%f3357, %f3356, 1, 31, -1;
	mov.b32 	%r1698, %f3357;
	setp.nan.f32 	%p940, %f3356, %f3357;
	max.f32 	%f3358, %f3356, %f3357;
	selp.f32 	%f3359, 0f7FC00000, %f3358, %p940;
	setp.eq.s32 	%p941, %r1697, 0;
	selp.f32 	%f3360, %f3356, %f3359, %p941;
	setp.eq.s32 	%p942, %r1698, 0;
	selp.f32 	%f3361, %f3357, %f3360, %p942;
	setp.eq.f32 	%p943, %f3359, 0f00000000;
	selp.f32 	%f3649, %f3361, %f3359, %p943;
	shfl.sync.bfly.b32	%f3362, %f3650, 16, 31, -1;
	mov.b32 	%r1699, %f3362;
	mov.b32 	%r1700, %f3650;
	setp.nan.f32 	%p944, %f3650, %f3362;
	max.f32 	%f3363, %f3650, %f3362;
	selp.f32 	%f3364, 0f7FC00000, %f3363, %p944;
	setp.eq.s32 	%p945, %r1700, 0;
	selp.f32 	%f3365, %f3650, %f3364, %p945;
	setp.eq.s32 	%p946, %r1699, 0;
	selp.f32 	%f3366, %f3362, %f3365, %p946;
	setp.eq.f32 	%p947, %f3364, 0f00000000;
	selp.f32 	%f3367, %f3366, %f3364, %p947;
	mov.b32 	%r1701, %f3367;
	shfl.sync.bfly.b32	%f3368, %f3367, 8, 31, -1;
	mov.b32 	%r1702, %f3368;
	setp.nan.f32 	%p948, %f3367, %f3368;
	max.f32 	%f3369, %f3367, %f3368;
	selp.f32 	%f3370, 0f7FC00000, %f3369, %p948;
	setp.eq.s32 	%p949, %r1701, 0;
	selp.f32 	%f3371, %f3367, %f3370, %p949;
	setp.eq.s32 	%p950, %r1702, 0;
	selp.f32 	%f3372, %f3368, %f3371, %p950;
	setp.eq.f32 	%p951, %f3370, 0f00000000;
	selp.f32 	%f3373, %f3372, %f3370, %p951;
	mov.b32 	%r1703, %f3373;
	shfl.sync.bfly.b32	%f3374, %f3373, 4, 31, -1;
	mov.b32 	%r1704, %f3374;
	setp.nan.f32 	%p952, %f3373, %f3374;
	max.f32 	%f3375, %f3373, %f3374;
	selp.f32 	%f3376, 0f7FC00000, %f3375, %p952;
	setp.eq.s32 	%p953, %r1703, 0;
	selp.f32 	%f3377, %f3373, %f3376, %p953;
	setp.eq.s32 	%p954, %r1704, 0;
	selp.f32 	%f3378, %f3374, %f3377, %p954;
	setp.eq.f32 	%p955, %f3376, 0f00000000;
	selp.f32 	%f3379, %f3378, %f3376, %p955;
	mov.b32 	%r1705, %f3379;
	shfl.sync.bfly.b32	%f3380, %f3379, 2, 31, -1;
	mov.b32 	%r1706, %f3380;
	setp.nan.f32 	%p956, %f3379, %f3380;
	max.f32 	%f3381, %f3379, %f3380;
	selp.f32 	%f3382, 0f7FC00000, %f3381, %p956;
	setp.eq.s32 	%p957, %r1705, 0;
	selp.f32 	%f3383, %f3379, %f3382, %p957;
	setp.eq.s32 	%p958, %r1706, 0;
	selp.f32 	%f3384, %f3380, %f3383, %p958;
	setp.eq.f32 	%p959, %f3382, 0f00000000;
	selp.f32 	%f3385, %f3384, %f3382, %p959;
	mov.b32 	%r1707, %f3385;
	shfl.sync.bfly.b32	%f3386, %f3385, 1, 31, -1;
	mov.b32 	%r1708, %f3386;
	setp.nan.f32 	%p960, %f3385, %f3386;
	max.f32 	%f3387, %f3385, %f3386;
	selp.f32 	%f3388, 0f7FC00000, %f3387, %p960;
	setp.eq.s32 	%p961, %r1707, 0;
	selp.f32 	%f3389, %f3385, %f3388, %p961;
	setp.eq.s32 	%p962, %r1708, 0;
	selp.f32 	%f3390, %f3386, %f3389, %p962;
	setp.eq.f32 	%p963, %f3388, 0f00000000;
	selp.f32 	%f3650, %f3390, %f3388, %p963;
	shfl.sync.bfly.b32	%f3391, %f3651, 16, 31, -1;
	mov.b32 	%r1709, %f3391;
	mov.b32 	%r1710, %f3651;
	setp.nan.f32 	%p964, %f3651, %f3391;
	max.f32 	%f3392, %f3651, %f3391;
	selp.f32 	%f3393, 0f7FC00000, %f3392, %p964;
	setp.eq.s32 	%p965, %r1710, 0;
	selp.f32 	%f3394, %f3651, %f3393, %p965;
	setp.eq.s32 	%p966, %r1709, 0;
	selp.f32 	%f3395, %f3391, %f3394, %p966;
	setp.eq.f32 	%p967, %f3393, 0f00000000;
	selp.f32 	%f3396, %f3395, %f3393, %p967;
	mov.b32 	%r1711, %f3396;
	shfl.sync.bfly.b32	%f3397, %f3396, 8, 31, -1;
	mov.b32 	%r1712, %f3397;
	setp.nan.f32 	%p968, %f3396, %f3397;
	max.f32 	%f3398, %f3396, %f3397;
	selp.f32 	%f3399, 0f7FC00000, %f3398, %p968;
	setp.eq.s32 	%p969, %r1711, 0;
	selp.f32 	%f3400, %f3396, %f3399, %p969;
	setp.eq.s32 	%p970, %r1712, 0;
	selp.f32 	%f3401, %f3397, %f3400, %p970;
	setp.eq.f32 	%p971, %f3399, 0f00000000;
	selp.f32 	%f3402, %f3401, %f3399, %p971;
	mov.b32 	%r1713, %f3402;
	shfl.sync.bfly.b32	%f3403, %f3402, 4, 31, -1;
	mov.b32 	%r1714, %f3403;
	setp.nan.f32 	%p972, %f3402, %f3403;
	max.f32 	%f3404, %f3402, %f3403;
	selp.f32 	%f3405, 0f7FC00000, %f3404, %p972;
	setp.eq.s32 	%p973, %r1713, 0;
	selp.f32 	%f3406, %f3402, %f3405, %p973;
	setp.eq.s32 	%p974, %r1714, 0;
	selp.f32 	%f3407, %f3403, %f3406, %p974;
	setp.eq.f32 	%p975, %f3405, 0f00000000;
	selp.f32 	%f3408, %f3407, %f3405, %p975;
	mov.b32 	%r1715, %f3408;
	shfl.sync.bfly.b32	%f3409, %f3408, 2, 31, -1;
	mov.b32 	%r1716, %f3409;
	setp.nan.f32 	%p976, %f3408, %f3409;
	max.f32 	%f3410, %f3408, %f3409;
	selp.f32 	%f3411, 0f7FC00000, %f3410, %p976;
	setp.eq.s32 	%p977, %r1715, 0;
	selp.f32 	%f3412, %f3408, %f3411, %p977;
	setp.eq.s32 	%p978, %r1716, 0;
	selp.f32 	%f3413, %f3409, %f3412, %p978;
	setp.eq.f32 	%p979, %f3411, 0f00000000;
	selp.f32 	%f3414, %f3413, %f3411, %p979;
	mov.b32 	%r1717, %f3414;
	shfl.sync.bfly.b32	%f3415, %f3414, 1, 31, -1;
	mov.b32 	%r1718, %f3415;
	setp.nan.f32 	%p980, %f3414, %f3415;
	max.f32 	%f3416, %f3414, %f3415;
	selp.f32 	%f3417, 0f7FC00000, %f3416, %p980;
	setp.eq.s32 	%p981, %r1717, 0;
	selp.f32 	%f3418, %f3414, %f3417, %p981;
	setp.eq.s32 	%p982, %r1718, 0;
	selp.f32 	%f3419, %f3415, %f3418, %p982;
	setp.eq.f32 	%p983, %f3417, 0f00000000;
	selp.f32 	%f3651, %f3419, %f3417, %p983;
	shfl.sync.bfly.b32	%f3420, %f3652, 16, 31, -1;
	mov.b32 	%r1719, %f3420;
	mov.b32 	%r1720, %f3652;
	setp.nan.f32 	%p984, %f3652, %f3420;
	max.f32 	%f3421, %f3652, %f3420;
	selp.f32 	%f3422, 0f7FC00000, %f3421, %p984;
	setp.eq.s32 	%p985, %r1720, 0;
	selp.f32 	%f3423, %f3652, %f3422, %p985;
	setp.eq.s32 	%p986, %r1719, 0;
	selp.f32 	%f3424, %f3420, %f3423, %p986;
	setp.eq.f32 	%p987, %f3422, 0f00000000;
	selp.f32 	%f3425, %f3424, %f3422, %p987;
	mov.b32 	%r1721, %f3425;
	shfl.sync.bfly.b32	%f3426, %f3425, 8, 31, -1;
	mov.b32 	%r1722, %f3426;
	setp.nan.f32 	%p988, %f3425, %f3426;
	max.f32 	%f3427, %f3425, %f3426;
	selp.f32 	%f3428, 0f7FC00000, %f3427, %p988;
	setp.eq.s32 	%p989, %r1721, 0;
	selp.f32 	%f3429, %f3425, %f3428, %p989;
	setp.eq.s32 	%p990, %r1722, 0;
	selp.f32 	%f3430, %f3426, %f3429, %p990;
	setp.eq.f32 	%p991, %f3428, 0f00000000;
	selp.f32 	%f3431, %f3430, %f3428, %p991;
	mov.b32 	%r1723, %f3431;
	shfl.sync.bfly.b32	%f3432, %f3431, 4, 31, -1;
	mov.b32 	%r1724, %f3432;
	setp.nan.f32 	%p992, %f3431, %f3432;
	max.f32 	%f3433, %f3431, %f3432;
	selp.f32 	%f3434, 0f7FC00000, %f3433, %p992;
	setp.eq.s32 	%p993, %r1723, 0;
	selp.f32 	%f3435, %f3431, %f3434, %p993;
	setp.eq.s32 	%p994, %r1724, 0;
	selp.f32 	%f3436, %f3432, %f3435, %p994;
	setp.eq.f32 	%p995, %f3434, 0f00000000;
	selp.f32 	%f3437, %f3436, %f3434, %p995;
	mov.b32 	%r1725, %f3437;
	shfl.sync.bfly.b32	%f3438, %f3437, 2, 31, -1;
	mov.b32 	%r1726, %f3438;
	setp.nan.f32 	%p996, %f3437, %f3438;
	max.f32 	%f3439, %f3437, %f3438;
	selp.f32 	%f3440, 0f7FC00000, %f3439, %p996;
	setp.eq.s32 	%p997, %r1725, 0;
	selp.f32 	%f3441, %f3437, %f3440, %p997;
	setp.eq.s32 	%p998, %r1726, 0;
	selp.f32 	%f3442, %f3438, %f3441, %p998;
	setp.eq.f32 	%p999, %f3440, 0f00000000;
	selp.f32 	%f3443, %f3442, %f3440, %p999;
	mov.b32 	%r1727, %f3443;
	shfl.sync.bfly.b32	%f3444, %f3443, 1, 31, -1;
	mov.b32 	%r1728, %f3444;
	setp.nan.f32 	%p1000, %f3443, %f3444;
	max.f32 	%f3445, %f3443, %f3444;
	selp.f32 	%f3446, 0f7FC00000, %f3445, %p1000;
	setp.eq.s32 	%p1001, %r1727, 0;
	selp.f32 	%f3447, %f3443, %f3446, %p1001;
	setp.eq.s32 	%p1002, %r1728, 0;
	selp.f32 	%f3448, %f3444, %f3447, %p1002;
	setp.eq.f32 	%p1003, %f3446, 0f00000000;
	selp.f32 	%f3652, %f3448, %f3446, %p1003;
	shfl.sync.bfly.b32	%f3449, %f3653, 16, 31, -1;
	mov.b32 	%r1729, %f3449;
	mov.b32 	%r1730, %f3653;
	setp.nan.f32 	%p1004, %f3653, %f3449;
	max.f32 	%f3450, %f3653, %f3449;
	selp.f32 	%f3451, 0f7FC00000, %f3450, %p1004;
	setp.eq.s32 	%p1005, %r1730, 0;
	selp.f32 	%f3452, %f3653, %f3451, %p1005;
	setp.eq.s32 	%p1006, %r1729, 0;
	selp.f32 	%f3453, %f3449, %f3452, %p1006;
	setp.eq.f32 	%p1007, %f3451, 0f00000000;
	selp.f32 	%f3454, %f3453, %f3451, %p1007;
	mov.b32 	%r1731, %f3454;
	shfl.sync.bfly.b32	%f3455, %f3454, 8, 31, -1;
	mov.b32 	%r1732, %f3455;
	setp.nan.f32 	%p1008, %f3454, %f3455;
	max.f32 	%f3456, %f3454, %f3455;
	selp.f32 	%f3457, 0f7FC00000, %f3456, %p1008;
	setp.eq.s32 	%p1009, %r1731, 0;
	selp.f32 	%f3458, %f3454, %f3457, %p1009;
	setp.eq.s32 	%p1010, %r1732, 0;
	selp.f32 	%f3459, %f3455, %f3458, %p1010;
	setp.eq.f32 	%p1011, %f3457, 0f00000000;
	selp.f32 	%f3460, %f3459, %f3457, %p1011;
	mov.b32 	%r1733, %f3460;
	shfl.sync.bfly.b32	%f3461, %f3460, 4, 31, -1;
	mov.b32 	%r1734, %f3461;
	setp.nan.f32 	%p1012, %f3460, %f3461;
	max.f32 	%f3462, %f3460, %f3461;
	selp.f32 	%f3463, 0f7FC00000, %f3462, %p1012;
	setp.eq.s32 	%p1013, %r1733, 0;
	selp.f32 	%f3464, %f3460, %f3463, %p1013;
	setp.eq.s32 	%p1014, %r1734, 0;
	selp.f32 	%f3465, %f3461, %f3464, %p1014;
	setp.eq.f32 	%p1015, %f3463, 0f00000000;
	selp.f32 	%f3466, %f3465, %f3463, %p1015;
	mov.b32 	%r1735, %f3466;
	shfl.sync.bfly.b32	%f3467, %f3466, 2, 31, -1;
	mov.b32 	%r1736, %f3467;
	setp.nan.f32 	%p1016, %f3466, %f3467;
	max.f32 	%f3468, %f3466, %f3467;
	selp.f32 	%f3469, 0f7FC00000, %f3468, %p1016;
	setp.eq.s32 	%p1017, %r1735, 0;
	selp.f32 	%f3470, %f3466, %f3469, %p1017;
	setp.eq.s32 	%p1018, %r1736, 0;
	selp.f32 	%f3471, %f3467, %f3470, %p1018;
	setp.eq.f32 	%p1019, %f3469, 0f00000000;
	selp.f32 	%f3472, %f3471, %f3469, %p1019;
	mov.b32 	%r1737, %f3472;
	shfl.sync.bfly.b32	%f3473, %f3472, 1, 31, -1;
	mov.b32 	%r1738, %f3473;
	setp.nan.f32 	%p1020, %f3472, %f3473;
	max.f32 	%f3474, %f3472, %f3473;
	selp.f32 	%f3475, 0f7FC00000, %f3474, %p1020;
	setp.eq.s32 	%p1021, %r1737, 0;
	selp.f32 	%f3476, %f3472, %f3475, %p1021;
	setp.eq.s32 	%p1022, %r1738, 0;
	selp.f32 	%f3477, %f3473, %f3476, %p1022;
	setp.eq.f32 	%p1023, %f3475, 0f00000000;
	selp.f32 	%f3653, %f3477, %f3475, %p1023;
	shfl.sync.bfly.b32	%f3478, %f3654, 16, 31, -1;
	mov.b32 	%r1739, %f3478;
	mov.b32 	%r1740, %f3654;
	setp.nan.f32 	%p1024, %f3654, %f3478;
	max.f32 	%f3479, %f3654, %f3478;
	selp.f32 	%f3480, 0f7FC00000, %f3479, %p1024;
	setp.eq.s32 	%p1025, %r1740, 0;
	selp.f32 	%f3481, %f3654, %f3480, %p1025;
	setp.eq.s32 	%p1026, %r1739, 0;
	selp.f32 	%f3482, %f3478, %f3481, %p1026;
	setp.eq.f32 	%p1027, %f3480, 0f00000000;
	selp.f32 	%f3483, %f3482, %f3480, %p1027;
	mov.b32 	%r1741, %f3483;
	shfl.sync.bfly.b32	%f3484, %f3483, 8, 31, -1;
	mov.b32 	%r1742, %f3484;
	setp.nan.f32 	%p1028, %f3483, %f3484;
	max.f32 	%f3485, %f3483, %f3484;
	selp.f32 	%f3486, 0f7FC00000, %f3485, %p1028;
	setp.eq.s32 	%p1029, %r1741, 0;
	selp.f32 	%f3487, %f3483, %f3486, %p1029;
	setp.eq.s32 	%p1030, %r1742, 0;
	selp.f32 	%f3488, %f3484, %f3487, %p1030;
	setp.eq.f32 	%p1031, %f3486, 0f00000000;
	selp.f32 	%f3489, %f3488, %f3486, %p1031;
	mov.b32 	%r1743, %f3489;
	shfl.sync.bfly.b32	%f3490, %f3489, 4, 31, -1;
	mov.b32 	%r1744, %f3490;
	setp.nan.f32 	%p1032, %f3489, %f3490;
	max.f32 	%f3491, %f3489, %f3490;
	selp.f32 	%f3492, 0f7FC00000, %f3491, %p1032;
	setp.eq.s32 	%p1033, %r1743, 0;
	selp.f32 	%f3493, %f3489, %f3492, %p1033;
	setp.eq.s32 	%p1034, %r1744, 0;
	selp.f32 	%f3494, %f3490, %f3493, %p1034;
	setp.eq.f32 	%p1035, %f3492, 0f00000000;
	selp.f32 	%f3495, %f3494, %f3492, %p1035;
	mov.b32 	%r1745, %f3495;
	shfl.sync.bfly.b32	%f3496, %f3495, 2, 31, -1;
	mov.b32 	%r1746, %f3496;
	setp.nan.f32 	%p1036, %f3495, %f3496;
	max.f32 	%f3497, %f3495, %f3496;
	selp.f32 	%f3498, 0f7FC00000, %f3497, %p1036;
	setp.eq.s32 	%p1037, %r1745, 0;
	selp.f32 	%f3499, %f3495, %f3498, %p1037;
	setp.eq.s32 	%p1038, %r1746, 0;
	selp.f32 	%f3500, %f3496, %f3499, %p1038;
	setp.eq.f32 	%p1039, %f3498, 0f00000000;
	selp.f32 	%f3501, %f3500, %f3498, %p1039;
	mov.b32 	%r1747, %f3501;
	shfl.sync.bfly.b32	%f3502, %f3501, 1, 31, -1;
	mov.b32 	%r1748, %f3502;
	setp.nan.f32 	%p1040, %f3501, %f3502;
	max.f32 	%f3503, %f3501, %f3502;
	selp.f32 	%f3504, 0f7FC00000, %f3503, %p1040;
	setp.eq.s32 	%p1041, %r1747, 0;
	selp.f32 	%f3505, %f3501, %f3504, %p1041;
	setp.eq.s32 	%p1042, %r1748, 0;
	selp.f32 	%f3506, %f3502, %f3505, %p1042;
	setp.eq.f32 	%p1043, %f3504, 0f00000000;
	selp.f32 	%f3654, %f3506, %f3504, %p1043;
	shfl.sync.bfly.b32	%f3507, %f8, 16, 31, -1;
	mov.b32 	%r1749, %f3507;
	mov.b32 	%r1750, %f8;
	setp.nan.f32 	%p1044, %f8, %f3507;
	max.f32 	%f3508, %f8, %f3507;
	selp.f32 	%f3509, 0f7FC00000, %f3508, %p1044;
	setp.eq.s32 	%p1045, %r1750, 0;
	selp.f32 	%f3510, %f8, %f3509, %p1045;
	setp.eq.s32 	%p1046, %r1749, 0;
	selp.f32 	%f3511, %f3507, %f3510, %p1046;
	setp.eq.f32 	%p1047, %f3509, 0f00000000;
	selp.f32 	%f3512, %f3511, %f3509, %p1047;
	mov.b32 	%r1751, %f3512;
	shfl.sync.bfly.b32	%f3513, %f3512, 8, 31, -1;
	mov.b32 	%r1752, %f3513;
	setp.nan.f32 	%p1048, %f3512, %f3513;
	max.f32 	%f3514, %f3512, %f3513;
	selp.f32 	%f3515, 0f7FC00000, %f3514, %p1048;
	setp.eq.s32 	%p1049, %r1751, 0;
	selp.f32 	%f3516, %f3512, %f3515, %p1049;
	setp.eq.s32 	%p1050, %r1752, 0;
	selp.f32 	%f3517, %f3513, %f3516, %p1050;
	setp.eq.f32 	%p1051, %f3515, 0f00000000;
	selp.f32 	%f3518, %f3517, %f3515, %p1051;
	mov.b32 	%r1753, %f3518;
	shfl.sync.bfly.b32	%f3519, %f3518, 4, 31, -1;
	mov.b32 	%r1754, %f3519;
	setp.nan.f32 	%p1052, %f3518, %f3519;
	max.f32 	%f3520, %f3518, %f3519;
	selp.f32 	%f3521, 0f7FC00000, %f3520, %p1052;
	setp.eq.s32 	%p1053, %r1753, 0;
	selp.f32 	%f3522, %f3518, %f3521, %p1053;
	setp.eq.s32 	%p1054, %r1754, 0;
	selp.f32 	%f3523, %f3519, %f3522, %p1054;
	setp.eq.f32 	%p1055, %f3521, 0f00000000;
	selp.f32 	%f3524, %f3523, %f3521, %p1055;
	mov.b32 	%r1755, %f3524;
	shfl.sync.bfly.b32	%f3525, %f3524, 2, 31, -1;
	mov.b32 	%r1756, %f3525;
	setp.nan.f32 	%p1056, %f3524, %f3525;
	max.f32 	%f3526, %f3524, %f3525;
	selp.f32 	%f3527, 0f7FC00000, %f3526, %p1056;
	setp.eq.s32 	%p1057, %r1755, 0;
	selp.f32 	%f3528, %f3524, %f3527, %p1057;
	setp.eq.s32 	%p1058, %r1756, 0;
	selp.f32 	%f3529, %f3525, %f3528, %p1058;
	setp.eq.f32 	%p1059, %f3527, 0f00000000;
	selp.f32 	%f3530, %f3529, %f3527, %p1059;
	mov.b32 	%r1757, %f3530;
	shfl.sync.bfly.b32	%f3531, %f3530, 1, 31, -1;
	mov.b32 	%r1758, %f3531;
	setp.nan.f32 	%p1060, %f3530, %f3531;
	max.f32 	%f3532, %f3530, %f3531;
	selp.f32 	%f3533, 0f7FC00000, %f3532, %p1060;
	setp.eq.s32 	%p1061, %r1757, 0;
	selp.f32 	%f3534, %f3530, %f3533, %p1061;
	setp.eq.s32 	%p1062, %r1758, 0;
	selp.f32 	%f3535, %f3531, %f3534, %p1062;
	setp.eq.f32 	%p1063, %f3533, 0f00000000;
	selp.f32 	%f3655, %f3535, %f3533, %p1063;
	bra.uni 	$L__BB0_502;
$L__BB0_59:                             // %LoadF2Imm
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.f32 	%f3664, [%rd25+4];
	mov.f32 	%f3655, %f8;
	mov.f32 	%f3665, %f3664;
	mov.f32 	%f3666, %f3664;
	mov.f32 	%f3667, %f3664;
	mov.f32 	%f3668, %f3664;
	mov.f32 	%f3669, %f3664;
	mov.f32 	%f3670, %f3664;
	mov.f32 	%f3671, %f3664;
	bra.uni 	$L__BB0_502;
$L__BB0_454:                            // %LoadGlobalBF16
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u32 	%r519, [%rd25+4];
	and.b32  	%r520, %r519, 15;
	shr.u32 	%r521, %r519, 4;
	shfl.sync.idx.b32	%r522, %r16, %r520, 31, -1;
	shfl.sync.idx.b32	%r523, %r17, %r520, 31, -1;
	cvt.u64.u32 	%rd224, %r522;
	cvt.u64.u32 	%rd225, %r523;
	shl.b64 	%rd226, %rd225, 32;
	or.b64  	%rd227, %rd224, %rd226;
	add.s32 	%r383, %r521, %r18;
	shfl.sync.idx.b32	%r384, %r10, %r520, 31, -1;
	shfl.sync.idx.b32	%r524, %r9, %r520, 31, -1;
	shfl.sync.idx.b32	%r385, %r11, %r520, 31, -1;
	shfl.sync.idx.b32	%r386, %r12, %r520, 31, -1;
	shfl.sync.idx.b32	%r387, %r15, %r520, 31, -1;
	mul.lo.s32 	%r525, %r524, %r383;
	mul.wide.s32 	%rd228, %r525, 2;
	add.s64 	%rd135, %rd227, %rd228;
	setp.ge.u32 	%p62, %r383, %r384;
	mov.f32 	%f3657, 0f00000000;
	mov.f32 	%f3656, %f3657;
	@%p62 bra 	$L__BB0_456;
// %bb.455:                             // %LoadGlobalBF16.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u16 	%r526, [%rd135];
	shl.b32 	%r527, %r526, 16;
	mov.b32 	%f3656, %r527;
$L__BB0_456:                            // %LoadGlobalBF16.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r388, %r387, %r383;
	cvt.s64.s32 	%rd136, %r385;
	mul.wide.s32 	%rd229, %r385, 2;
	add.s64 	%rd137, %rd135, %rd229;
	setp.ge.u32 	%p63, %r388, %r384;
	setp.lt.u32 	%p64, %r386, 2;
	or.pred  	%p65, %p64, %p63;
	@%p65 bra 	$L__BB0_458;
// %bb.457:                             // %LoadGlobalBF16.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u16 	%r528, [%rd137];
	shl.b32 	%r529, %r528, 16;
	mov.b32 	%f3657, %r529;
$L__BB0_458:                            // %LoadGlobalBF16.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r389, %r388, %r387;
	shl.b64 	%rd230, %rd136, 1;
	add.s64 	%rd138, %rd137, %rd230;
	setp.ge.u32 	%p66, %r389, %r384;
	setp.lt.u32 	%p67, %r386, 3;
	mov.f32 	%f3659, 0f00000000;
	or.pred  	%p68, %p67, %p66;
	mov.f32 	%f3658, %f3659;
	@%p68 bra 	$L__BB0_460;
// %bb.459:                             // %LoadGlobalBF16.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u16 	%r530, [%rd138];
	shl.b32 	%r531, %r530, 16;
	mov.b32 	%f3658, %r531;
$L__BB0_460:                            // %LoadGlobalBF16.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r390, %r389, %r387;
	add.s64 	%rd139, %rd138, %rd230;
	setp.ge.u32 	%p69, %r390, %r384;
	setp.lt.u32 	%p70, %r386, 4;
	or.pred  	%p71, %p70, %p69;
	@%p71 bra 	$L__BB0_462;
// %bb.461:                             // %LoadGlobalBF16.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u16 	%r532, [%rd139];
	shl.b32 	%r533, %r532, 16;
	mov.b32 	%f3659, %r533;
$L__BB0_462:                            // %LoadGlobalBF16.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r391, %r390, %r387;
	add.s64 	%rd140, %rd139, %rd230;
	setp.ge.u32 	%p72, %r391, %r384;
	setp.lt.u32 	%p73, %r386, 5;
	mov.f32 	%f3661, 0f00000000;
	or.pred  	%p74, %p73, %p72;
	mov.f32 	%f3660, %f3661;
	@%p74 bra 	$L__BB0_464;
// %bb.463:                             // %LoadGlobalBF16.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u16 	%r534, [%rd140];
	shl.b32 	%r535, %r534, 16;
	mov.b32 	%f3660, %r535;
$L__BB0_464:                            // %LoadGlobalBF16.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r392, %r391, %r387;
	add.s64 	%rd141, %rd140, %rd230;
	setp.ge.u32 	%p75, %r392, %r384;
	setp.lt.u32 	%p76, %r386, 6;
	or.pred  	%p77, %p76, %p75;
	@%p77 bra 	$L__BB0_466;
// %bb.465:                             // %LoadGlobalBF16.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u16 	%r536, [%rd141];
	shl.b32 	%r537, %r536, 16;
	mov.b32 	%f3661, %r537;
$L__BB0_466:                            // %LoadGlobalBF16.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r393, %r392, %r387;
	add.s64 	%rd142, %rd141, %rd230;
	setp.ge.u32 	%p78, %r393, %r384;
	setp.lt.u32 	%p79, %r386, 7;
	mov.f32 	%f3663, 0f00000000;
	or.pred  	%p80, %p79, %p78;
	mov.f32 	%f3662, %f3663;
	@%p80 bra 	$L__BB0_468;
// %bb.467:                             // %LoadGlobalBF16.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u16 	%r538, [%rd142];
	shl.b32 	%r539, %r538, 16;
	mov.b32 	%f3662, %r539;
$L__BB0_468:                            // %LoadGlobalBF16.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r540, %r393, %r387;
	setp.ge.u32 	%p81, %r540, %r384;
	setp.lt.u32 	%p82, %r386, 8;
	or.pred  	%p83, %p82, %p81;
	mov.f32 	%f3655, %f8;
	@%p83 bra 	$L__BB0_502;
// %bb.469:                             // %LoadGlobalBF16.endif.endi...if
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s64 	%rd143, %rd142, %rd230;
	ld.global.u16 	%r541, [%rd143];
	shl.b32 	%r542, %r541, 16;
	mov.b32 	%f3663, %r542;
	mov.f32 	%f3655, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_486:                            // %LoadGlobalU8
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u32 	%r455, [%rd25+4];
	and.b32  	%r456, %r455, 15;
	shr.u32 	%r457, %r455, 4;
	shfl.sync.idx.b32	%r458, %r16, %r456, 31, -1;
	shfl.sync.idx.b32	%r459, %r17, %r456, 31, -1;
	cvt.u64.u32 	%rd207, %r458;
	cvt.u64.u32 	%rd208, %r459;
	shl.b64 	%rd209, %rd208, 32;
	or.b64  	%rd210, %rd207, %rd209;
	add.s32 	%r405, %r457, %r18;
	shfl.sync.idx.b32	%r406, %r10, %r456, 31, -1;
	shfl.sync.idx.b32	%r460, %r9, %r456, 31, -1;
	shfl.sync.idx.b32	%r407, %r11, %r456, 31, -1;
	shfl.sync.idx.b32	%r408, %r12, %r456, 31, -1;
	shfl.sync.idx.b32	%r409, %r15, %r456, 31, -1;
	mul.lo.s32 	%r461, %r460, %r405;
	cvt.s64.s32 	%rd211, %r461;
	add.s64 	%rd153, %rd210, %rd211;
	setp.ge.u32 	%p10, %r405, %r406;
	mov.f32 	%f3657, 0f00000000;
	mov.f32 	%f3656, %f3657;
	@%p10 bra 	$L__BB0_488;
// %bb.487:                             // %LoadGlobalU8.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u8 	%rs17, [%rd153];
	cvt.rn.f32.u16 	%f3656, %rs17;
$L__BB0_488:                            // %LoadGlobalU8.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r410, %r409, %r405;
	cvt.s64.s32 	%rd154, %r407;
	add.s64 	%rd155, %rd153, %rd154;
	setp.ge.u32 	%p11, %r410, %r406;
	setp.lt.u32 	%p12, %r408, 2;
	or.pred  	%p13, %p12, %p11;
	@%p13 bra 	$L__BB0_490;
// %bb.489:                             // %LoadGlobalU8.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u8 	%rs18, [%rd155];
	cvt.rn.f32.u16 	%f3657, %rs18;
$L__BB0_490:                            // %LoadGlobalU8.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r411, %r410, %r409;
	add.s64 	%rd156, %rd155, %rd154;
	setp.ge.u32 	%p14, %r411, %r406;
	setp.lt.u32 	%p15, %r408, 3;
	mov.f32 	%f3659, 0f00000000;
	or.pred  	%p16, %p15, %p14;
	mov.f32 	%f3658, %f3659;
	@%p16 bra 	$L__BB0_492;
// %bb.491:                             // %LoadGlobalU8.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u8 	%rs19, [%rd156];
	cvt.rn.f32.u16 	%f3658, %rs19;
$L__BB0_492:                            // %LoadGlobalU8.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r412, %r411, %r409;
	add.s64 	%rd157, %rd156, %rd154;
	setp.ge.u32 	%p17, %r412, %r406;
	setp.lt.u32 	%p18, %r408, 4;
	or.pred  	%p19, %p18, %p17;
	@%p19 bra 	$L__BB0_494;
// %bb.493:                             // %LoadGlobalU8.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u8 	%rs20, [%rd157];
	cvt.rn.f32.u16 	%f3659, %rs20;
$L__BB0_494:                            // %LoadGlobalU8.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r413, %r412, %r409;
	add.s64 	%rd158, %rd157, %rd154;
	setp.ge.u32 	%p20, %r413, %r406;
	setp.lt.u32 	%p21, %r408, 5;
	mov.f32 	%f3661, 0f00000000;
	or.pred  	%p22, %p21, %p20;
	mov.f32 	%f3660, %f3661;
	@%p22 bra 	$L__BB0_496;
// %bb.495:                             // %LoadGlobalU8.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u8 	%rs21, [%rd158];
	cvt.rn.f32.u16 	%f3660, %rs21;
$L__BB0_496:                            // %LoadGlobalU8.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r414, %r413, %r409;
	add.s64 	%rd159, %rd158, %rd154;
	setp.ge.u32 	%p23, %r414, %r406;
	setp.lt.u32 	%p24, %r408, 6;
	or.pred  	%p25, %p24, %p23;
	@%p25 bra 	$L__BB0_498;
// %bb.497:                             // %LoadGlobalU8.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u8 	%rs22, [%rd159];
	cvt.rn.f32.u16 	%f3661, %rs22;
$L__BB0_498:                            // %LoadGlobalU8.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r415, %r414, %r409;
	add.s64 	%rd160, %rd159, %rd154;
	setp.ge.u32 	%p26, %r415, %r406;
	setp.lt.u32 	%p27, %r408, 7;
	mov.f32 	%f3663, 0f00000000;
	or.pred  	%p28, %p27, %p26;
	mov.f32 	%f3662, %f3663;
	@%p28 bra 	$L__BB0_500;
// %bb.499:                             // %LoadGlobalU8.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_3 Depth=1
	ld.global.u8 	%rs23, [%rd160];
	cvt.rn.f32.u16 	%f3662, %rs23;
$L__BB0_500:                            // %LoadGlobalU8.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r462, %r415, %r409;
	setp.ge.u32 	%p29, %r462, %r406;
	setp.lt.u32 	%p30, %r408, 8;
	or.pred  	%p31, %p30, %p29;
	mov.f32 	%f3655, %f8;
	@%p31 bra 	$L__BB0_502;
// %bb.501:                             // %LoadGlobalU8.endif.endif....if
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s64 	%rd161, %rd160, %rd154;
	ld.global.u8 	%rs24, [%rd161];
	cvt.rn.f32.u16 	%f3663, %rs24;
	mov.f32 	%f3655, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_132:                            // %FCos
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2664, %f3648, 0f3F22F983;
	cvt.rni.s32.f32 	%r1816, %f2664;
	cvt.rn.f32.s32 	%f2665, %r1816;
	fma.rn.f32 	%f2666, %f2665, 0fBFC90FDA, %f3648;
	fma.rn.f32 	%f2667, %f2665, 0fB3A22168, %f2666;
	fma.rn.f32 	%f3695, %f2665, 0fA7C234C5, %f2667;
	abs.f32 	%f245, %f3648;
	setp.ltu.f32 	%p608, %f245, 0f47CE4780;
	@%p608 bra 	$L__BB0_140;
// %bb.133:                             // %__nv_isinff.exit.i.i.i171
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p609, %f245, 0f7F800000;
	@%p609 bra 	$L__BB0_135;
// %bb.134:                             // %__nv_fmul_rn.exit.i.i.i190
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2670, 0f00000000;
	mul.rn.f32 	%f3695, %f3648, %f2670;
	mov.b32 	%r1816, 0;
	bra.uni 	$L__BB0_140;
$L__BB0_280:                            // %FArcTan2
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f388, %f3656;
	abs.f32 	%f1947, %f3648;
	setp.neu.f32 	%p408, %f388, 0f00000000;
	setp.neu.f32 	%p409, %f1947, 0f00000000;
	or.pred  	%p410, %p408, %p409;
	@%p410 bra 	$L__BB0_282;
// %bb.281:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r814, %f3656;
	shr.s32 	%r815, %r814, 31;
	and.b32  	%r816, %r815, 1078530011;
	mov.b32 	%f1970, %r816;
	copysign.f32 	%f3648, %f3648, %f1970;
	bra.uni 	$L__BB0_285;
$L__BB0_403:                            // %FLog
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.lt.f32 	%p168, %f3648, 0f00800000;
	mul.rn.f32 	%f1025, %f3648, 0f4B000000;
	selp.f32 	%f1026, %f1025, %f3648, %p168;
	selp.f32 	%f1027, 0fC1B80000, 0f00000000, %p168;
	mov.b32 	%r623, %f1026;
	add.s32 	%r624, %r623, -1059760811;
	and.b32  	%r625, %r624, -8388608;
	sub.s32 	%r626, %r623, %r625;
	mov.b32 	%f1028, %r626;
	cvt.rn.f32.s32 	%f1029, %r625;
	fma.rn.f32 	%f1030, %f1029, 0f34000000, %f1027;
	add.rn.f32 	%f1031, %f1028, 0fBF800000;
	fma.rn.f32 	%f1032, %f1031, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1033, %f1032, %f1031, 0fBDF8CDCC;
	fma.rn.f32 	%f1034, %f1033, %f1031, 0f3E0F2955;
	fma.rn.f32 	%f1035, %f1034, %f1031, 0fBE2AD8B9;
	fma.rn.f32 	%f1036, %f1035, %f1031, 0f3E4CED0B;
	fma.rn.f32 	%f1037, %f1036, %f1031, 0fBE7FFF22;
	fma.rn.f32 	%f1038, %f1037, %f1031, 0f3EAAAA78;
	fma.rn.f32 	%f1039, %f1038, %f1031, 0fBF000000;
	mul.rn.f32 	%f1040, %f1031, %f1039;
	fma.rn.f32 	%f1041, %f1040, %f1031, %f1031;
	fma.rn.f32 	%f1042, %f1030, 0f3F317218, %f1041;
	setp.gt.u32 	%p169, %r623, 2139095039;
	fma.rn.f32 	%f1043, %f1026, 0f7F800000, 0f7F800000;
	selp.f32 	%f1044, %f1043, %f1042, %p169;
	setp.eq.f32 	%p170, %f1026, 0f00000000;
	selp.f32 	%f3648, 0fFF800000, %f1044, %p170;
	setp.lt.f32 	%p171, %f3649, 0f00800000;
	mul.rn.f32 	%f1045, %f3649, 0f4B000000;
	selp.f32 	%f1046, %f1045, %f3649, %p171;
	selp.f32 	%f1047, 0fC1B80000, 0f00000000, %p171;
	mov.b32 	%r627, %f1046;
	add.s32 	%r628, %r627, -1059760811;
	and.b32  	%r629, %r628, -8388608;
	sub.s32 	%r630, %r627, %r629;
	mov.b32 	%f1048, %r630;
	cvt.rn.f32.s32 	%f1049, %r629;
	fma.rn.f32 	%f1050, %f1049, 0f34000000, %f1047;
	add.rn.f32 	%f1051, %f1048, 0fBF800000;
	fma.rn.f32 	%f1052, %f1051, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1053, %f1052, %f1051, 0fBDF8CDCC;
	fma.rn.f32 	%f1054, %f1053, %f1051, 0f3E0F2955;
	fma.rn.f32 	%f1055, %f1054, %f1051, 0fBE2AD8B9;
	fma.rn.f32 	%f1056, %f1055, %f1051, 0f3E4CED0B;
	fma.rn.f32 	%f1057, %f1056, %f1051, 0fBE7FFF22;
	fma.rn.f32 	%f1058, %f1057, %f1051, 0f3EAAAA78;
	fma.rn.f32 	%f1059, %f1058, %f1051, 0fBF000000;
	mul.rn.f32 	%f1060, %f1051, %f1059;
	fma.rn.f32 	%f1061, %f1060, %f1051, %f1051;
	fma.rn.f32 	%f1062, %f1050, 0f3F317218, %f1061;
	setp.gt.u32 	%p172, %r627, 2139095039;
	fma.rn.f32 	%f1063, %f1046, 0f7F800000, 0f7F800000;
	selp.f32 	%f1064, %f1063, %f1062, %p172;
	setp.eq.f32 	%p173, %f1046, 0f00000000;
	selp.f32 	%f3649, 0fFF800000, %f1064, %p173;
	setp.lt.f32 	%p174, %f3650, 0f00800000;
	mul.rn.f32 	%f1065, %f3650, 0f4B000000;
	selp.f32 	%f1066, %f1065, %f3650, %p174;
	selp.f32 	%f1067, 0fC1B80000, 0f00000000, %p174;
	mov.b32 	%r631, %f1066;
	add.s32 	%r632, %r631, -1059760811;
	and.b32  	%r633, %r632, -8388608;
	sub.s32 	%r634, %r631, %r633;
	mov.b32 	%f1068, %r634;
	cvt.rn.f32.s32 	%f1069, %r633;
	fma.rn.f32 	%f1070, %f1069, 0f34000000, %f1067;
	add.rn.f32 	%f1071, %f1068, 0fBF800000;
	fma.rn.f32 	%f1072, %f1071, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1073, %f1072, %f1071, 0fBDF8CDCC;
	fma.rn.f32 	%f1074, %f1073, %f1071, 0f3E0F2955;
	fma.rn.f32 	%f1075, %f1074, %f1071, 0fBE2AD8B9;
	fma.rn.f32 	%f1076, %f1075, %f1071, 0f3E4CED0B;
	fma.rn.f32 	%f1077, %f1076, %f1071, 0fBE7FFF22;
	fma.rn.f32 	%f1078, %f1077, %f1071, 0f3EAAAA78;
	fma.rn.f32 	%f1079, %f1078, %f1071, 0fBF000000;
	mul.rn.f32 	%f1080, %f1071, %f1079;
	fma.rn.f32 	%f1081, %f1080, %f1071, %f1071;
	fma.rn.f32 	%f1082, %f1070, 0f3F317218, %f1081;
	setp.gt.u32 	%p175, %r631, 2139095039;
	fma.rn.f32 	%f1083, %f1066, 0f7F800000, 0f7F800000;
	selp.f32 	%f1084, %f1083, %f1082, %p175;
	setp.eq.f32 	%p176, %f1066, 0f00000000;
	selp.f32 	%f3650, 0fFF800000, %f1084, %p176;
	setp.lt.f32 	%p177, %f3651, 0f00800000;
	mul.rn.f32 	%f1085, %f3651, 0f4B000000;
	selp.f32 	%f1086, %f1085, %f3651, %p177;
	selp.f32 	%f1087, 0fC1B80000, 0f00000000, %p177;
	mov.b32 	%r635, %f1086;
	add.s32 	%r636, %r635, -1059760811;
	and.b32  	%r637, %r636, -8388608;
	sub.s32 	%r638, %r635, %r637;
	mov.b32 	%f1088, %r638;
	cvt.rn.f32.s32 	%f1089, %r637;
	fma.rn.f32 	%f1090, %f1089, 0f34000000, %f1087;
	add.rn.f32 	%f1091, %f1088, 0fBF800000;
	fma.rn.f32 	%f1092, %f1091, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1093, %f1092, %f1091, 0fBDF8CDCC;
	fma.rn.f32 	%f1094, %f1093, %f1091, 0f3E0F2955;
	fma.rn.f32 	%f1095, %f1094, %f1091, 0fBE2AD8B9;
	fma.rn.f32 	%f1096, %f1095, %f1091, 0f3E4CED0B;
	fma.rn.f32 	%f1097, %f1096, %f1091, 0fBE7FFF22;
	fma.rn.f32 	%f1098, %f1097, %f1091, 0f3EAAAA78;
	fma.rn.f32 	%f1099, %f1098, %f1091, 0fBF000000;
	mul.rn.f32 	%f1100, %f1091, %f1099;
	fma.rn.f32 	%f1101, %f1100, %f1091, %f1091;
	fma.rn.f32 	%f1102, %f1090, 0f3F317218, %f1101;
	setp.gt.u32 	%p178, %r635, 2139095039;
	fma.rn.f32 	%f1103, %f1086, 0f7F800000, 0f7F800000;
	selp.f32 	%f1104, %f1103, %f1102, %p178;
	setp.eq.f32 	%p179, %f1086, 0f00000000;
	selp.f32 	%f3651, 0fFF800000, %f1104, %p179;
	setp.lt.f32 	%p180, %f3652, 0f00800000;
	mul.rn.f32 	%f1105, %f3652, 0f4B000000;
	selp.f32 	%f1106, %f1105, %f3652, %p180;
	selp.f32 	%f1107, 0fC1B80000, 0f00000000, %p180;
	mov.b32 	%r639, %f1106;
	add.s32 	%r640, %r639, -1059760811;
	and.b32  	%r641, %r640, -8388608;
	sub.s32 	%r642, %r639, %r641;
	mov.b32 	%f1108, %r642;
	cvt.rn.f32.s32 	%f1109, %r641;
	fma.rn.f32 	%f1110, %f1109, 0f34000000, %f1107;
	add.rn.f32 	%f1111, %f1108, 0fBF800000;
	fma.rn.f32 	%f1112, %f1111, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1113, %f1112, %f1111, 0fBDF8CDCC;
	fma.rn.f32 	%f1114, %f1113, %f1111, 0f3E0F2955;
	fma.rn.f32 	%f1115, %f1114, %f1111, 0fBE2AD8B9;
	fma.rn.f32 	%f1116, %f1115, %f1111, 0f3E4CED0B;
	fma.rn.f32 	%f1117, %f1116, %f1111, 0fBE7FFF22;
	fma.rn.f32 	%f1118, %f1117, %f1111, 0f3EAAAA78;
	fma.rn.f32 	%f1119, %f1118, %f1111, 0fBF000000;
	mul.rn.f32 	%f1120, %f1111, %f1119;
	fma.rn.f32 	%f1121, %f1120, %f1111, %f1111;
	fma.rn.f32 	%f1122, %f1110, 0f3F317218, %f1121;
	setp.gt.u32 	%p181, %r639, 2139095039;
	fma.rn.f32 	%f1123, %f1106, 0f7F800000, 0f7F800000;
	selp.f32 	%f1124, %f1123, %f1122, %p181;
	setp.eq.f32 	%p182, %f1106, 0f00000000;
	selp.f32 	%f3652, 0fFF800000, %f1124, %p182;
	setp.lt.f32 	%p183, %f3653, 0f00800000;
	mul.rn.f32 	%f1125, %f3653, 0f4B000000;
	selp.f32 	%f1126, %f1125, %f3653, %p183;
	selp.f32 	%f1127, 0fC1B80000, 0f00000000, %p183;
	mov.b32 	%r643, %f1126;
	add.s32 	%r644, %r643, -1059760811;
	and.b32  	%r645, %r644, -8388608;
	sub.s32 	%r646, %r643, %r645;
	mov.b32 	%f1128, %r646;
	cvt.rn.f32.s32 	%f1129, %r645;
	fma.rn.f32 	%f1130, %f1129, 0f34000000, %f1127;
	add.rn.f32 	%f1131, %f1128, 0fBF800000;
	fma.rn.f32 	%f1132, %f1131, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1133, %f1132, %f1131, 0fBDF8CDCC;
	fma.rn.f32 	%f1134, %f1133, %f1131, 0f3E0F2955;
	fma.rn.f32 	%f1135, %f1134, %f1131, 0fBE2AD8B9;
	fma.rn.f32 	%f1136, %f1135, %f1131, 0f3E4CED0B;
	fma.rn.f32 	%f1137, %f1136, %f1131, 0fBE7FFF22;
	fma.rn.f32 	%f1138, %f1137, %f1131, 0f3EAAAA78;
	fma.rn.f32 	%f1139, %f1138, %f1131, 0fBF000000;
	mul.rn.f32 	%f1140, %f1131, %f1139;
	fma.rn.f32 	%f1141, %f1140, %f1131, %f1131;
	fma.rn.f32 	%f1142, %f1130, 0f3F317218, %f1141;
	setp.gt.u32 	%p184, %r643, 2139095039;
	fma.rn.f32 	%f1143, %f1126, 0f7F800000, 0f7F800000;
	selp.f32 	%f1144, %f1143, %f1142, %p184;
	setp.eq.f32 	%p185, %f1126, 0f00000000;
	selp.f32 	%f3653, 0fFF800000, %f1144, %p185;
	setp.lt.f32 	%p186, %f3654, 0f00800000;
	mul.rn.f32 	%f1145, %f3654, 0f4B000000;
	selp.f32 	%f1146, %f1145, %f3654, %p186;
	selp.f32 	%f1147, 0fC1B80000, 0f00000000, %p186;
	mov.b32 	%r647, %f1146;
	add.s32 	%r648, %r647, -1059760811;
	and.b32  	%r649, %r648, -8388608;
	sub.s32 	%r650, %r647, %r649;
	mov.b32 	%f1148, %r650;
	cvt.rn.f32.s32 	%f1149, %r649;
	fma.rn.f32 	%f1150, %f1149, 0f34000000, %f1147;
	add.rn.f32 	%f1151, %f1148, 0fBF800000;
	fma.rn.f32 	%f1152, %f1151, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1153, %f1152, %f1151, 0fBDF8CDCC;
	fma.rn.f32 	%f1154, %f1153, %f1151, 0f3E0F2955;
	fma.rn.f32 	%f1155, %f1154, %f1151, 0fBE2AD8B9;
	fma.rn.f32 	%f1156, %f1155, %f1151, 0f3E4CED0B;
	fma.rn.f32 	%f1157, %f1156, %f1151, 0fBE7FFF22;
	fma.rn.f32 	%f1158, %f1157, %f1151, 0f3EAAAA78;
	fma.rn.f32 	%f1159, %f1158, %f1151, 0fBF000000;
	mul.rn.f32 	%f1160, %f1151, %f1159;
	fma.rn.f32 	%f1161, %f1160, %f1151, %f1151;
	fma.rn.f32 	%f1162, %f1150, 0f3F317218, %f1161;
	setp.gt.u32 	%p187, %r647, 2139095039;
	fma.rn.f32 	%f1163, %f1146, 0f7F800000, 0f7F800000;
	selp.f32 	%f1164, %f1163, %f1162, %p187;
	setp.eq.f32 	%p188, %f1146, 0f00000000;
	selp.f32 	%f3654, 0fFF800000, %f1164, %p188;
	setp.lt.f32 	%p189, %f8, 0f00800000;
	mul.rn.f32 	%f1165, %f8, 0f4B000000;
	selp.f32 	%f1166, %f1165, %f8, %p189;
	selp.f32 	%f1167, 0fC1B80000, 0f00000000, %p189;
	mov.b32 	%r651, %f1166;
	add.s32 	%r652, %r651, -1059760811;
	and.b32  	%r653, %r652, -8388608;
	sub.s32 	%r654, %r651, %r653;
	mov.b32 	%f1168, %r654;
	cvt.rn.f32.s32 	%f1169, %r653;
	fma.rn.f32 	%f1170, %f1169, 0f34000000, %f1167;
	add.rn.f32 	%f1171, %f1168, 0fBF800000;
	fma.rn.f32 	%f1172, %f1171, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1173, %f1172, %f1171, 0fBDF8CDCC;
	fma.rn.f32 	%f1174, %f1173, %f1171, 0f3E0F2955;
	fma.rn.f32 	%f1175, %f1174, %f1171, 0fBE2AD8B9;
	fma.rn.f32 	%f1176, %f1175, %f1171, 0f3E4CED0B;
	fma.rn.f32 	%f1177, %f1176, %f1171, 0fBE7FFF22;
	fma.rn.f32 	%f1178, %f1177, %f1171, 0f3EAAAA78;
	fma.rn.f32 	%f1179, %f1178, %f1171, 0fBF000000;
	mul.rn.f32 	%f1180, %f1171, %f1179;
	fma.rn.f32 	%f1181, %f1180, %f1171, %f1171;
	fma.rn.f32 	%f1182, %f1170, 0f3F317218, %f1181;
	setp.gt.u32 	%p190, %r651, 2139095039;
	fma.rn.f32 	%f1183, %f1166, 0f7F800000, 0f7F800000;
	selp.f32 	%f1184, %f1183, %f1182, %p190;
	setp.eq.f32 	%p191, %f1166, 0f00000000;
	selp.f32 	%f3655, 0fFF800000, %f1184, %p191;
	bra.uni 	$L__BB0_502;
$L__BB0_277:                            // %FArcSin
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f2399, %f3648;
	mov.f32 	%f2400, 0f3F800000;
	sub.rn.f32 	%f2401, %f2400, %f2399;
	mul.rn.f32 	%f2402, %f2401, 0f3F000000;
	sqrt.approx.f32 	%f2403, %f2402;
	setp.gt.f32 	%p520, %f2399, 0f3F11EB85;
	selp.f32 	%f2404, %f2403, %f2399, %p520;
	mul.rn.f32 	%f2405, %f2404, %f2404;
	fma.rn.f32 	%f2406, %f2405, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2407, %f2406, %f2405, 0f3D3F841F;
	fma.rn.f32 	%f2408, %f2407, %f2405, 0f3D994929;
	fma.rn.f32 	%f2409, %f2408, %f2405, 0f3E2AAB94;
	mul.rn.f32 	%f2410, %f2405, %f2409;
	fma.rn.f32 	%f2411, %f2410, %f2404, %f2404;
	fma.rn.f32 	%f2412, %f2411, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2413, %f2412, %f2411, %p520;
	setp.num.f32 	%p521, %f2413, %f2413;
	mov.b32 	%r919, %f2413;
	mov.b32 	%r920, %f3648;
	and.b32  	%r921, %r920, -2147483648;
	or.b32  	%r922, %r921, %r919;
	mov.b32 	%f2414, %r922;
	selp.f32 	%f3648, %f2414, %f2413, %p521;
	abs.f32 	%f2415, %f3649;
	sub.rn.f32 	%f2416, %f2400, %f2415;
	mul.rn.f32 	%f2417, %f2416, 0f3F000000;
	sqrt.approx.f32 	%f2418, %f2417;
	setp.gt.f32 	%p522, %f2415, 0f3F11EB85;
	selp.f32 	%f2419, %f2418, %f2415, %p522;
	mul.rn.f32 	%f2420, %f2419, %f2419;
	fma.rn.f32 	%f2421, %f2420, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2422, %f2421, %f2420, 0f3D3F841F;
	fma.rn.f32 	%f2423, %f2422, %f2420, 0f3D994929;
	fma.rn.f32 	%f2424, %f2423, %f2420, 0f3E2AAB94;
	mul.rn.f32 	%f2425, %f2420, %f2424;
	fma.rn.f32 	%f2426, %f2425, %f2419, %f2419;
	fma.rn.f32 	%f2427, %f2426, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2428, %f2427, %f2426, %p522;
	setp.num.f32 	%p523, %f2428, %f2428;
	mov.b32 	%r923, %f2428;
	mov.b32 	%r924, %f3649;
	and.b32  	%r925, %r924, -2147483648;
	or.b32  	%r926, %r925, %r923;
	mov.b32 	%f2429, %r926;
	selp.f32 	%f3649, %f2429, %f2428, %p523;
	abs.f32 	%f2430, %f3650;
	sub.rn.f32 	%f2431, %f2400, %f2430;
	mul.rn.f32 	%f2432, %f2431, 0f3F000000;
	sqrt.approx.f32 	%f2433, %f2432;
	setp.gt.f32 	%p524, %f2430, 0f3F11EB85;
	selp.f32 	%f2434, %f2433, %f2430, %p524;
	mul.rn.f32 	%f2435, %f2434, %f2434;
	fma.rn.f32 	%f2436, %f2435, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2437, %f2436, %f2435, 0f3D3F841F;
	fma.rn.f32 	%f2438, %f2437, %f2435, 0f3D994929;
	fma.rn.f32 	%f2439, %f2438, %f2435, 0f3E2AAB94;
	mul.rn.f32 	%f2440, %f2435, %f2439;
	fma.rn.f32 	%f2441, %f2440, %f2434, %f2434;
	fma.rn.f32 	%f2442, %f2441, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2443, %f2442, %f2441, %p524;
	setp.num.f32 	%p525, %f2443, %f2443;
	mov.b32 	%r927, %f2443;
	mov.b32 	%r928, %f3650;
	and.b32  	%r929, %r928, -2147483648;
	or.b32  	%r930, %r929, %r927;
	mov.b32 	%f2444, %r930;
	selp.f32 	%f3650, %f2444, %f2443, %p525;
	abs.f32 	%f2445, %f3651;
	sub.rn.f32 	%f2446, %f2400, %f2445;
	mul.rn.f32 	%f2447, %f2446, 0f3F000000;
	sqrt.approx.f32 	%f2448, %f2447;
	setp.gt.f32 	%p526, %f2445, 0f3F11EB85;
	selp.f32 	%f2449, %f2448, %f2445, %p526;
	mul.rn.f32 	%f2450, %f2449, %f2449;
	fma.rn.f32 	%f2451, %f2450, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2452, %f2451, %f2450, 0f3D3F841F;
	fma.rn.f32 	%f2453, %f2452, %f2450, 0f3D994929;
	fma.rn.f32 	%f2454, %f2453, %f2450, 0f3E2AAB94;
	mul.rn.f32 	%f2455, %f2450, %f2454;
	fma.rn.f32 	%f2456, %f2455, %f2449, %f2449;
	fma.rn.f32 	%f2457, %f2456, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2458, %f2457, %f2456, %p526;
	setp.num.f32 	%p527, %f2458, %f2458;
	mov.b32 	%r931, %f2458;
	mov.b32 	%r932, %f3651;
	and.b32  	%r933, %r932, -2147483648;
	or.b32  	%r934, %r933, %r931;
	mov.b32 	%f2459, %r934;
	selp.f32 	%f3651, %f2459, %f2458, %p527;
	abs.f32 	%f2460, %f3652;
	sub.rn.f32 	%f2461, %f2400, %f2460;
	mul.rn.f32 	%f2462, %f2461, 0f3F000000;
	sqrt.approx.f32 	%f2463, %f2462;
	setp.gt.f32 	%p528, %f2460, 0f3F11EB85;
	selp.f32 	%f2464, %f2463, %f2460, %p528;
	mul.rn.f32 	%f2465, %f2464, %f2464;
	fma.rn.f32 	%f2466, %f2465, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2467, %f2466, %f2465, 0f3D3F841F;
	fma.rn.f32 	%f2468, %f2467, %f2465, 0f3D994929;
	fma.rn.f32 	%f2469, %f2468, %f2465, 0f3E2AAB94;
	mul.rn.f32 	%f2470, %f2465, %f2469;
	fma.rn.f32 	%f2471, %f2470, %f2464, %f2464;
	fma.rn.f32 	%f2472, %f2471, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2473, %f2472, %f2471, %p528;
	setp.num.f32 	%p529, %f2473, %f2473;
	mov.b32 	%r935, %f2473;
	mov.b32 	%r936, %f3652;
	and.b32  	%r937, %r936, -2147483648;
	or.b32  	%r938, %r937, %r935;
	mov.b32 	%f2474, %r938;
	selp.f32 	%f3652, %f2474, %f2473, %p529;
	abs.f32 	%f2475, %f3653;
	sub.rn.f32 	%f2476, %f2400, %f2475;
	mul.rn.f32 	%f2477, %f2476, 0f3F000000;
	sqrt.approx.f32 	%f2478, %f2477;
	setp.gt.f32 	%p530, %f2475, 0f3F11EB85;
	selp.f32 	%f2479, %f2478, %f2475, %p530;
	mul.rn.f32 	%f2480, %f2479, %f2479;
	fma.rn.f32 	%f2481, %f2480, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2482, %f2481, %f2480, 0f3D3F841F;
	fma.rn.f32 	%f2483, %f2482, %f2480, 0f3D994929;
	fma.rn.f32 	%f2484, %f2483, %f2480, 0f3E2AAB94;
	mul.rn.f32 	%f2485, %f2480, %f2484;
	fma.rn.f32 	%f2486, %f2485, %f2479, %f2479;
	fma.rn.f32 	%f2487, %f2486, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2488, %f2487, %f2486, %p530;
	setp.num.f32 	%p531, %f2488, %f2488;
	mov.b32 	%r939, %f2488;
	mov.b32 	%r940, %f3653;
	and.b32  	%r941, %r940, -2147483648;
	or.b32  	%r942, %r941, %r939;
	mov.b32 	%f2489, %r942;
	selp.f32 	%f3653, %f2489, %f2488, %p531;
	abs.f32 	%f2490, %f3654;
	sub.rn.f32 	%f2491, %f2400, %f2490;
	mul.rn.f32 	%f2492, %f2491, 0f3F000000;
	sqrt.approx.f32 	%f2493, %f2492;
	setp.gt.f32 	%p532, %f2490, 0f3F11EB85;
	selp.f32 	%f2494, %f2493, %f2490, %p532;
	mul.rn.f32 	%f2495, %f2494, %f2494;
	fma.rn.f32 	%f2496, %f2495, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2497, %f2496, %f2495, 0f3D3F841F;
	fma.rn.f32 	%f2498, %f2497, %f2495, 0f3D994929;
	fma.rn.f32 	%f2499, %f2498, %f2495, 0f3E2AAB94;
	mul.rn.f32 	%f2500, %f2495, %f2499;
	fma.rn.f32 	%f2501, %f2500, %f2494, %f2494;
	fma.rn.f32 	%f2502, %f2501, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2503, %f2502, %f2501, %p532;
	setp.num.f32 	%p533, %f2503, %f2503;
	mov.b32 	%r943, %f2503;
	mov.b32 	%r944, %f3654;
	and.b32  	%r945, %r944, -2147483648;
	or.b32  	%r946, %r945, %r943;
	mov.b32 	%f2504, %r946;
	selp.f32 	%f3654, %f2504, %f2503, %p533;
	abs.f32 	%f2505, %f8;
	sub.rn.f32 	%f2506, %f2400, %f2505;
	mul.rn.f32 	%f2507, %f2506, 0f3F000000;
	sqrt.approx.f32 	%f2508, %f2507;
	setp.gt.f32 	%p534, %f2505, 0f3F11EB85;
	selp.f32 	%f2509, %f2508, %f2505, %p534;
	mul.rn.f32 	%f2510, %f2509, %f2509;
	fma.rn.f32 	%f2511, %f2510, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2512, %f2511, %f2510, 0f3D3F841F;
	fma.rn.f32 	%f2513, %f2512, %f2510, 0f3D994929;
	fma.rn.f32 	%f2514, %f2513, %f2510, 0f3E2AAB94;
	mul.rn.f32 	%f2515, %f2510, %f2514;
	fma.rn.f32 	%f2516, %f2515, %f2509, %f2509;
	fma.rn.f32 	%f2517, %f2516, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2518, %f2517, %f2516, %p534;
	setp.num.f32 	%p535, %f2518, %f2518;
	mov.b32 	%r947, %f2518;
	mov.b32 	%r948, %f8;
	and.b32  	%r949, %r948, -2147483648;
	or.b32  	%r950, %r949, %r947;
	mov.b32 	%f2519, %r950;
	selp.f32 	%f3655, %f2519, %f2518, %p535;
	bra.uni 	$L__BB0_502;
$L__BB0_402:                            // %FExp2
                                        //   in Loop: Header=BB0_3 Depth=1
	ex2.approx.f32 	%f3648, %f3648;
	ex2.approx.f32 	%f3649, %f3649;
	ex2.approx.f32 	%f3650, %f3650;
	ex2.approx.f32 	%f3651, %f3651;
	ex2.approx.f32 	%f3652, %f3652;
	ex2.approx.f32 	%f3653, %f3653;
	ex2.approx.f32 	%f3654, %f3654;
	ex2.approx.f32 	%f3655, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_405:                            // %FRSqrt
                                        //   in Loop: Header=BB0_3 Depth=1
	rsqrt.approx.f32 	%f3648, %f3648;
	rsqrt.approx.f32 	%f3649, %f3649;
	rsqrt.approx.f32 	%f3650, %f3650;
	rsqrt.approx.f32 	%f3651, %f3651;
	rsqrt.approx.f32 	%f3652, %f3652;
	rsqrt.approx.f32 	%f3653, %f3653;
	rsqrt.approx.f32 	%f3654, %f3654;
	rsqrt.approx.f32 	%f3655, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_320:                            // %FPow
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f1261, %f3656, 0f3F000000;
	cvt.rzi.f32.f32 	%f1262, %f1261;
	add.rn.f32 	%f1263, %f1262, %f1262;
	sub.rn.f32 	%f1264, %f3656, %f1263;
	abs.f32 	%f1265, %f1264;
	setp.eq.f32 	%p192, %f1265, 0f3F800000;
	abs.f32 	%f436, %f3648;
	abs.f32 	%f440, %f3656;
	setp.lt.f32 	%p195, %f3648, 0f00000000;
	and.pred  	%p1, %p195, %p192;
	setp.neu.f32 	%p196, %f3648, 0f00000000;
	@%p196 bra 	$L__BB0_322;
// %bb.321:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1341, %f3648, %f3648;
	mov.b32 	%r677, %f1341;
	selp.b32 	%r678, %r677, 0, %p192;
	setp.lt.f32 	%p206, %f3656, 0f00000000;
	or.b32  	%r679, %r678, 2139095040;
	selp.b32 	%r680, %r679, %r678, %p206;
	mov.b32 	%f3727, %r680;
	bra.uni 	$L__BB0_323;
$L__BB0_66:                             // %FSqrt
                                        //   in Loop: Header=BB0_3 Depth=1
	sqrt.approx.f32 	%f3648, %f3648;
	sqrt.approx.f32 	%f3649, %f3649;
	sqrt.approx.f32 	%f3650, %f3650;
	sqrt.approx.f32 	%f3651, %f3651;
	sqrt.approx.f32 	%f3652, %f3652;
	sqrt.approx.f32 	%f3653, %f3653;
	sqrt.approx.f32 	%f3654, %f3654;
	sqrt.approx.f32 	%f3655, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_279:                            // %FArcTan
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f2139, %f3648;
	setp.gt.f32 	%p488, %f2139, 0f3F800000;
	rcp.rn.f32 	%f2140, %f2139;
	selp.f32 	%f2141, %f2140, %f2139, %p488;
	mul.rn.f32 	%f2142, %f2141, %f2141;
	fma.rn.f32 	%f2143, %f2142, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2144, %f2143, %f2142, 0fC0D21907;
	mul.rn.f32 	%f2145, %f2142, %f2144;
	mul.rn.f32 	%f2146, %f2141, %f2145;
	add.rn.f32 	%f2147, %f2142, 0f41355DC0;
	fma.rn.f32 	%f2148, %f2147, %f2142, 0f41E6BD60;
	fma.rn.f32 	%f2149, %f2148, %f2142, 0f419D92C8;
	rcp.rn.f32 	%f2150, %f2149;
	fma.rn.f32 	%f2151, %f2146, %f2150, %f2141;
	mov.f32 	%f2152, 0f3FC90FDB;
	sub.rn.f32 	%f2153, %f2152, %f2151;
	selp.f32 	%f2154, %f2153, %f2151, %p488;
	setp.num.f32 	%p489, %f2139, %f2139;
	mov.b32 	%r887, %f2154;
	mov.b32 	%r888, %f3648;
	and.b32  	%r889, %r888, -2147483648;
	or.b32  	%r890, %r889, %r887;
	mov.b32 	%f2155, %r890;
	selp.f32 	%f3648, %f2155, %f2154, %p489;
	abs.f32 	%f2156, %f3649;
	setp.gt.f32 	%p490, %f2156, 0f3F800000;
	rcp.rn.f32 	%f2157, %f2156;
	selp.f32 	%f2158, %f2157, %f2156, %p490;
	mul.rn.f32 	%f2159, %f2158, %f2158;
	fma.rn.f32 	%f2160, %f2159, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2161, %f2160, %f2159, 0fC0D21907;
	mul.rn.f32 	%f2162, %f2159, %f2161;
	mul.rn.f32 	%f2163, %f2158, %f2162;
	add.rn.f32 	%f2164, %f2159, 0f41355DC0;
	fma.rn.f32 	%f2165, %f2164, %f2159, 0f41E6BD60;
	fma.rn.f32 	%f2166, %f2165, %f2159, 0f419D92C8;
	rcp.rn.f32 	%f2167, %f2166;
	fma.rn.f32 	%f2168, %f2163, %f2167, %f2158;
	sub.rn.f32 	%f2169, %f2152, %f2168;
	selp.f32 	%f2170, %f2169, %f2168, %p490;
	setp.num.f32 	%p491, %f2156, %f2156;
	mov.b32 	%r891, %f2170;
	mov.b32 	%r892, %f3649;
	and.b32  	%r893, %r892, -2147483648;
	or.b32  	%r894, %r893, %r891;
	mov.b32 	%f2171, %r894;
	selp.f32 	%f3649, %f2171, %f2170, %p491;
	abs.f32 	%f2172, %f3650;
	setp.gt.f32 	%p492, %f2172, 0f3F800000;
	rcp.rn.f32 	%f2173, %f2172;
	selp.f32 	%f2174, %f2173, %f2172, %p492;
	mul.rn.f32 	%f2175, %f2174, %f2174;
	fma.rn.f32 	%f2176, %f2175, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2177, %f2176, %f2175, 0fC0D21907;
	mul.rn.f32 	%f2178, %f2175, %f2177;
	mul.rn.f32 	%f2179, %f2174, %f2178;
	add.rn.f32 	%f2180, %f2175, 0f41355DC0;
	fma.rn.f32 	%f2181, %f2180, %f2175, 0f41E6BD60;
	fma.rn.f32 	%f2182, %f2181, %f2175, 0f419D92C8;
	rcp.rn.f32 	%f2183, %f2182;
	fma.rn.f32 	%f2184, %f2179, %f2183, %f2174;
	sub.rn.f32 	%f2185, %f2152, %f2184;
	selp.f32 	%f2186, %f2185, %f2184, %p492;
	setp.num.f32 	%p493, %f2172, %f2172;
	mov.b32 	%r895, %f2186;
	mov.b32 	%r896, %f3650;
	and.b32  	%r897, %r896, -2147483648;
	or.b32  	%r898, %r897, %r895;
	mov.b32 	%f2187, %r898;
	selp.f32 	%f3650, %f2187, %f2186, %p493;
	abs.f32 	%f2188, %f3651;
	setp.gt.f32 	%p494, %f2188, 0f3F800000;
	rcp.rn.f32 	%f2189, %f2188;
	selp.f32 	%f2190, %f2189, %f2188, %p494;
	mul.rn.f32 	%f2191, %f2190, %f2190;
	fma.rn.f32 	%f2192, %f2191, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2193, %f2192, %f2191, 0fC0D21907;
	mul.rn.f32 	%f2194, %f2191, %f2193;
	mul.rn.f32 	%f2195, %f2190, %f2194;
	add.rn.f32 	%f2196, %f2191, 0f41355DC0;
	fma.rn.f32 	%f2197, %f2196, %f2191, 0f41E6BD60;
	fma.rn.f32 	%f2198, %f2197, %f2191, 0f419D92C8;
	rcp.rn.f32 	%f2199, %f2198;
	fma.rn.f32 	%f2200, %f2195, %f2199, %f2190;
	sub.rn.f32 	%f2201, %f2152, %f2200;
	selp.f32 	%f2202, %f2201, %f2200, %p494;
	setp.num.f32 	%p495, %f2188, %f2188;
	mov.b32 	%r899, %f2202;
	mov.b32 	%r900, %f3651;
	and.b32  	%r901, %r900, -2147483648;
	or.b32  	%r902, %r901, %r899;
	mov.b32 	%f2203, %r902;
	selp.f32 	%f3651, %f2203, %f2202, %p495;
	abs.f32 	%f2204, %f3652;
	setp.gt.f32 	%p496, %f2204, 0f3F800000;
	rcp.rn.f32 	%f2205, %f2204;
	selp.f32 	%f2206, %f2205, %f2204, %p496;
	mul.rn.f32 	%f2207, %f2206, %f2206;
	fma.rn.f32 	%f2208, %f2207, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2209, %f2208, %f2207, 0fC0D21907;
	mul.rn.f32 	%f2210, %f2207, %f2209;
	mul.rn.f32 	%f2211, %f2206, %f2210;
	add.rn.f32 	%f2212, %f2207, 0f41355DC0;
	fma.rn.f32 	%f2213, %f2212, %f2207, 0f41E6BD60;
	fma.rn.f32 	%f2214, %f2213, %f2207, 0f419D92C8;
	rcp.rn.f32 	%f2215, %f2214;
	fma.rn.f32 	%f2216, %f2211, %f2215, %f2206;
	sub.rn.f32 	%f2217, %f2152, %f2216;
	selp.f32 	%f2218, %f2217, %f2216, %p496;
	setp.num.f32 	%p497, %f2204, %f2204;
	mov.b32 	%r903, %f2218;
	mov.b32 	%r904, %f3652;
	and.b32  	%r905, %r904, -2147483648;
	or.b32  	%r906, %r905, %r903;
	mov.b32 	%f2219, %r906;
	selp.f32 	%f3652, %f2219, %f2218, %p497;
	abs.f32 	%f2220, %f3653;
	setp.gt.f32 	%p498, %f2220, 0f3F800000;
	rcp.rn.f32 	%f2221, %f2220;
	selp.f32 	%f2222, %f2221, %f2220, %p498;
	mul.rn.f32 	%f2223, %f2222, %f2222;
	fma.rn.f32 	%f2224, %f2223, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2225, %f2224, %f2223, 0fC0D21907;
	mul.rn.f32 	%f2226, %f2223, %f2225;
	mul.rn.f32 	%f2227, %f2222, %f2226;
	add.rn.f32 	%f2228, %f2223, 0f41355DC0;
	fma.rn.f32 	%f2229, %f2228, %f2223, 0f41E6BD60;
	fma.rn.f32 	%f2230, %f2229, %f2223, 0f419D92C8;
	rcp.rn.f32 	%f2231, %f2230;
	fma.rn.f32 	%f2232, %f2227, %f2231, %f2222;
	sub.rn.f32 	%f2233, %f2152, %f2232;
	selp.f32 	%f2234, %f2233, %f2232, %p498;
	setp.num.f32 	%p499, %f2220, %f2220;
	mov.b32 	%r907, %f2234;
	mov.b32 	%r908, %f3653;
	and.b32  	%r909, %r908, -2147483648;
	or.b32  	%r910, %r909, %r907;
	mov.b32 	%f2235, %r910;
	selp.f32 	%f3653, %f2235, %f2234, %p499;
	abs.f32 	%f2236, %f3654;
	setp.gt.f32 	%p500, %f2236, 0f3F800000;
	rcp.rn.f32 	%f2237, %f2236;
	selp.f32 	%f2238, %f2237, %f2236, %p500;
	mul.rn.f32 	%f2239, %f2238, %f2238;
	fma.rn.f32 	%f2240, %f2239, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2241, %f2240, %f2239, 0fC0D21907;
	mul.rn.f32 	%f2242, %f2239, %f2241;
	mul.rn.f32 	%f2243, %f2238, %f2242;
	add.rn.f32 	%f2244, %f2239, 0f41355DC0;
	fma.rn.f32 	%f2245, %f2244, %f2239, 0f41E6BD60;
	fma.rn.f32 	%f2246, %f2245, %f2239, 0f419D92C8;
	rcp.rn.f32 	%f2247, %f2246;
	fma.rn.f32 	%f2248, %f2243, %f2247, %f2238;
	sub.rn.f32 	%f2249, %f2152, %f2248;
	selp.f32 	%f2250, %f2249, %f2248, %p500;
	setp.num.f32 	%p501, %f2236, %f2236;
	mov.b32 	%r911, %f2250;
	mov.b32 	%r912, %f3654;
	and.b32  	%r913, %r912, -2147483648;
	or.b32  	%r914, %r913, %r911;
	mov.b32 	%f2251, %r914;
	selp.f32 	%f3654, %f2251, %f2250, %p501;
	abs.f32 	%f2252, %f8;
	setp.gt.f32 	%p502, %f2252, 0f3F800000;
	rcp.rn.f32 	%f2253, %f2252;
	selp.f32 	%f2254, %f2253, %f2252, %p502;
	mul.rn.f32 	%f2255, %f2254, %f2254;
	fma.rn.f32 	%f2256, %f2255, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2257, %f2256, %f2255, 0fC0D21907;
	mul.rn.f32 	%f2258, %f2255, %f2257;
	mul.rn.f32 	%f2259, %f2254, %f2258;
	add.rn.f32 	%f2260, %f2255, 0f41355DC0;
	fma.rn.f32 	%f2261, %f2260, %f2255, 0f41E6BD60;
	fma.rn.f32 	%f2262, %f2261, %f2255, 0f419D92C8;
	rcp.rn.f32 	%f2263, %f2262;
	fma.rn.f32 	%f2264, %f2259, %f2263, %f2254;
	sub.rn.f32 	%f2265, %f2152, %f2264;
	selp.f32 	%f2266, %f2265, %f2264, %p502;
	setp.num.f32 	%p503, %f2252, %f2252;
	mov.b32 	%r915, %f2266;
	mov.b32 	%r916, %f8;
	and.b32  	%r917, %r916, -2147483648;
	or.b32  	%r918, %r917, %r915;
	mov.b32 	%f2267, %r918;
	selp.f32 	%f3655, %f2267, %f2266, %p503;
	bra.uni 	$L__BB0_502;
$L__BB0_404:                            // %FLog2
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.lt.f32 	%p144, %f3648, 0f00800000;
	mul.rn.f32 	%f849, %f3648, 0f4B000000;
	selp.f32 	%f850, %f849, %f3648, %p144;
	selp.f32 	%f851, 0fC1B80000, 0f00000000, %p144;
	mov.b32 	%r591, %f850;
	add.s32 	%r592, %r591, -1060439283;
	and.b32  	%r593, %r592, -8388608;
	sub.s32 	%r594, %r591, %r593;
	mov.b32 	%f852, %r594;
	cvt.rn.f32.s32 	%f853, %r593;
	fma.rn.f32 	%f854, %f853, 0f34000000, %f851;
	add.rn.f32 	%f855, %f852, 0fBF800000;
	fma.rn.f32 	%f856, %f855, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f857, %f856, %f855, 0f3E2FCF2A;
	fma.rn.f32 	%f858, %f857, %f855, 0fBE374E43;
	fma.rn.f32 	%f859, %f858, %f855, 0f3E520BF4;
	fma.rn.f32 	%f860, %f859, %f855, 0fBE763C8B;
	fma.rn.f32 	%f861, %f860, %f855, 0f3E93BF99;
	fma.rn.f32 	%f862, %f861, %f855, 0fBEB8AA49;
	fma.rn.f32 	%f863, %f862, %f855, 0f3EF6384A;
	fma.rn.f32 	%f864, %f863, %f855, 0fBF38AA3B;
	mul.rn.f32 	%f865, %f855, %f864;
	mul.rn.f32 	%f866, %f855, %f865;
	fma.rn.f32 	%f867, %f855, 0f3FB8AA3B, %f866;
	add.rn.f32 	%f868, %f854, %f867;
	setp.gt.u32 	%p145, %r591, 2139095039;
	fma.rn.f32 	%f869, %f850, 0f7F800000, 0f7F800000;
	selp.f32 	%f870, %f869, %f868, %p145;
	setp.eq.f32 	%p146, %f850, 0f00000000;
	selp.f32 	%f3648, 0fFF800000, %f870, %p146;
	setp.lt.f32 	%p147, %f3649, 0f00800000;
	mul.rn.f32 	%f871, %f3649, 0f4B000000;
	selp.f32 	%f872, %f871, %f3649, %p147;
	selp.f32 	%f873, 0fC1B80000, 0f00000000, %p147;
	mov.b32 	%r595, %f872;
	add.s32 	%r596, %r595, -1060439283;
	and.b32  	%r597, %r596, -8388608;
	sub.s32 	%r598, %r595, %r597;
	mov.b32 	%f874, %r598;
	cvt.rn.f32.s32 	%f875, %r597;
	fma.rn.f32 	%f876, %f875, 0f34000000, %f873;
	add.rn.f32 	%f877, %f874, 0fBF800000;
	fma.rn.f32 	%f878, %f877, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f879, %f878, %f877, 0f3E2FCF2A;
	fma.rn.f32 	%f880, %f879, %f877, 0fBE374E43;
	fma.rn.f32 	%f881, %f880, %f877, 0f3E520BF4;
	fma.rn.f32 	%f882, %f881, %f877, 0fBE763C8B;
	fma.rn.f32 	%f883, %f882, %f877, 0f3E93BF99;
	fma.rn.f32 	%f884, %f883, %f877, 0fBEB8AA49;
	fma.rn.f32 	%f885, %f884, %f877, 0f3EF6384A;
	fma.rn.f32 	%f886, %f885, %f877, 0fBF38AA3B;
	mul.rn.f32 	%f887, %f877, %f886;
	mul.rn.f32 	%f888, %f877, %f887;
	fma.rn.f32 	%f889, %f877, 0f3FB8AA3B, %f888;
	add.rn.f32 	%f890, %f876, %f889;
	setp.gt.u32 	%p148, %r595, 2139095039;
	fma.rn.f32 	%f891, %f872, 0f7F800000, 0f7F800000;
	selp.f32 	%f892, %f891, %f890, %p148;
	setp.eq.f32 	%p149, %f872, 0f00000000;
	selp.f32 	%f3649, 0fFF800000, %f892, %p149;
	setp.lt.f32 	%p150, %f3650, 0f00800000;
	mul.rn.f32 	%f893, %f3650, 0f4B000000;
	selp.f32 	%f894, %f893, %f3650, %p150;
	selp.f32 	%f895, 0fC1B80000, 0f00000000, %p150;
	mov.b32 	%r599, %f894;
	add.s32 	%r600, %r599, -1060439283;
	and.b32  	%r601, %r600, -8388608;
	sub.s32 	%r602, %r599, %r601;
	mov.b32 	%f896, %r602;
	cvt.rn.f32.s32 	%f897, %r601;
	fma.rn.f32 	%f898, %f897, 0f34000000, %f895;
	add.rn.f32 	%f899, %f896, 0fBF800000;
	fma.rn.f32 	%f900, %f899, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f901, %f900, %f899, 0f3E2FCF2A;
	fma.rn.f32 	%f902, %f901, %f899, 0fBE374E43;
	fma.rn.f32 	%f903, %f902, %f899, 0f3E520BF4;
	fma.rn.f32 	%f904, %f903, %f899, 0fBE763C8B;
	fma.rn.f32 	%f905, %f904, %f899, 0f3E93BF99;
	fma.rn.f32 	%f906, %f905, %f899, 0fBEB8AA49;
	fma.rn.f32 	%f907, %f906, %f899, 0f3EF6384A;
	fma.rn.f32 	%f908, %f907, %f899, 0fBF38AA3B;
	mul.rn.f32 	%f909, %f899, %f908;
	mul.rn.f32 	%f910, %f899, %f909;
	fma.rn.f32 	%f911, %f899, 0f3FB8AA3B, %f910;
	add.rn.f32 	%f912, %f898, %f911;
	setp.gt.u32 	%p151, %r599, 2139095039;
	fma.rn.f32 	%f913, %f894, 0f7F800000, 0f7F800000;
	selp.f32 	%f914, %f913, %f912, %p151;
	setp.eq.f32 	%p152, %f894, 0f00000000;
	selp.f32 	%f3650, 0fFF800000, %f914, %p152;
	setp.lt.f32 	%p153, %f3651, 0f00800000;
	mul.rn.f32 	%f915, %f3651, 0f4B000000;
	selp.f32 	%f916, %f915, %f3651, %p153;
	selp.f32 	%f917, 0fC1B80000, 0f00000000, %p153;
	mov.b32 	%r603, %f916;
	add.s32 	%r604, %r603, -1060439283;
	and.b32  	%r605, %r604, -8388608;
	sub.s32 	%r606, %r603, %r605;
	mov.b32 	%f918, %r606;
	cvt.rn.f32.s32 	%f919, %r605;
	fma.rn.f32 	%f920, %f919, 0f34000000, %f917;
	add.rn.f32 	%f921, %f918, 0fBF800000;
	fma.rn.f32 	%f922, %f921, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f923, %f922, %f921, 0f3E2FCF2A;
	fma.rn.f32 	%f924, %f923, %f921, 0fBE374E43;
	fma.rn.f32 	%f925, %f924, %f921, 0f3E520BF4;
	fma.rn.f32 	%f926, %f925, %f921, 0fBE763C8B;
	fma.rn.f32 	%f927, %f926, %f921, 0f3E93BF99;
	fma.rn.f32 	%f928, %f927, %f921, 0fBEB8AA49;
	fma.rn.f32 	%f929, %f928, %f921, 0f3EF6384A;
	fma.rn.f32 	%f930, %f929, %f921, 0fBF38AA3B;
	mul.rn.f32 	%f931, %f921, %f930;
	mul.rn.f32 	%f932, %f921, %f931;
	fma.rn.f32 	%f933, %f921, 0f3FB8AA3B, %f932;
	add.rn.f32 	%f934, %f920, %f933;
	setp.gt.u32 	%p154, %r603, 2139095039;
	fma.rn.f32 	%f935, %f916, 0f7F800000, 0f7F800000;
	selp.f32 	%f936, %f935, %f934, %p154;
	setp.eq.f32 	%p155, %f916, 0f00000000;
	selp.f32 	%f3651, 0fFF800000, %f936, %p155;
	setp.lt.f32 	%p156, %f3652, 0f00800000;
	mul.rn.f32 	%f937, %f3652, 0f4B000000;
	selp.f32 	%f938, %f937, %f3652, %p156;
	selp.f32 	%f939, 0fC1B80000, 0f00000000, %p156;
	mov.b32 	%r607, %f938;
	add.s32 	%r608, %r607, -1060439283;
	and.b32  	%r609, %r608, -8388608;
	sub.s32 	%r610, %r607, %r609;
	mov.b32 	%f940, %r610;
	cvt.rn.f32.s32 	%f941, %r609;
	fma.rn.f32 	%f942, %f941, 0f34000000, %f939;
	add.rn.f32 	%f943, %f940, 0fBF800000;
	fma.rn.f32 	%f944, %f943, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f945, %f944, %f943, 0f3E2FCF2A;
	fma.rn.f32 	%f946, %f945, %f943, 0fBE374E43;
	fma.rn.f32 	%f947, %f946, %f943, 0f3E520BF4;
	fma.rn.f32 	%f948, %f947, %f943, 0fBE763C8B;
	fma.rn.f32 	%f949, %f948, %f943, 0f3E93BF99;
	fma.rn.f32 	%f950, %f949, %f943, 0fBEB8AA49;
	fma.rn.f32 	%f951, %f950, %f943, 0f3EF6384A;
	fma.rn.f32 	%f952, %f951, %f943, 0fBF38AA3B;
	mul.rn.f32 	%f953, %f943, %f952;
	mul.rn.f32 	%f954, %f943, %f953;
	fma.rn.f32 	%f955, %f943, 0f3FB8AA3B, %f954;
	add.rn.f32 	%f956, %f942, %f955;
	setp.gt.u32 	%p157, %r607, 2139095039;
	fma.rn.f32 	%f957, %f938, 0f7F800000, 0f7F800000;
	selp.f32 	%f958, %f957, %f956, %p157;
	setp.eq.f32 	%p158, %f938, 0f00000000;
	selp.f32 	%f3652, 0fFF800000, %f958, %p158;
	setp.lt.f32 	%p159, %f3653, 0f00800000;
	mul.rn.f32 	%f959, %f3653, 0f4B000000;
	selp.f32 	%f960, %f959, %f3653, %p159;
	selp.f32 	%f961, 0fC1B80000, 0f00000000, %p159;
	mov.b32 	%r611, %f960;
	add.s32 	%r612, %r611, -1060439283;
	and.b32  	%r613, %r612, -8388608;
	sub.s32 	%r614, %r611, %r613;
	mov.b32 	%f962, %r614;
	cvt.rn.f32.s32 	%f963, %r613;
	fma.rn.f32 	%f964, %f963, 0f34000000, %f961;
	add.rn.f32 	%f965, %f962, 0fBF800000;
	fma.rn.f32 	%f966, %f965, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f967, %f966, %f965, 0f3E2FCF2A;
	fma.rn.f32 	%f968, %f967, %f965, 0fBE374E43;
	fma.rn.f32 	%f969, %f968, %f965, 0f3E520BF4;
	fma.rn.f32 	%f970, %f969, %f965, 0fBE763C8B;
	fma.rn.f32 	%f971, %f970, %f965, 0f3E93BF99;
	fma.rn.f32 	%f972, %f971, %f965, 0fBEB8AA49;
	fma.rn.f32 	%f973, %f972, %f965, 0f3EF6384A;
	fma.rn.f32 	%f974, %f973, %f965, 0fBF38AA3B;
	mul.rn.f32 	%f975, %f965, %f974;
	mul.rn.f32 	%f976, %f965, %f975;
	fma.rn.f32 	%f977, %f965, 0f3FB8AA3B, %f976;
	add.rn.f32 	%f978, %f964, %f977;
	setp.gt.u32 	%p160, %r611, 2139095039;
	fma.rn.f32 	%f979, %f960, 0f7F800000, 0f7F800000;
	selp.f32 	%f980, %f979, %f978, %p160;
	setp.eq.f32 	%p161, %f960, 0f00000000;
	selp.f32 	%f3653, 0fFF800000, %f980, %p161;
	setp.lt.f32 	%p162, %f3654, 0f00800000;
	mul.rn.f32 	%f981, %f3654, 0f4B000000;
	selp.f32 	%f982, %f981, %f3654, %p162;
	selp.f32 	%f983, 0fC1B80000, 0f00000000, %p162;
	mov.b32 	%r615, %f982;
	add.s32 	%r616, %r615, -1060439283;
	and.b32  	%r617, %r616, -8388608;
	sub.s32 	%r618, %r615, %r617;
	mov.b32 	%f984, %r618;
	cvt.rn.f32.s32 	%f985, %r617;
	fma.rn.f32 	%f986, %f985, 0f34000000, %f983;
	add.rn.f32 	%f987, %f984, 0fBF800000;
	fma.rn.f32 	%f988, %f987, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f989, %f988, %f987, 0f3E2FCF2A;
	fma.rn.f32 	%f990, %f989, %f987, 0fBE374E43;
	fma.rn.f32 	%f991, %f990, %f987, 0f3E520BF4;
	fma.rn.f32 	%f992, %f991, %f987, 0fBE763C8B;
	fma.rn.f32 	%f993, %f992, %f987, 0f3E93BF99;
	fma.rn.f32 	%f994, %f993, %f987, 0fBEB8AA49;
	fma.rn.f32 	%f995, %f994, %f987, 0f3EF6384A;
	fma.rn.f32 	%f996, %f995, %f987, 0fBF38AA3B;
	mul.rn.f32 	%f997, %f987, %f996;
	mul.rn.f32 	%f998, %f987, %f997;
	fma.rn.f32 	%f999, %f987, 0f3FB8AA3B, %f998;
	add.rn.f32 	%f1000, %f986, %f999;
	setp.gt.u32 	%p163, %r615, 2139095039;
	fma.rn.f32 	%f1001, %f982, 0f7F800000, 0f7F800000;
	selp.f32 	%f1002, %f1001, %f1000, %p163;
	setp.eq.f32 	%p164, %f982, 0f00000000;
	selp.f32 	%f3654, 0fFF800000, %f1002, %p164;
	setp.lt.f32 	%p165, %f8, 0f00800000;
	mul.rn.f32 	%f1003, %f8, 0f4B000000;
	selp.f32 	%f1004, %f1003, %f8, %p165;
	selp.f32 	%f1005, 0fC1B80000, 0f00000000, %p165;
	mov.b32 	%r619, %f1004;
	add.s32 	%r620, %r619, -1060439283;
	and.b32  	%r621, %r620, -8388608;
	sub.s32 	%r622, %r619, %r621;
	mov.b32 	%f1006, %r622;
	cvt.rn.f32.s32 	%f1007, %r621;
	fma.rn.f32 	%f1008, %f1007, 0f34000000, %f1005;
	add.rn.f32 	%f1009, %f1006, 0fBF800000;
	fma.rn.f32 	%f1010, %f1009, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f1011, %f1010, %f1009, 0f3E2FCF2A;
	fma.rn.f32 	%f1012, %f1011, %f1009, 0fBE374E43;
	fma.rn.f32 	%f1013, %f1012, %f1009, 0f3E520BF4;
	fma.rn.f32 	%f1014, %f1013, %f1009, 0fBE763C8B;
	fma.rn.f32 	%f1015, %f1014, %f1009, 0f3E93BF99;
	fma.rn.f32 	%f1016, %f1015, %f1009, 0fBEB8AA49;
	fma.rn.f32 	%f1017, %f1016, %f1009, 0f3EF6384A;
	fma.rn.f32 	%f1018, %f1017, %f1009, 0fBF38AA3B;
	mul.rn.f32 	%f1019, %f1009, %f1018;
	mul.rn.f32 	%f1020, %f1009, %f1019;
	fma.rn.f32 	%f1021, %f1009, 0f3FB8AA3B, %f1020;
	add.rn.f32 	%f1022, %f1008, %f1021;
	setp.gt.u32 	%p166, %r619, 2139095039;
	fma.rn.f32 	%f1023, %f1004, 0f7F800000, 0f7F800000;
	selp.f32 	%f1024, %f1023, %f1022, %p166;
	setp.eq.f32 	%p167, %f1004, 0f00000000;
	selp.f32 	%f3655, 0fFF800000, %f1024, %p167;
	bra.uni 	$L__BB0_502;
$L__BB0_406:                            // %FErf
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f681, %f3648;
	setp.ltu.f32 	%p128, %f681, 0f3F8060FE;
	setp.ge.f32 	%p129, %f681, 0f3F8060FE;
	mul.rn.f32 	%f682, %f3648, %f3648;
	selp.f32 	%f683, %f681, %f682, %p129;
	selp.f32 	%f684, 0f3789CA3C, 0f38B1E96A, %p129;
	selp.f32 	%f685, 0fB9F560B9, 0fBA574D20, %p129;
	fma.rn.f32 	%f686, %f684, %f683, %f685;
	selp.f32 	%f687, 0f3BAC840B, 0f3BAAD5EA, %p129;
	fma.rn.f32 	%f688, %f686, %f683, %f687;
	selp.f32 	%f689, 0fBD0C8162, 0fBCDC1BE7, %p129;
	fma.rn.f32 	%f690, %f688, %f683, %f689;
	selp.f32 	%f691, 0f3E1CF906, 0f3DE718AF, %p129;
	fma.rn.f32 	%f692, %f690, %f683, %f691;
	selp.f32 	%f693, 0f3F6A937E, 0fBEC093AC, %p129;
	fma.rn.f32 	%f694, %f692, %f683, %f693;
	selp.f32 	%f695, 0f3F20D842, 0f3E0375D3, %p129;
	fma.rn.f32 	%f696, %f694, %f683, %f695;
	neg.f32 	%f697, %f683;
	selp.f32 	%f698, %f697, %f3648, %p129;
	fma.rn.f32 	%f3742, %f696, %f698, %f698;
	@%p128 bra 	$L__BB0_408;
// %bb.407:                             //   in Loop: Header=BB0_3 Depth=1
	ex2.approx.ftz.f32 	%f699, %f3742;
	mov.f32 	%f700, 0f3F800000;
	sub.rn.f32 	%f701, %f700, %f699;
	mov.b32 	%r559, %f701;
	mov.b32 	%r560, %f3648;
	and.b32  	%r561, %r560, -2147483648;
	or.b32  	%r562, %r561, %r559;
	mov.b32 	%f3742, %r562;
$L__BB0_408:                            // %__nv_erff.exit
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f702, %f3649;
	setp.ltu.f32 	%p130, %f702, 0f3F8060FE;
	setp.ge.f32 	%p131, %f702, 0f3F8060FE;
	mul.rn.f32 	%f703, %f3649, %f3649;
	selp.f32 	%f704, %f702, %f703, %p131;
	selp.f32 	%f705, 0f3789CA3C, 0f38B1E96A, %p131;
	selp.f32 	%f706, 0fB9F560B9, 0fBA574D20, %p131;
	fma.rn.f32 	%f707, %f705, %f704, %f706;
	selp.f32 	%f708, 0f3BAC840B, 0f3BAAD5EA, %p131;
	fma.rn.f32 	%f709, %f707, %f704, %f708;
	selp.f32 	%f710, 0fBD0C8162, 0fBCDC1BE7, %p131;
	fma.rn.f32 	%f711, %f709, %f704, %f710;
	selp.f32 	%f712, 0f3E1CF906, 0f3DE718AF, %p131;
	fma.rn.f32 	%f713, %f711, %f704, %f712;
	selp.f32 	%f714, 0f3F6A937E, 0fBEC093AC, %p131;
	fma.rn.f32 	%f715, %f713, %f704, %f714;
	selp.f32 	%f716, 0f3F20D842, 0f3E0375D3, %p131;
	fma.rn.f32 	%f717, %f715, %f704, %f716;
	neg.f32 	%f718, %f704;
	selp.f32 	%f719, %f718, %f3649, %p131;
	fma.rn.f32 	%f3743, %f717, %f719, %f719;
	@%p130 bra 	$L__BB0_410;
// %bb.409:                             //   in Loop: Header=BB0_3 Depth=1
	ex2.approx.ftz.f32 	%f720, %f3743;
	mov.f32 	%f721, 0f3F800000;
	sub.rn.f32 	%f722, %f721, %f720;
	mov.b32 	%r563, %f722;
	mov.b32 	%r564, %f3649;
	and.b32  	%r565, %r564, -2147483648;
	or.b32  	%r566, %r565, %r563;
	mov.b32 	%f3743, %r566;
$L__BB0_410:                            // %__nv_erff.exit703
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f723, %f3650;
	setp.ltu.f32 	%p132, %f723, 0f3F8060FE;
	setp.ge.f32 	%p133, %f723, 0f3F8060FE;
	mul.rn.f32 	%f724, %f3650, %f3650;
	selp.f32 	%f725, %f723, %f724, %p133;
	selp.f32 	%f726, 0f3789CA3C, 0f38B1E96A, %p133;
	selp.f32 	%f727, 0fB9F560B9, 0fBA574D20, %p133;
	fma.rn.f32 	%f728, %f726, %f725, %f727;
	selp.f32 	%f729, 0f3BAC840B, 0f3BAAD5EA, %p133;
	fma.rn.f32 	%f730, %f728, %f725, %f729;
	selp.f32 	%f731, 0fBD0C8162, 0fBCDC1BE7, %p133;
	fma.rn.f32 	%f732, %f730, %f725, %f731;
	selp.f32 	%f733, 0f3E1CF906, 0f3DE718AF, %p133;
	fma.rn.f32 	%f734, %f732, %f725, %f733;
	selp.f32 	%f735, 0f3F6A937E, 0fBEC093AC, %p133;
	fma.rn.f32 	%f736, %f734, %f725, %f735;
	selp.f32 	%f737, 0f3F20D842, 0f3E0375D3, %p133;
	fma.rn.f32 	%f738, %f736, %f725, %f737;
	neg.f32 	%f739, %f725;
	selp.f32 	%f740, %f739, %f3650, %p133;
	fma.rn.f32 	%f3744, %f738, %f740, %f740;
	@%p132 bra 	$L__BB0_412;
// %bb.411:                             //   in Loop: Header=BB0_3 Depth=1
	ex2.approx.ftz.f32 	%f741, %f3744;
	mov.f32 	%f742, 0f3F800000;
	sub.rn.f32 	%f743, %f742, %f741;
	mov.b32 	%r567, %f743;
	mov.b32 	%r568, %f3650;
	and.b32  	%r569, %r568, -2147483648;
	or.b32  	%r570, %r569, %r567;
	mov.b32 	%f3744, %r570;
$L__BB0_412:                            // %__nv_erff.exit705
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f744, %f3651;
	setp.ltu.f32 	%p134, %f744, 0f3F8060FE;
	setp.ge.f32 	%p135, %f744, 0f3F8060FE;
	mul.rn.f32 	%f745, %f3651, %f3651;
	selp.f32 	%f746, %f744, %f745, %p135;
	selp.f32 	%f747, 0f3789CA3C, 0f38B1E96A, %p135;
	selp.f32 	%f748, 0fB9F560B9, 0fBA574D20, %p135;
	fma.rn.f32 	%f749, %f747, %f746, %f748;
	selp.f32 	%f750, 0f3BAC840B, 0f3BAAD5EA, %p135;
	fma.rn.f32 	%f751, %f749, %f746, %f750;
	selp.f32 	%f752, 0fBD0C8162, 0fBCDC1BE7, %p135;
	fma.rn.f32 	%f753, %f751, %f746, %f752;
	selp.f32 	%f754, 0f3E1CF906, 0f3DE718AF, %p135;
	fma.rn.f32 	%f755, %f753, %f746, %f754;
	selp.f32 	%f756, 0f3F6A937E, 0fBEC093AC, %p135;
	fma.rn.f32 	%f757, %f755, %f746, %f756;
	selp.f32 	%f758, 0f3F20D842, 0f3E0375D3, %p135;
	fma.rn.f32 	%f759, %f757, %f746, %f758;
	neg.f32 	%f760, %f746;
	selp.f32 	%f761, %f760, %f3651, %p135;
	fma.rn.f32 	%f3745, %f759, %f761, %f761;
	@%p134 bra 	$L__BB0_414;
// %bb.413:                             //   in Loop: Header=BB0_3 Depth=1
	ex2.approx.ftz.f32 	%f762, %f3745;
	mov.f32 	%f763, 0f3F800000;
	sub.rn.f32 	%f764, %f763, %f762;
	mov.b32 	%r571, %f764;
	mov.b32 	%r572, %f3651;
	and.b32  	%r573, %r572, -2147483648;
	or.b32  	%r574, %r573, %r571;
	mov.b32 	%f3745, %r574;
$L__BB0_414:                            // %__nv_erff.exit707
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f765, %f3652;
	setp.ltu.f32 	%p136, %f765, 0f3F8060FE;
	setp.ge.f32 	%p137, %f765, 0f3F8060FE;
	mul.rn.f32 	%f766, %f3652, %f3652;
	selp.f32 	%f767, %f765, %f766, %p137;
	selp.f32 	%f768, 0f3789CA3C, 0f38B1E96A, %p137;
	selp.f32 	%f769, 0fB9F560B9, 0fBA574D20, %p137;
	fma.rn.f32 	%f770, %f768, %f767, %f769;
	selp.f32 	%f771, 0f3BAC840B, 0f3BAAD5EA, %p137;
	fma.rn.f32 	%f772, %f770, %f767, %f771;
	selp.f32 	%f773, 0fBD0C8162, 0fBCDC1BE7, %p137;
	fma.rn.f32 	%f774, %f772, %f767, %f773;
	selp.f32 	%f775, 0f3E1CF906, 0f3DE718AF, %p137;
	fma.rn.f32 	%f776, %f774, %f767, %f775;
	selp.f32 	%f777, 0f3F6A937E, 0fBEC093AC, %p137;
	fma.rn.f32 	%f778, %f776, %f767, %f777;
	selp.f32 	%f779, 0f3F20D842, 0f3E0375D3, %p137;
	fma.rn.f32 	%f780, %f778, %f767, %f779;
	neg.f32 	%f781, %f767;
	selp.f32 	%f782, %f781, %f3652, %p137;
	fma.rn.f32 	%f3746, %f780, %f782, %f782;
	@%p136 bra 	$L__BB0_416;
// %bb.415:                             //   in Loop: Header=BB0_3 Depth=1
	ex2.approx.ftz.f32 	%f783, %f3746;
	mov.f32 	%f784, 0f3F800000;
	sub.rn.f32 	%f785, %f784, %f783;
	mov.b32 	%r575, %f785;
	mov.b32 	%r576, %f3652;
	and.b32  	%r577, %r576, -2147483648;
	or.b32  	%r578, %r577, %r575;
	mov.b32 	%f3746, %r578;
$L__BB0_416:                            // %__nv_erff.exit709
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f786, %f3653;
	setp.ltu.f32 	%p138, %f786, 0f3F8060FE;
	setp.ge.f32 	%p139, %f786, 0f3F8060FE;
	mul.rn.f32 	%f787, %f3653, %f3653;
	selp.f32 	%f788, %f786, %f787, %p139;
	selp.f32 	%f789, 0f3789CA3C, 0f38B1E96A, %p139;
	selp.f32 	%f790, 0fB9F560B9, 0fBA574D20, %p139;
	fma.rn.f32 	%f791, %f789, %f788, %f790;
	selp.f32 	%f792, 0f3BAC840B, 0f3BAAD5EA, %p139;
	fma.rn.f32 	%f793, %f791, %f788, %f792;
	selp.f32 	%f794, 0fBD0C8162, 0fBCDC1BE7, %p139;
	fma.rn.f32 	%f795, %f793, %f788, %f794;
	selp.f32 	%f796, 0f3E1CF906, 0f3DE718AF, %p139;
	fma.rn.f32 	%f797, %f795, %f788, %f796;
	selp.f32 	%f798, 0f3F6A937E, 0fBEC093AC, %p139;
	fma.rn.f32 	%f799, %f797, %f788, %f798;
	selp.f32 	%f800, 0f3F20D842, 0f3E0375D3, %p139;
	fma.rn.f32 	%f801, %f799, %f788, %f800;
	neg.f32 	%f802, %f788;
	selp.f32 	%f803, %f802, %f3653, %p139;
	fma.rn.f32 	%f3747, %f801, %f803, %f803;
	@%p138 bra 	$L__BB0_418;
// %bb.417:                             //   in Loop: Header=BB0_3 Depth=1
	ex2.approx.ftz.f32 	%f804, %f3747;
	mov.f32 	%f805, 0f3F800000;
	sub.rn.f32 	%f806, %f805, %f804;
	mov.b32 	%r579, %f806;
	mov.b32 	%r580, %f3653;
	and.b32  	%r581, %r580, -2147483648;
	or.b32  	%r582, %r581, %r579;
	mov.b32 	%f3747, %r582;
$L__BB0_418:                            // %__nv_erff.exit711
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f807, %f3654;
	setp.ltu.f32 	%p140, %f807, 0f3F8060FE;
	setp.ge.f32 	%p141, %f807, 0f3F8060FE;
	mul.rn.f32 	%f808, %f3654, %f3654;
	selp.f32 	%f809, %f807, %f808, %p141;
	selp.f32 	%f810, 0f3789CA3C, 0f38B1E96A, %p141;
	selp.f32 	%f811, 0fB9F560B9, 0fBA574D20, %p141;
	fma.rn.f32 	%f812, %f810, %f809, %f811;
	selp.f32 	%f813, 0f3BAC840B, 0f3BAAD5EA, %p141;
	fma.rn.f32 	%f814, %f812, %f809, %f813;
	selp.f32 	%f815, 0fBD0C8162, 0fBCDC1BE7, %p141;
	fma.rn.f32 	%f816, %f814, %f809, %f815;
	selp.f32 	%f817, 0f3E1CF906, 0f3DE718AF, %p141;
	fma.rn.f32 	%f818, %f816, %f809, %f817;
	selp.f32 	%f819, 0f3F6A937E, 0fBEC093AC, %p141;
	fma.rn.f32 	%f820, %f818, %f809, %f819;
	selp.f32 	%f821, 0f3F20D842, 0f3E0375D3, %p141;
	fma.rn.f32 	%f822, %f820, %f809, %f821;
	neg.f32 	%f823, %f809;
	selp.f32 	%f824, %f823, %f3654, %p141;
	fma.rn.f32 	%f3748, %f822, %f824, %f824;
	@%p140 bra 	$L__BB0_420;
// %bb.419:                             //   in Loop: Header=BB0_3 Depth=1
	ex2.approx.ftz.f32 	%f825, %f3748;
	mov.f32 	%f826, 0f3F800000;
	sub.rn.f32 	%f827, %f826, %f825;
	mov.b32 	%r583, %f827;
	mov.b32 	%r584, %f3654;
	and.b32  	%r585, %r584, -2147483648;
	or.b32  	%r586, %r585, %r583;
	mov.b32 	%f3748, %r586;
$L__BB0_420:                            // %__nv_erff.exit713
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f828, %f8;
	setp.ltu.f32 	%p142, %f828, 0f3F8060FE;
	setp.ge.f32 	%p143, %f828, 0f3F8060FE;
	mul.rn.f32 	%f829, %f8, %f8;
	selp.f32 	%f830, %f828, %f829, %p143;
	selp.f32 	%f831, 0f3789CA3C, 0f38B1E96A, %p143;
	selp.f32 	%f832, 0fB9F560B9, 0fBA574D20, %p143;
	fma.rn.f32 	%f833, %f831, %f830, %f832;
	selp.f32 	%f834, 0f3BAC840B, 0f3BAAD5EA, %p143;
	fma.rn.f32 	%f835, %f833, %f830, %f834;
	selp.f32 	%f836, 0fBD0C8162, 0fBCDC1BE7, %p143;
	fma.rn.f32 	%f837, %f835, %f830, %f836;
	selp.f32 	%f838, 0f3E1CF906, 0f3DE718AF, %p143;
	fma.rn.f32 	%f839, %f837, %f830, %f838;
	selp.f32 	%f840, 0f3F6A937E, 0fBEC093AC, %p143;
	fma.rn.f32 	%f841, %f839, %f830, %f840;
	selp.f32 	%f842, 0f3F20D842, 0f3E0375D3, %p143;
	fma.rn.f32 	%f843, %f841, %f830, %f842;
	neg.f32 	%f844, %f830;
	selp.f32 	%f845, %f844, %f8, %p143;
	fma.rn.f32 	%f3655, %f843, %f845, %f845;
	mov.f32 	%f3648, %f3742;
	mov.f32 	%f3649, %f3743;
	mov.f32 	%f3650, %f3744;
	mov.f32 	%f3651, %f3745;
	mov.f32 	%f3652, %f3746;
	mov.f32 	%f3653, %f3747;
	mov.f32 	%f3654, %f3748;
	@%p142 bra 	$L__BB0_502;
// %bb.421:                             //   in Loop: Header=BB0_3 Depth=1
	ex2.approx.ftz.f32 	%f846, %f3655;
	mov.f32 	%f847, 0f3F800000;
	sub.rn.f32 	%f848, %f847, %f846;
	mov.b32 	%r587, %f848;
	mov.b32 	%r588, %f8;
	and.b32  	%r589, %r588, -2147483648;
	or.b32  	%r590, %r589, %r587;
	mov.b32 	%f3655, %r590;
	mov.f32 	%f3648, %f3742;
	mov.f32 	%f3649, %f3743;
	mov.f32 	%f3650, %f3744;
	mov.f32 	%f3651, %f3745;
	mov.f32 	%f3652, %f3746;
	mov.f32 	%f3653, %f3747;
	mov.f32 	%f3654, %f3748;
	bra.uni 	$L__BB0_502;
$L__BB0_67:                             // %FSin
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2816, %f3648, 0f3F22F983;
	cvt.rni.s32.f32 	%r1792, %f2816;
	cvt.rn.f32.s32 	%f2817, %r1792;
	fma.rn.f32 	%f2818, %f2817, 0fBFC90FDA, %f3648;
	fma.rn.f32 	%f2819, %f2817, 0fB3A22168, %f2818;
	fma.rn.f32 	%f3687, %f2817, 0fA7C234C5, %f2819;
	abs.f32 	%f197, %f3648;
	setp.ltu.f32 	%p672, %f197, 0f47CE4780;
	@%p672 bra 	$L__BB0_75;
// %bb.68:                              // %__nv_isinff.exit.i.i.i
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p673, %f197, 0f7F800000;
	@%p673 bra 	$L__BB0_70;
// %bb.69:                              // %__nv_fmul_rn.exit.i.i.i
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2822, 0f00000000;
	mul.rn.f32 	%f3687, %f3648, %f2822;
	mov.b32 	%r1792, 0;
	bra.uni 	$L__BB0_75;
$L__BB0_401:                            // %FExp
                                        //   in Loop: Header=BB0_3 Depth=1
	fma.rn.f32 	%f1185, %f3648, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1186, %f1185;
	mov.f32 	%f1187, 0f4B400001;
	mov.f32 	%f1188, 0f437C0000;
	fma.rm.f32 	%f1189, %f1186, %f1188, %f1187;
	add.rn.f32 	%f1190, %f1189, 0fCB40007F;
	neg.f32 	%f1191, %f1190;
	fma.rn.f32 	%f1192, %f3648, 0f3FB8AA3B, %f1191;
	fma.rn.f32 	%f1193, %f3648, 0f32A57060, %f1192;
	mov.b32 	%r655, %f1189;
	shl.b32 	%r656, %r655, 23;
	mov.b32 	%f1194, %r656;
	ex2.approx.ftz.f32 	%f1195, %f1193;
	mul.rn.f32 	%f3648, %f1195, %f1194;
	fma.rn.f32 	%f1196, %f3649, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1197, %f1196;
	fma.rm.f32 	%f1198, %f1197, %f1188, %f1187;
	add.rn.f32 	%f1199, %f1198, 0fCB40007F;
	neg.f32 	%f1200, %f1199;
	fma.rn.f32 	%f1201, %f3649, 0f3FB8AA3B, %f1200;
	fma.rn.f32 	%f1202, %f3649, 0f32A57060, %f1201;
	mov.b32 	%r657, %f1198;
	shl.b32 	%r658, %r657, 23;
	mov.b32 	%f1203, %r658;
	ex2.approx.ftz.f32 	%f1204, %f1202;
	mul.rn.f32 	%f3649, %f1204, %f1203;
	fma.rn.f32 	%f1205, %f3650, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1206, %f1205;
	fma.rm.f32 	%f1207, %f1206, %f1188, %f1187;
	add.rn.f32 	%f1208, %f1207, 0fCB40007F;
	neg.f32 	%f1209, %f1208;
	fma.rn.f32 	%f1210, %f3650, 0f3FB8AA3B, %f1209;
	fma.rn.f32 	%f1211, %f3650, 0f32A57060, %f1210;
	mov.b32 	%r659, %f1207;
	shl.b32 	%r660, %r659, 23;
	mov.b32 	%f1212, %r660;
	ex2.approx.ftz.f32 	%f1213, %f1211;
	mul.rn.f32 	%f3650, %f1213, %f1212;
	fma.rn.f32 	%f1214, %f3651, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1215, %f1214;
	fma.rm.f32 	%f1216, %f1215, %f1188, %f1187;
	add.rn.f32 	%f1217, %f1216, 0fCB40007F;
	neg.f32 	%f1218, %f1217;
	fma.rn.f32 	%f1219, %f3651, 0f3FB8AA3B, %f1218;
	fma.rn.f32 	%f1220, %f3651, 0f32A57060, %f1219;
	mov.b32 	%r661, %f1216;
	shl.b32 	%r662, %r661, 23;
	mov.b32 	%f1221, %r662;
	ex2.approx.ftz.f32 	%f1222, %f1220;
	mul.rn.f32 	%f3651, %f1222, %f1221;
	fma.rn.f32 	%f1223, %f3652, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1224, %f1223;
	fma.rm.f32 	%f1225, %f1224, %f1188, %f1187;
	add.rn.f32 	%f1226, %f1225, 0fCB40007F;
	neg.f32 	%f1227, %f1226;
	fma.rn.f32 	%f1228, %f3652, 0f3FB8AA3B, %f1227;
	fma.rn.f32 	%f1229, %f3652, 0f32A57060, %f1228;
	mov.b32 	%r663, %f1225;
	shl.b32 	%r664, %r663, 23;
	mov.b32 	%f1230, %r664;
	ex2.approx.ftz.f32 	%f1231, %f1229;
	mul.rn.f32 	%f3652, %f1231, %f1230;
	fma.rn.f32 	%f1232, %f3653, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1233, %f1232;
	fma.rm.f32 	%f1234, %f1233, %f1188, %f1187;
	add.rn.f32 	%f1235, %f1234, 0fCB40007F;
	neg.f32 	%f1236, %f1235;
	fma.rn.f32 	%f1237, %f3653, 0f3FB8AA3B, %f1236;
	fma.rn.f32 	%f1238, %f3653, 0f32A57060, %f1237;
	mov.b32 	%r665, %f1234;
	shl.b32 	%r666, %r665, 23;
	mov.b32 	%f1239, %r666;
	ex2.approx.ftz.f32 	%f1240, %f1238;
	mul.rn.f32 	%f3653, %f1240, %f1239;
	fma.rn.f32 	%f1241, %f3654, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1242, %f1241;
	fma.rm.f32 	%f1243, %f1242, %f1188, %f1187;
	add.rn.f32 	%f1244, %f1243, 0fCB40007F;
	neg.f32 	%f1245, %f1244;
	fma.rn.f32 	%f1246, %f3654, 0f3FB8AA3B, %f1245;
	fma.rn.f32 	%f1247, %f3654, 0f32A57060, %f1246;
	mov.b32 	%r667, %f1243;
	shl.b32 	%r668, %r667, 23;
	mov.b32 	%f1248, %r668;
	ex2.approx.ftz.f32 	%f1249, %f1247;
	mul.rn.f32 	%f3654, %f1249, %f1248;
	fma.rn.f32 	%f1250, %f8, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1251, %f1250;
	fma.rm.f32 	%f1252, %f1251, %f1188, %f1187;
	add.rn.f32 	%f1253, %f1252, 0fCB40007F;
	neg.f32 	%f1254, %f1253;
	fma.rn.f32 	%f1255, %f8, 0f3FB8AA3B, %f1254;
	fma.rn.f32 	%f1256, %f8, 0f32A57060, %f1255;
	mov.b32 	%r669, %f1252;
	shl.b32 	%r670, %r669, 23;
	mov.b32 	%f1257, %r670;
	ex2.approx.ftz.f32 	%f1258, %f1256;
	mul.rn.f32 	%f3655, %f1258, %f1257;
	bra.uni 	$L__BB0_502;
$L__BB0_278:                            // %FArcCos
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f2268, %f3648;
	mov.f32 	%f2269, 0f3F800000;
	sub.rn.f32 	%f2270, %f2269, %f2268;
	mul.rn.f32 	%f2271, %f2270, 0f3F000000;
	sqrt.approx.f32 	%f2272, %f2271;
	setp.gt.f32 	%p504, %f2268, 0f3F11EB85;
	selp.f32 	%f2273, %f2272, %f2268, %p504;
	mul.rn.f32 	%f2274, %f2273, %f2273;
	fma.rn.f32 	%f2275, %f2274, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2276, %f2275, %f2274, 0f3D3F841F;
	fma.rn.f32 	%f2277, %f2276, %f2274, 0f3D994929;
	fma.rn.f32 	%f2278, %f2277, %f2274, 0f3E2AAB94;
	mul.rn.f32 	%f2279, %f2274, %f2278;
	fma.rn.f32 	%f2280, %f2279, %f2273, %f2273;
	add.rn.f32 	%f2281, %f2280, %f2280;
	mov.f32 	%f2282, 0f3FC90FDB;
	sub.rn.f32 	%f2283, %f2282, %f2280;
	selp.f32 	%f2284, %f2281, %f2283, %p504;
	setp.lt.f32 	%p505, %f3648, 0f00000000;
	mov.f32 	%f2285, 0f40490FDB;
	sub.rn.f32 	%f2286, %f2285, %f2284;
	selp.f32 	%f3648, %f2286, %f2284, %p505;
	abs.f32 	%f2287, %f3649;
	sub.rn.f32 	%f2288, %f2269, %f2287;
	mul.rn.f32 	%f2289, %f2288, 0f3F000000;
	sqrt.approx.f32 	%f2290, %f2289;
	setp.gt.f32 	%p506, %f2287, 0f3F11EB85;
	selp.f32 	%f2291, %f2290, %f2287, %p506;
	mul.rn.f32 	%f2292, %f2291, %f2291;
	fma.rn.f32 	%f2293, %f2292, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2294, %f2293, %f2292, 0f3D3F841F;
	fma.rn.f32 	%f2295, %f2294, %f2292, 0f3D994929;
	fma.rn.f32 	%f2296, %f2295, %f2292, 0f3E2AAB94;
	mul.rn.f32 	%f2297, %f2292, %f2296;
	fma.rn.f32 	%f2298, %f2297, %f2291, %f2291;
	add.rn.f32 	%f2299, %f2298, %f2298;
	sub.rn.f32 	%f2300, %f2282, %f2298;
	selp.f32 	%f2301, %f2299, %f2300, %p506;
	setp.lt.f32 	%p507, %f3649, 0f00000000;
	sub.rn.f32 	%f2302, %f2285, %f2301;
	selp.f32 	%f3649, %f2302, %f2301, %p507;
	abs.f32 	%f2303, %f3650;
	sub.rn.f32 	%f2304, %f2269, %f2303;
	mul.rn.f32 	%f2305, %f2304, 0f3F000000;
	sqrt.approx.f32 	%f2306, %f2305;
	setp.gt.f32 	%p508, %f2303, 0f3F11EB85;
	selp.f32 	%f2307, %f2306, %f2303, %p508;
	mul.rn.f32 	%f2308, %f2307, %f2307;
	fma.rn.f32 	%f2309, %f2308, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2310, %f2309, %f2308, 0f3D3F841F;
	fma.rn.f32 	%f2311, %f2310, %f2308, 0f3D994929;
	fma.rn.f32 	%f2312, %f2311, %f2308, 0f3E2AAB94;
	mul.rn.f32 	%f2313, %f2308, %f2312;
	fma.rn.f32 	%f2314, %f2313, %f2307, %f2307;
	add.rn.f32 	%f2315, %f2314, %f2314;
	sub.rn.f32 	%f2316, %f2282, %f2314;
	selp.f32 	%f2317, %f2315, %f2316, %p508;
	setp.lt.f32 	%p509, %f3650, 0f00000000;
	sub.rn.f32 	%f2318, %f2285, %f2317;
	selp.f32 	%f3650, %f2318, %f2317, %p509;
	abs.f32 	%f2319, %f3651;
	sub.rn.f32 	%f2320, %f2269, %f2319;
	mul.rn.f32 	%f2321, %f2320, 0f3F000000;
	sqrt.approx.f32 	%f2322, %f2321;
	setp.gt.f32 	%p510, %f2319, 0f3F11EB85;
	selp.f32 	%f2323, %f2322, %f2319, %p510;
	mul.rn.f32 	%f2324, %f2323, %f2323;
	fma.rn.f32 	%f2325, %f2324, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2326, %f2325, %f2324, 0f3D3F841F;
	fma.rn.f32 	%f2327, %f2326, %f2324, 0f3D994929;
	fma.rn.f32 	%f2328, %f2327, %f2324, 0f3E2AAB94;
	mul.rn.f32 	%f2329, %f2324, %f2328;
	fma.rn.f32 	%f2330, %f2329, %f2323, %f2323;
	add.rn.f32 	%f2331, %f2330, %f2330;
	sub.rn.f32 	%f2332, %f2282, %f2330;
	selp.f32 	%f2333, %f2331, %f2332, %p510;
	setp.lt.f32 	%p511, %f3651, 0f00000000;
	sub.rn.f32 	%f2334, %f2285, %f2333;
	selp.f32 	%f3651, %f2334, %f2333, %p511;
	abs.f32 	%f2335, %f3652;
	sub.rn.f32 	%f2336, %f2269, %f2335;
	mul.rn.f32 	%f2337, %f2336, 0f3F000000;
	sqrt.approx.f32 	%f2338, %f2337;
	setp.gt.f32 	%p512, %f2335, 0f3F11EB85;
	selp.f32 	%f2339, %f2338, %f2335, %p512;
	mul.rn.f32 	%f2340, %f2339, %f2339;
	fma.rn.f32 	%f2341, %f2340, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2342, %f2341, %f2340, 0f3D3F841F;
	fma.rn.f32 	%f2343, %f2342, %f2340, 0f3D994929;
	fma.rn.f32 	%f2344, %f2343, %f2340, 0f3E2AAB94;
	mul.rn.f32 	%f2345, %f2340, %f2344;
	fma.rn.f32 	%f2346, %f2345, %f2339, %f2339;
	add.rn.f32 	%f2347, %f2346, %f2346;
	sub.rn.f32 	%f2348, %f2282, %f2346;
	selp.f32 	%f2349, %f2347, %f2348, %p512;
	setp.lt.f32 	%p513, %f3652, 0f00000000;
	sub.rn.f32 	%f2350, %f2285, %f2349;
	selp.f32 	%f3652, %f2350, %f2349, %p513;
	abs.f32 	%f2351, %f3653;
	sub.rn.f32 	%f2352, %f2269, %f2351;
	mul.rn.f32 	%f2353, %f2352, 0f3F000000;
	sqrt.approx.f32 	%f2354, %f2353;
	setp.gt.f32 	%p514, %f2351, 0f3F11EB85;
	selp.f32 	%f2355, %f2354, %f2351, %p514;
	mul.rn.f32 	%f2356, %f2355, %f2355;
	fma.rn.f32 	%f2357, %f2356, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2358, %f2357, %f2356, 0f3D3F841F;
	fma.rn.f32 	%f2359, %f2358, %f2356, 0f3D994929;
	fma.rn.f32 	%f2360, %f2359, %f2356, 0f3E2AAB94;
	mul.rn.f32 	%f2361, %f2356, %f2360;
	fma.rn.f32 	%f2362, %f2361, %f2355, %f2355;
	add.rn.f32 	%f2363, %f2362, %f2362;
	sub.rn.f32 	%f2364, %f2282, %f2362;
	selp.f32 	%f2365, %f2363, %f2364, %p514;
	setp.lt.f32 	%p515, %f3653, 0f00000000;
	sub.rn.f32 	%f2366, %f2285, %f2365;
	selp.f32 	%f3653, %f2366, %f2365, %p515;
	abs.f32 	%f2367, %f3654;
	sub.rn.f32 	%f2368, %f2269, %f2367;
	mul.rn.f32 	%f2369, %f2368, 0f3F000000;
	sqrt.approx.f32 	%f2370, %f2369;
	setp.gt.f32 	%p516, %f2367, 0f3F11EB85;
	selp.f32 	%f2371, %f2370, %f2367, %p516;
	mul.rn.f32 	%f2372, %f2371, %f2371;
	fma.rn.f32 	%f2373, %f2372, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2374, %f2373, %f2372, 0f3D3F841F;
	fma.rn.f32 	%f2375, %f2374, %f2372, 0f3D994929;
	fma.rn.f32 	%f2376, %f2375, %f2372, 0f3E2AAB94;
	mul.rn.f32 	%f2377, %f2372, %f2376;
	fma.rn.f32 	%f2378, %f2377, %f2371, %f2371;
	add.rn.f32 	%f2379, %f2378, %f2378;
	sub.rn.f32 	%f2380, %f2282, %f2378;
	selp.f32 	%f2381, %f2379, %f2380, %p516;
	setp.lt.f32 	%p517, %f3654, 0f00000000;
	sub.rn.f32 	%f2382, %f2285, %f2381;
	selp.f32 	%f3654, %f2382, %f2381, %p517;
	abs.f32 	%f2383, %f8;
	sub.rn.f32 	%f2384, %f2269, %f2383;
	mul.rn.f32 	%f2385, %f2384, 0f3F000000;
	sqrt.approx.f32 	%f2386, %f2385;
	setp.gt.f32 	%p518, %f2383, 0f3F11EB85;
	selp.f32 	%f2387, %f2386, %f2383, %p518;
	mul.rn.f32 	%f2388, %f2387, %f2387;
	fma.rn.f32 	%f2389, %f2388, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2390, %f2389, %f2388, 0f3D3F841F;
	fma.rn.f32 	%f2391, %f2390, %f2388, 0f3D994929;
	fma.rn.f32 	%f2392, %f2391, %f2388, 0f3E2AAB94;
	mul.rn.f32 	%f2393, %f2388, %f2392;
	fma.rn.f32 	%f2394, %f2393, %f2387, %f2387;
	add.rn.f32 	%f2395, %f2394, %f2394;
	sub.rn.f32 	%f2396, %f2282, %f2394;
	selp.f32 	%f2397, %f2395, %f2396, %p518;
	setp.lt.f32 	%p519, %f8, 0f00000000;
	sub.rn.f32 	%f2398, %f2285, %f2397;
	selp.f32 	%f3655, %f2398, %f2397, %p519;
	bra.uni 	$L__BB0_502;
$L__BB0_197:                            // %FTan
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2520, %f3648, 0f3F22F983;
	cvt.rni.s32.f32 	%r1840, %f2520;
	cvt.rn.f32.s32 	%f2521, %r1840;
	fma.rn.f32 	%f2522, %f2521, 0fBFC90FDA, %f3648;
	fma.rn.f32 	%f2523, %f2521, 0fB3A22168, %f2522;
	fma.rn.f32 	%f3703, %f2521, 0fA7C234C5, %f2523;
	abs.f32 	%f293, %f3648;
	setp.ltu.f32 	%p536, %f293, 0f47CE4780;
	mov.u64 	%rd500, __cudart_i2opi_f;
	@%p536 bra 	$L__BB0_205;
// %bb.198:                             // %__nv_isinff.exit.i.i
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p537, %f293, 0f7F800000;
	@%p537 bra 	$L__BB0_200;
// %bb.199:                             // %__nv_fmul_rn.exit.i.i
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2526, 0f00000000;
	mul.rn.f32 	%f3703, %f3648, %f2526;
	mov.b32 	%r1840, 0;
	bra.uni 	$L__BB0_205;
$L__BB0_282:                            //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p411, %f388, 0f7F800000;
	setp.neu.f32 	%p412, %f1947, 0f7F800000;
	or.pred  	%p413, %p411, %p412;
	mov.b32 	%r1775, %f3656;
	@%p413 bra 	$L__BB0_284;
// %bb.283:                             //   in Loop: Header=BB0_3 Depth=1
	setp.lt.s32 	%p417, %r1775, 0;
	selp.b32 	%r813, 1075235812, 1061752795, %p417;
	mov.b32 	%f1969, %r813;
	copysign.f32 	%f3648, %f3648, %f1969;
	bra.uni 	$L__BB0_285;
$L__BB0_322:                            //   in Loop: Header=BB0_3 Depth=1
	setp.lt.f32 	%p193, %f436, 0f00800000;
	mul.rn.f32 	%f1266, %f436, 0f4B800000;
	selp.f32 	%f1267, %f1266, %f436, %p193;
	mov.b32 	%r353, %f1267;
	and.b32  	%r671, %r353, 8388607;
	or.b32  	%r672, %r671, 1065353216;
	mov.b32 	%f437, %r672;
	setp.gt.f32 	%p194, %f437, 0f3FB504F3;
	mul.rn.f32 	%f1268, %f437, 0f3F000000;
	selp.f32 	%f438, %f1268, %f437, %p194;
	add.rn.f32 	%f1260, %f438, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1259,%f1260;
	// end inline asm
	setp.gt.f32 	%p200, %f440, 0f77F684DF;
	mul.rn.f32 	%f1269, %f3656, 0f39000000;
	selp.f32 	%f1270, %f1269, %f3656, %p200;
	selp.f32 	%f1271, 0fC3170000, 0fC2FE0000, %p193;
	shr.u32 	%r673, %r353, 23;
	cvt.rn.f32.u32 	%f1272, %r673;
	add.rn.f32 	%f1273, %f1271, %f1272;
	add.rn.f32 	%f1274, %f1273, 0f3F800000;
	selp.f32 	%f1275, %f1274, %f1273, %p194;
	mov.f32 	%f1276, 0f3F317200;
	mul.rn.f32 	%f1277, %f1275, %f1276;
	add.rn.f32 	%f1278, %f438, 0fBF800000;
	add.rn.f32 	%f1279, %f1278, %f1278;
	mul.rn.f32 	%f1280, %f1279, %f1259;
	mul.rn.f32 	%f1281, %f1280, %f1280;
	fma.rn.f32 	%f1282, %f1281, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1283, %f1282, %f1281, 0f3DAAAABD;
	mul.rn.f32 	%f1284, %f1283, %f1281;
	mul.rn.f32 	%f1285, %f1284, %f1280;
	add.rn.f32 	%f1286, %f1280, %f1285;
	sub.rn.f32 	%f1287, %f1280, %f1286;
	add.rn.f32 	%f1288, %f1285, %f1287;
	neg.f32 	%f1289, %f1280;
	sub.rn.f32 	%f1290, %f1278, %f1280;
	add.rn.f32 	%f1291, %f1290, %f1290;
	fma.rn.f32 	%f1292, %f1289, %f1278, %f1291;
	mul.rn.f32 	%f1293, %f1259, %f1292;
	add.rn.f32 	%f1294, %f1293, %f1288;
	add.rn.f32 	%f1295, %f1286, %f1294;
	add.rn.f32 	%f1296, %f1277, %f1295;
	sub.rn.f32 	%f1297, %f1277, %f1296;
	add.rn.f32 	%f1298, %f1295, %f1297;
	sub.rn.f32 	%f1299, %f1286, %f1295;
	add.rn.f32 	%f1300, %f1294, %f1299;
	add.rn.f32 	%f1301, %f1300, %f1298;
	mov.f32 	%f1302, 0f35BFBE8E;
	mul.rn.f32 	%f1303, %f1275, %f1302;
	add.rn.f32 	%f1304, %f1303, %f1301;
	add.rn.f32 	%f1305, %f1296, %f1304;
	mul.rn.f32 	%f1306, %f1270, %f1305;
	sub.rn.f32 	%f1307, %f1296, %f1305;
	add.rn.f32 	%f1308, %f1304, %f1307;
	neg.f32 	%f1309, %f1306;
	fma.rn.f32 	%f1310, %f1270, %f1305, %f1309;
	fma.rn.f32 	%f1311, %f1270, %f1308, %f1310;
	fma.rn.f32 	%f1312, %f1305, 0f00000000, %f1311;
	add.rn.f32 	%f1313, %f1306, %f1312;
	mov.b32 	%r674, %f1313;
	setp.eq.s32 	%p201, %r674, 1118925336;
	selp.f32 	%f1314, 0f42B17217, %f1313, %p201;
	neg.f32 	%f1315, %f1313;
	add.rn.f32 	%f1316, %f1306, %f1315;
	add.rn.f32 	%f1317, %f1316, %f1312;
	add.rn.f32 	%f1318, %f1317, 0f37000000;
	selp.f32 	%f1319, %f1318, %f1317, %p201;
	mov.f32 	%f1320, 0f3FB8AA3B;
	mul.rn.f32 	%f1321, %f1314, %f1320;
	cvt.rzi.f32.f32 	%f1322, %f1321;
	abs.f32 	%f1323, %f1322;
	setp.gt.f32 	%p202, %f1323, 0f42FC0000;
	mov.f32 	%f1324, 0f42FC0000;
	copysign.f32 	%f1325, %f1322, %f1324;
	selp.f32 	%f1326, %f1325, %f1322, %p202;
	fma.rn.f32 	%f1327, %f1326, 0fBF317218, %f1314;
	fma.rn.f32 	%f1328, %f1326, 0f3102E308, %f1327;
	mul.rn.f32 	%f1329, %f1328, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1330, %f1329;
	add.rn.f32 	%f1331, %f1326, 0f4B40007F;
	mov.b32 	%r675, %f1331;
	shl.b32 	%r676, %r675, 23;
	mov.b32 	%f1332, %r676;
	mul.rn.f32 	%f1333, %f1330, %f1332;
	setp.neu.f32 	%p203, %f1333, 0f7F800000;
	fma.rn.f32 	%f1334, %f1333, %f1319, %f1333;
	selp.f32 	%f1335, %f1334, 0f7F800000, %p203;
	neg.f32 	%f1336, %f1335;
	selp.f32 	%f1337, %f1336, %f1335, %p1;
	cvt.rzi.f32.f32 	%f1338, %f3656;
	setp.neu.f32 	%p204, %f3656, %f1338;
	selp.f32 	%f1340, 0f7FFFFFFF, %f1337, %p204;
	selp.f32 	%f3727, %f1340, %f1337, %p195;
$L__BB0_323:                            // %__internal_powf_corner_cases.exit.i
                                        //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1342, %f436, %f440;
	mov.b32 	%r681, %f1342;
	setp.lt.s32 	%p207, %r681, 2139095040;
	@%p207 bra 	$L__BB0_330;
// %bb.324:                             // %__nv_isnanf.exit.i.i
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.num.f32 	%p208, %f436, %f436;
	setp.num.f32 	%p209, %f440, %f440;
	and.pred  	%p210, %p208, %p209;
	@%p210 bra 	$L__BB0_326;
// %bb.325:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f3727, %f3648, %f3656;
	bra.uni 	$L__BB0_330;
$L__BB0_284:                            // %__nv_fmaxf.exit.i
                                        //   in Loop: Header=BB0_3 Depth=1
	max.f32 	%f1948, %f1947, %f388;
	min.f32 	%f1949, %f1947, %f388;
	div.rn.f32 	%f1950, %f1949, %f1948;
	mul.rn.f32 	%f1951, %f1950, %f1950;
	fma.rn.f32 	%f1952, %f1951, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f1953, %f1952, %f1951, 0fC0D21907;
	mul.rn.f32 	%f1954, %f1951, %f1953;
	mul.rn.f32 	%f1955, %f1950, %f1954;
	add.rn.f32 	%f1956, %f1951, 0f41355DC0;
	fma.rn.f32 	%f1957, %f1956, %f1951, 0f41E6BD60;
	fma.rn.f32 	%f1958, %f1957, %f1951, 0f419D92C8;
	rcp.rn.f32 	%f1959, %f1958;
	fma.rn.f32 	%f1960, %f1955, %f1959, %f1950;
	setp.gt.f32 	%p414, %f1947, %f388;
	mov.f32 	%f1961, 0f3FC90FDB;
	sub.rn.f32 	%f1962, %f1961, %f1960;
	selp.f32 	%f1963, %f1962, %f1960, %p414;
	setp.lt.s32 	%p415, %r1775, 0;
	mov.f32 	%f1964, 0f40490FDB;
	sub.rn.f32 	%f1965, %f1964, %f1963;
	selp.f32 	%f1966, %f1965, %f1963, %p415;
	mov.b32 	%r808, %f1966;
	mov.b32 	%r809, %f3648;
	and.b32  	%r810, %r809, -2147483648;
	or.b32  	%r811, %r810, %r808;
	mov.b32 	%f1967, %r811;
	add.rn.f32 	%f1968, %f1947, %f388;
	setp.num.f32 	%p416, %f1968, %f1968;
	selp.f32 	%f3648, %f1967, %f1968, %p416;
$L__BB0_285:                            // %__nv_atan2f.exit
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f394, %f3657;
	abs.f32 	%f1971, %f3649;
	setp.neu.f32 	%p418, %f394, 0f00000000;
	setp.neu.f32 	%p419, %f1971, 0f00000000;
	or.pred  	%p420, %p418, %p419;
	@%p420 bra 	$L__BB0_287;
// %bb.286:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r824, %f3657;
	shr.s32 	%r825, %r824, 31;
	and.b32  	%r826, %r825, 1078530011;
	mov.b32 	%f1994, %r826;
	copysign.f32 	%f3649, %f3649, %f1994;
	bra.uni 	$L__BB0_290;
$L__BB0_287:                            //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p421, %f394, 0f7F800000;
	setp.neu.f32 	%p422, %f1971, 0f7F800000;
	or.pred  	%p423, %p421, %p422;
	mov.b32 	%r1776, %f3657;
	@%p423 bra 	$L__BB0_289;
// %bb.288:                             //   in Loop: Header=BB0_3 Depth=1
	setp.lt.s32 	%p427, %r1776, 0;
	selp.b32 	%r823, 1075235812, 1061752795, %p427;
	mov.b32 	%f1993, %r823;
	copysign.f32 	%f3649, %f3649, %f1993;
	bra.uni 	$L__BB0_290;
$L__BB0_289:                            // %__nv_fmaxf.exit.i557
                                        //   in Loop: Header=BB0_3 Depth=1
	max.f32 	%f1972, %f1971, %f394;
	min.f32 	%f1973, %f1971, %f394;
	div.rn.f32 	%f1974, %f1973, %f1972;
	mul.rn.f32 	%f1975, %f1974, %f1974;
	fma.rn.f32 	%f1976, %f1975, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f1977, %f1976, %f1975, 0fC0D21907;
	mul.rn.f32 	%f1978, %f1975, %f1977;
	mul.rn.f32 	%f1979, %f1974, %f1978;
	add.rn.f32 	%f1980, %f1975, 0f41355DC0;
	fma.rn.f32 	%f1981, %f1980, %f1975, 0f41E6BD60;
	fma.rn.f32 	%f1982, %f1981, %f1975, 0f419D92C8;
	rcp.rn.f32 	%f1983, %f1982;
	fma.rn.f32 	%f1984, %f1979, %f1983, %f1974;
	setp.gt.f32 	%p424, %f1971, %f394;
	mov.f32 	%f1985, 0f3FC90FDB;
	sub.rn.f32 	%f1986, %f1985, %f1984;
	selp.f32 	%f1987, %f1986, %f1984, %p424;
	setp.lt.s32 	%p425, %r1776, 0;
	mov.f32 	%f1988, 0f40490FDB;
	sub.rn.f32 	%f1989, %f1988, %f1987;
	selp.f32 	%f1990, %f1989, %f1987, %p425;
	mov.b32 	%r818, %f1990;
	mov.b32 	%r819, %f3649;
	and.b32  	%r820, %r819, -2147483648;
	or.b32  	%r821, %r820, %r818;
	mov.b32 	%f1991, %r821;
	add.rn.f32 	%f1992, %f1971, %f394;
	setp.num.f32 	%p426, %f1992, %f1992;
	selp.f32 	%f3649, %f1991, %f1992, %p426;
$L__BB0_290:                            // %__nv_atan2f.exit562
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f400, %f3658;
	abs.f32 	%f1995, %f3650;
	setp.neu.f32 	%p428, %f400, 0f00000000;
	setp.neu.f32 	%p429, %f1995, 0f00000000;
	or.pred  	%p430, %p428, %p429;
	@%p430 bra 	$L__BB0_292;
// %bb.291:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r834, %f3658;
	shr.s32 	%r835, %r834, 31;
	and.b32  	%r836, %r835, 1078530011;
	mov.b32 	%f2018, %r836;
	copysign.f32 	%f3650, %f3650, %f2018;
	bra.uni 	$L__BB0_295;
$L__BB0_292:                            //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p431, %f400, 0f7F800000;
	setp.neu.f32 	%p432, %f1995, 0f7F800000;
	or.pred  	%p433, %p431, %p432;
	mov.b32 	%r1777, %f3658;
	@%p433 bra 	$L__BB0_294;
// %bb.293:                             //   in Loop: Header=BB0_3 Depth=1
	setp.lt.s32 	%p437, %r1777, 0;
	selp.b32 	%r833, 1075235812, 1061752795, %p437;
	mov.b32 	%f2017, %r833;
	copysign.f32 	%f3650, %f3650, %f2017;
	bra.uni 	$L__BB0_295;
$L__BB0_294:                            // %__nv_fmaxf.exit.i565
                                        //   in Loop: Header=BB0_3 Depth=1
	max.f32 	%f1996, %f1995, %f400;
	min.f32 	%f1997, %f1995, %f400;
	div.rn.f32 	%f1998, %f1997, %f1996;
	mul.rn.f32 	%f1999, %f1998, %f1998;
	fma.rn.f32 	%f2000, %f1999, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2001, %f2000, %f1999, 0fC0D21907;
	mul.rn.f32 	%f2002, %f1999, %f2001;
	mul.rn.f32 	%f2003, %f1998, %f2002;
	add.rn.f32 	%f2004, %f1999, 0f41355DC0;
	fma.rn.f32 	%f2005, %f2004, %f1999, 0f41E6BD60;
	fma.rn.f32 	%f2006, %f2005, %f1999, 0f419D92C8;
	rcp.rn.f32 	%f2007, %f2006;
	fma.rn.f32 	%f2008, %f2003, %f2007, %f1998;
	setp.gt.f32 	%p434, %f1995, %f400;
	mov.f32 	%f2009, 0f3FC90FDB;
	sub.rn.f32 	%f2010, %f2009, %f2008;
	selp.f32 	%f2011, %f2010, %f2008, %p434;
	setp.lt.s32 	%p435, %r1777, 0;
	mov.f32 	%f2012, 0f40490FDB;
	sub.rn.f32 	%f2013, %f2012, %f2011;
	selp.f32 	%f2014, %f2013, %f2011, %p435;
	mov.b32 	%r828, %f2014;
	mov.b32 	%r829, %f3650;
	and.b32  	%r830, %r829, -2147483648;
	or.b32  	%r831, %r830, %r828;
	mov.b32 	%f2015, %r831;
	add.rn.f32 	%f2016, %f1995, %f400;
	setp.num.f32 	%p436, %f2016, %f2016;
	selp.f32 	%f3650, %f2015, %f2016, %p436;
$L__BB0_295:                            // %__nv_atan2f.exit570
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f406, %f3659;
	abs.f32 	%f2019, %f3651;
	setp.neu.f32 	%p438, %f406, 0f00000000;
	setp.neu.f32 	%p439, %f2019, 0f00000000;
	or.pred  	%p440, %p438, %p439;
	@%p440 bra 	$L__BB0_297;
// %bb.296:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r844, %f3659;
	shr.s32 	%r845, %r844, 31;
	and.b32  	%r846, %r845, 1078530011;
	mov.b32 	%f2042, %r846;
	copysign.f32 	%f3651, %f3651, %f2042;
	bra.uni 	$L__BB0_300;
$L__BB0_297:                            //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p441, %f406, 0f7F800000;
	setp.neu.f32 	%p442, %f2019, 0f7F800000;
	or.pred  	%p443, %p441, %p442;
	mov.b32 	%r1778, %f3659;
	@%p443 bra 	$L__BB0_299;
// %bb.298:                             //   in Loop: Header=BB0_3 Depth=1
	setp.lt.s32 	%p447, %r1778, 0;
	selp.b32 	%r843, 1075235812, 1061752795, %p447;
	mov.b32 	%f2041, %r843;
	copysign.f32 	%f3651, %f3651, %f2041;
	bra.uni 	$L__BB0_300;
$L__BB0_299:                            // %__nv_fmaxf.exit.i573
                                        //   in Loop: Header=BB0_3 Depth=1
	max.f32 	%f2020, %f2019, %f406;
	min.f32 	%f2021, %f2019, %f406;
	div.rn.f32 	%f2022, %f2021, %f2020;
	mul.rn.f32 	%f2023, %f2022, %f2022;
	fma.rn.f32 	%f2024, %f2023, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2025, %f2024, %f2023, 0fC0D21907;
	mul.rn.f32 	%f2026, %f2023, %f2025;
	mul.rn.f32 	%f2027, %f2022, %f2026;
	add.rn.f32 	%f2028, %f2023, 0f41355DC0;
	fma.rn.f32 	%f2029, %f2028, %f2023, 0f41E6BD60;
	fma.rn.f32 	%f2030, %f2029, %f2023, 0f419D92C8;
	rcp.rn.f32 	%f2031, %f2030;
	fma.rn.f32 	%f2032, %f2027, %f2031, %f2022;
	setp.gt.f32 	%p444, %f2019, %f406;
	mov.f32 	%f2033, 0f3FC90FDB;
	sub.rn.f32 	%f2034, %f2033, %f2032;
	selp.f32 	%f2035, %f2034, %f2032, %p444;
	setp.lt.s32 	%p445, %r1778, 0;
	mov.f32 	%f2036, 0f40490FDB;
	sub.rn.f32 	%f2037, %f2036, %f2035;
	selp.f32 	%f2038, %f2037, %f2035, %p445;
	mov.b32 	%r838, %f2038;
	mov.b32 	%r839, %f3651;
	and.b32  	%r840, %r839, -2147483648;
	or.b32  	%r841, %r840, %r838;
	mov.b32 	%f2039, %r841;
	add.rn.f32 	%f2040, %f2019, %f406;
	setp.num.f32 	%p446, %f2040, %f2040;
	selp.f32 	%f3651, %f2039, %f2040, %p446;
$L__BB0_300:                            // %__nv_atan2f.exit578
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f412, %f3660;
	abs.f32 	%f2043, %f3652;
	setp.neu.f32 	%p448, %f412, 0f00000000;
	setp.neu.f32 	%p449, %f2043, 0f00000000;
	or.pred  	%p450, %p448, %p449;
	@%p450 bra 	$L__BB0_302;
// %bb.301:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r854, %f3660;
	shr.s32 	%r855, %r854, 31;
	and.b32  	%r856, %r855, 1078530011;
	mov.b32 	%f2066, %r856;
	copysign.f32 	%f3652, %f3652, %f2066;
	bra.uni 	$L__BB0_305;
$L__BB0_302:                            //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p451, %f412, 0f7F800000;
	setp.neu.f32 	%p452, %f2043, 0f7F800000;
	or.pred  	%p453, %p451, %p452;
	mov.b32 	%r1779, %f3660;
	@%p453 bra 	$L__BB0_304;
// %bb.303:                             //   in Loop: Header=BB0_3 Depth=1
	setp.lt.s32 	%p457, %r1779, 0;
	selp.b32 	%r853, 1075235812, 1061752795, %p457;
	mov.b32 	%f2065, %r853;
	copysign.f32 	%f3652, %f3652, %f2065;
	bra.uni 	$L__BB0_305;
$L__BB0_304:                            // %__nv_fmaxf.exit.i581
                                        //   in Loop: Header=BB0_3 Depth=1
	max.f32 	%f2044, %f2043, %f412;
	min.f32 	%f2045, %f2043, %f412;
	div.rn.f32 	%f2046, %f2045, %f2044;
	mul.rn.f32 	%f2047, %f2046, %f2046;
	fma.rn.f32 	%f2048, %f2047, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2049, %f2048, %f2047, 0fC0D21907;
	mul.rn.f32 	%f2050, %f2047, %f2049;
	mul.rn.f32 	%f2051, %f2046, %f2050;
	add.rn.f32 	%f2052, %f2047, 0f41355DC0;
	fma.rn.f32 	%f2053, %f2052, %f2047, 0f41E6BD60;
	fma.rn.f32 	%f2054, %f2053, %f2047, 0f419D92C8;
	rcp.rn.f32 	%f2055, %f2054;
	fma.rn.f32 	%f2056, %f2051, %f2055, %f2046;
	setp.gt.f32 	%p454, %f2043, %f412;
	mov.f32 	%f2057, 0f3FC90FDB;
	sub.rn.f32 	%f2058, %f2057, %f2056;
	selp.f32 	%f2059, %f2058, %f2056, %p454;
	setp.lt.s32 	%p455, %r1779, 0;
	mov.f32 	%f2060, 0f40490FDB;
	sub.rn.f32 	%f2061, %f2060, %f2059;
	selp.f32 	%f2062, %f2061, %f2059, %p455;
	mov.b32 	%r848, %f2062;
	mov.b32 	%r849, %f3652;
	and.b32  	%r850, %r849, -2147483648;
	or.b32  	%r851, %r850, %r848;
	mov.b32 	%f2063, %r851;
	add.rn.f32 	%f2064, %f2043, %f412;
	setp.num.f32 	%p456, %f2064, %f2064;
	selp.f32 	%f3652, %f2063, %f2064, %p456;
$L__BB0_305:                            // %__nv_atan2f.exit586
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f418, %f3661;
	abs.f32 	%f2067, %f3653;
	setp.neu.f32 	%p458, %f418, 0f00000000;
	setp.neu.f32 	%p459, %f2067, 0f00000000;
	or.pred  	%p460, %p458, %p459;
	@%p460 bra 	$L__BB0_307;
// %bb.306:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r864, %f3661;
	shr.s32 	%r865, %r864, 31;
	and.b32  	%r866, %r865, 1078530011;
	mov.b32 	%f2090, %r866;
	copysign.f32 	%f3653, %f3653, %f2090;
	bra.uni 	$L__BB0_310;
$L__BB0_307:                            //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p461, %f418, 0f7F800000;
	setp.neu.f32 	%p462, %f2067, 0f7F800000;
	or.pred  	%p463, %p461, %p462;
	mov.b32 	%r1780, %f3661;
	@%p463 bra 	$L__BB0_309;
// %bb.308:                             //   in Loop: Header=BB0_3 Depth=1
	setp.lt.s32 	%p467, %r1780, 0;
	selp.b32 	%r863, 1075235812, 1061752795, %p467;
	mov.b32 	%f2089, %r863;
	copysign.f32 	%f3653, %f3653, %f2089;
	bra.uni 	$L__BB0_310;
$L__BB0_309:                            // %__nv_fmaxf.exit.i589
                                        //   in Loop: Header=BB0_3 Depth=1
	max.f32 	%f2068, %f2067, %f418;
	min.f32 	%f2069, %f2067, %f418;
	div.rn.f32 	%f2070, %f2069, %f2068;
	mul.rn.f32 	%f2071, %f2070, %f2070;
	fma.rn.f32 	%f2072, %f2071, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2073, %f2072, %f2071, 0fC0D21907;
	mul.rn.f32 	%f2074, %f2071, %f2073;
	mul.rn.f32 	%f2075, %f2070, %f2074;
	add.rn.f32 	%f2076, %f2071, 0f41355DC0;
	fma.rn.f32 	%f2077, %f2076, %f2071, 0f41E6BD60;
	fma.rn.f32 	%f2078, %f2077, %f2071, 0f419D92C8;
	rcp.rn.f32 	%f2079, %f2078;
	fma.rn.f32 	%f2080, %f2075, %f2079, %f2070;
	setp.gt.f32 	%p464, %f2067, %f418;
	mov.f32 	%f2081, 0f3FC90FDB;
	sub.rn.f32 	%f2082, %f2081, %f2080;
	selp.f32 	%f2083, %f2082, %f2080, %p464;
	setp.lt.s32 	%p465, %r1780, 0;
	mov.f32 	%f2084, 0f40490FDB;
	sub.rn.f32 	%f2085, %f2084, %f2083;
	selp.f32 	%f2086, %f2085, %f2083, %p465;
	mov.b32 	%r858, %f2086;
	mov.b32 	%r859, %f3653;
	and.b32  	%r860, %r859, -2147483648;
	or.b32  	%r861, %r860, %r858;
	mov.b32 	%f2087, %r861;
	add.rn.f32 	%f2088, %f2067, %f418;
	setp.num.f32 	%p466, %f2088, %f2088;
	selp.f32 	%f3653, %f2087, %f2088, %p466;
$L__BB0_310:                            // %__nv_atan2f.exit594
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f424, %f3662;
	abs.f32 	%f2091, %f3654;
	setp.neu.f32 	%p468, %f424, 0f00000000;
	setp.neu.f32 	%p469, %f2091, 0f00000000;
	or.pred  	%p470, %p468, %p469;
	@%p470 bra 	$L__BB0_312;
// %bb.311:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r874, %f3662;
	shr.s32 	%r875, %r874, 31;
	and.b32  	%r876, %r875, 1078530011;
	mov.b32 	%f2114, %r876;
	copysign.f32 	%f3654, %f3654, %f2114;
	bra.uni 	$L__BB0_315;
$L__BB0_312:                            //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p471, %f424, 0f7F800000;
	setp.neu.f32 	%p472, %f2091, 0f7F800000;
	or.pred  	%p473, %p471, %p472;
	mov.b32 	%r1781, %f3662;
	@%p473 bra 	$L__BB0_314;
// %bb.313:                             //   in Loop: Header=BB0_3 Depth=1
	setp.lt.s32 	%p477, %r1781, 0;
	selp.b32 	%r873, 1075235812, 1061752795, %p477;
	mov.b32 	%f2113, %r873;
	copysign.f32 	%f3654, %f3654, %f2113;
	bra.uni 	$L__BB0_315;
$L__BB0_314:                            // %__nv_fmaxf.exit.i597
                                        //   in Loop: Header=BB0_3 Depth=1
	max.f32 	%f2092, %f2091, %f424;
	min.f32 	%f2093, %f2091, %f424;
	div.rn.f32 	%f2094, %f2093, %f2092;
	mul.rn.f32 	%f2095, %f2094, %f2094;
	fma.rn.f32 	%f2096, %f2095, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2097, %f2096, %f2095, 0fC0D21907;
	mul.rn.f32 	%f2098, %f2095, %f2097;
	mul.rn.f32 	%f2099, %f2094, %f2098;
	add.rn.f32 	%f2100, %f2095, 0f41355DC0;
	fma.rn.f32 	%f2101, %f2100, %f2095, 0f41E6BD60;
	fma.rn.f32 	%f2102, %f2101, %f2095, 0f419D92C8;
	rcp.rn.f32 	%f2103, %f2102;
	fma.rn.f32 	%f2104, %f2099, %f2103, %f2094;
	setp.gt.f32 	%p474, %f2091, %f424;
	mov.f32 	%f2105, 0f3FC90FDB;
	sub.rn.f32 	%f2106, %f2105, %f2104;
	selp.f32 	%f2107, %f2106, %f2104, %p474;
	setp.lt.s32 	%p475, %r1781, 0;
	mov.f32 	%f2108, 0f40490FDB;
	sub.rn.f32 	%f2109, %f2108, %f2107;
	selp.f32 	%f2110, %f2109, %f2107, %p475;
	mov.b32 	%r868, %f2110;
	mov.b32 	%r869, %f3654;
	and.b32  	%r870, %r869, -2147483648;
	or.b32  	%r871, %r870, %r868;
	mov.b32 	%f2111, %r871;
	add.rn.f32 	%f2112, %f2091, %f424;
	setp.num.f32 	%p476, %f2112, %f2112;
	selp.f32 	%f3654, %f2111, %f2112, %p476;
$L__BB0_315:                            // %__nv_atan2f.exit602
                                        //   in Loop: Header=BB0_3 Depth=1
	abs.f32 	%f430, %f3663;
	abs.f32 	%f2115, %f8;
	setp.neu.f32 	%p478, %f430, 0f00000000;
	setp.neu.f32 	%p479, %f2115, 0f00000000;
	or.pred  	%p480, %p478, %p479;
	@%p480 bra 	$L__BB0_317;
// %bb.316:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r884, %f3663;
	shr.s32 	%r885, %r884, 31;
	and.b32  	%r886, %r885, 1078530011;
	mov.b32 	%f2138, %r886;
	copysign.f32 	%f3655, %f8, %f2138;
	bra.uni 	$L__BB0_502;
$L__BB0_317:                            //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p481, %f430, 0f7F800000;
	setp.neu.f32 	%p482, %f2115, 0f7F800000;
	or.pred  	%p483, %p481, %p482;
	mov.b32 	%r1782, %f3663;
	@%p483 bra 	$L__BB0_319;
// %bb.318:                             //   in Loop: Header=BB0_3 Depth=1
	setp.lt.s32 	%p487, %r1782, 0;
	selp.b32 	%r883, 1075235812, 1061752795, %p487;
	mov.b32 	%f2137, %r883;
	copysign.f32 	%f3655, %f8, %f2137;
	bra.uni 	$L__BB0_502;
$L__BB0_319:                            // %__nv_fmaxf.exit.i605
                                        //   in Loop: Header=BB0_3 Depth=1
	max.f32 	%f2116, %f2115, %f430;
	min.f32 	%f2117, %f2115, %f430;
	div.rn.f32 	%f2118, %f2117, %f2116;
	mul.rn.f32 	%f2119, %f2118, %f2118;
	fma.rn.f32 	%f2120, %f2119, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2121, %f2120, %f2119, 0fC0D21907;
	mul.rn.f32 	%f2122, %f2119, %f2121;
	mul.rn.f32 	%f2123, %f2118, %f2122;
	add.rn.f32 	%f2124, %f2119, 0f41355DC0;
	fma.rn.f32 	%f2125, %f2124, %f2119, 0f41E6BD60;
	fma.rn.f32 	%f2126, %f2125, %f2119, 0f419D92C8;
	rcp.rn.f32 	%f2127, %f2126;
	fma.rn.f32 	%f2128, %f2123, %f2127, %f2118;
	setp.gt.f32 	%p484, %f2115, %f430;
	mov.f32 	%f2129, 0f3FC90FDB;
	sub.rn.f32 	%f2130, %f2129, %f2128;
	selp.f32 	%f2131, %f2130, %f2128, %p484;
	setp.lt.s32 	%p485, %r1782, 0;
	mov.f32 	%f2132, 0f40490FDB;
	sub.rn.f32 	%f2133, %f2132, %f2131;
	selp.f32 	%f2134, %f2133, %f2131, %p485;
	mov.b32 	%r878, %f2134;
	mov.b32 	%r879, %f8;
	and.b32  	%r880, %r879, -2147483648;
	or.b32  	%r881, %r880, %r878;
	mov.b32 	%f2135, %r881;
	add.rn.f32 	%f2136, %f2115, %f430;
	setp.num.f32 	%p486, %f2136, %f2136;
	selp.f32 	%f3655, %f2135, %f2136, %p486;
	bra.uni 	$L__BB0_502;
$L__BB0_326:                            // %__nv_isinff.exit8.i.i
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p211, %f440, 0f7F800000;
	@%p211 bra 	$L__BB0_328;
// %bb.327:                             // %__nv_fabsf.exit5.i.i
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.gt.f32 	%p214, %f436, 0f3F800000;
	selp.b32 	%r685, 2139095040, 0, %p214;
	setp.lt.f32 	%p215, %f3656, 0f00000000;
	xor.b32  	%r686, %r685, 2139095040;
	selp.b32 	%r687, %r686, %r685, %p215;
	setp.eq.f32 	%p216, %f3648, 0fBF800000;
	mov.b32 	%f1343, %r687;
	selp.f32 	%f3727, 0f3F800000, %f1343, %p216;
	bra.uni 	$L__BB0_330;
$L__BB0_135:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r146, %f3648;
	shr.u32 	%r147, %r146, 23;
	and.b32  	%r1160, %r147, 224;
	add.s32 	%r1161, %r1160, -128;
	shl.b32 	%r1162, %r146, 8;
	or.b32  	%r148, %r1162, -2147483648;
	shr.u32 	%r149, %r1161, 5;
	mov.b32 	%r1814, 0;
	mov.b64 	%rd510, 0;
$L__BB0_136:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd333, __cudart_i2opi_f;
	add.s64 	%rd334, %rd333, %rd510;
	ld.global.nc.u32 	%r1165, [%rd334];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1163, %r1165, %r148, %r1814;
	madc.hi.u32     %r1814, %r1165, %r148,  0;
	}
	// end inline asm
	add.s64 	%rd335, %rd16, %rd510;
	st.local.u32 	[%rd335], %r1163;
	add.s64 	%rd510, %rd510, 4;
	cvt.u32.u64 	%r1168, %rd510;
	setp.ne.s32 	%p610, %r1168, 24;
	@%p610 bra 	$L__BB0_136;
// %bb.137:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd16+24], %r1814;
	mul.wide.u32 	%rd336, %r149, 4;
	sub.s64 	%rd71, %rd16, %rd336;
	ld.local.u32 	%r152, [%rd71+24];
	ld.local.u32 	%r153, [%rd71+20];
	and.b32  	%r1170, %r146, 260046848;
	setp.eq.s32 	%p611, %r1170, 0;
	mov.u32 	%r1815, %r153;
	@%p611 bra 	$L__BB0_139;
// %bb.138:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1171, [%rd71+16];
	shf.l.wrap.b32 	%r1815, %r1171, %r153, %r147;
$L__BB0_139:                            // %__internal_trig_reduction_slowpath.exit.i.i.i175
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1172, %r153, %r152, %r147;
	shr.u32 	%r1173, %r1172, 30;
	shf.l.wrap.b32 	%r1174, %r1815, %r1172, 2;
	shl.b32 	%r1175, %r1815, 2;
	shr.u32 	%r1176, %r1174, 31;
	add.s32 	%r1177, %r1176, %r1173;
	neg.s32 	%r1178, %r1177;
	setp.lt.s32 	%p612, %r146, 0;
	selp.b32 	%r1816, %r1178, %r1177, %p612;
	xor.b32  	%r1179, %r1174, %r146;
	shr.s32 	%r1180, %r1174, 31;
	xor.b32  	%r1181, %r1180, %r1174;
	xor.b32  	%r1182, %r1180, %r1175;
	cvt.u64.u32 	%rd337, %r1181;
	shl.b64 	%rd338, %rd337, 32;
	cvt.u64.u32 	%rd339, %r1182;
	or.b64  	%rd340, %rd338, %rd339;
	cvt.rn.f64.s64 	%fd17, %rd340;
	mul.rn.f64 	%fd18, %fd17, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2668, %fd18;
	neg.f32 	%f2669, %f2668;
	setp.lt.s32 	%p613, %r1179, 0;
	selp.f32 	%f3695, %f2669, %f2668, %p613;
$L__BB0_140:                            // %__nv_cosf.exit
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2671, %f3695, %f3695;
	mul.rn.f32 	%f2683, %f3649, 0f3F22F983;
	cvt.rni.s32.f32 	%r1819, %f2683;
	cvt.rn.f32.s32 	%f2684, %r1819;
	fma.rn.f32 	%f2685, %f2684, 0fBFC90FDA, %f3649;
	fma.rn.f32 	%f2686, %f2684, 0fB3A22168, %f2685;
	fma.rn.f32 	%f3696, %f2684, 0fA7C234C5, %f2686;
	abs.f32 	%f251, %f3649;
	setp.ltu.f32 	%p616, %f251, 0f47CE4780;
	@%p616 bra 	$L__BB0_148;
// %bb.141:                             // %__nv_isinff.exit.i.i.i192
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p617, %f251, 0f7F800000;
	@%p617 bra 	$L__BB0_143;
// %bb.142:                             // %__nv_fmul_rn.exit.i.i.i212
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2689, 0f00000000;
	mul.rn.f32 	%f3696, %f3649, %f2689;
	mov.b32 	%r1819, 0;
	bra.uni 	$L__BB0_148;
$L__BB0_143:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r159, %f3649;
	shr.u32 	%r160, %r159, 23;
	and.b32  	%r1188, %r160, 224;
	add.s32 	%r1189, %r1188, -128;
	shl.b32 	%r1190, %r159, 8;
	or.b32  	%r161, %r1190, -2147483648;
	shr.u32 	%r162, %r1189, 5;
	mov.b32 	%r1817, 0;
	mov.b64 	%rd511, 0;
$L__BB0_144:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd342, __cudart_i2opi_f;
	add.s64 	%rd343, %rd342, %rd511;
	ld.global.nc.u32 	%r1193, [%rd343];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1191, %r1193, %r161, %r1817;
	madc.hi.u32     %r1817, %r1193, %r161,  0;
	}
	// end inline asm
	add.s64 	%rd344, %rd15, %rd511;
	st.local.u32 	[%rd344], %r1191;
	add.s64 	%rd511, %rd511, 4;
	cvt.u32.u64 	%r1196, %rd511;
	setp.ne.s32 	%p618, %r1196, 24;
	@%p618 bra 	$L__BB0_144;
// %bb.145:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd15+24], %r1817;
	mul.wide.u32 	%rd345, %r162, 4;
	sub.s64 	%rd74, %rd15, %rd345;
	ld.local.u32 	%r165, [%rd74+24];
	ld.local.u32 	%r166, [%rd74+20];
	and.b32  	%r1198, %r159, 260046848;
	setp.eq.s32 	%p619, %r1198, 0;
	mov.u32 	%r1818, %r166;
	@%p619 bra 	$L__BB0_147;
// %bb.146:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1199, [%rd74+16];
	shf.l.wrap.b32 	%r1818, %r1199, %r166, %r160;
$L__BB0_147:                            // %__internal_trig_reduction_slowpath.exit.i.i.i196
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1200, %r166, %r165, %r160;
	shr.u32 	%r1201, %r1200, 30;
	shf.l.wrap.b32 	%r1202, %r1818, %r1200, 2;
	shl.b32 	%r1203, %r1818, 2;
	shr.u32 	%r1204, %r1202, 31;
	add.s32 	%r1205, %r1204, %r1201;
	neg.s32 	%r1206, %r1205;
	setp.lt.s32 	%p620, %r159, 0;
	selp.b32 	%r1819, %r1206, %r1205, %p620;
	xor.b32  	%r1207, %r1202, %r159;
	shr.s32 	%r1208, %r1202, 31;
	xor.b32  	%r1209, %r1208, %r1202;
	xor.b32  	%r1210, %r1208, %r1203;
	cvt.u64.u32 	%rd346, %r1209;
	shl.b64 	%rd347, %rd346, 32;
	cvt.u64.u32 	%rd348, %r1210;
	or.b64  	%rd349, %rd347, %rd348;
	cvt.rn.f64.s64 	%fd19, %rd349;
	mul.rn.f64 	%fd20, %fd19, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2687, %fd20;
	neg.f32 	%f2688, %f2687;
	setp.lt.s32 	%p621, %r1207, 0;
	selp.f32 	%f3696, %f2688, %f2687, %p621;
$L__BB0_148:                            // %__nv_cosf.exit213
                                        //   in Loop: Header=BB0_3 Depth=1
	fma.rn.f32 	%f2674, %f2671, 0f37CBAC00, 0fBAB607ED;
	mul.rn.f32 	%f2690, %f3696, %f3696;
	fma.rn.f32 	%f2693, %f2690, 0f37CBAC00, 0fBAB607ED;
	mul.rn.f32 	%f2702, %f3650, 0f3F22F983;
	cvt.rni.s32.f32 	%r1822, %f2702;
	cvt.rn.f32.s32 	%f2703, %r1822;
	fma.rn.f32 	%f2704, %f2703, 0fBFC90FDA, %f3650;
	fma.rn.f32 	%f2705, %f2703, 0fB3A22168, %f2704;
	fma.rn.f32 	%f3697, %f2703, 0fA7C234C5, %f2705;
	abs.f32 	%f257, %f3650;
	setp.ltu.f32 	%p624, %f257, 0f47CE4780;
	@%p624 bra 	$L__BB0_156;
// %bb.149:                             // %__nv_isinff.exit.i.i.i215
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p625, %f257, 0f7F800000;
	@%p625 bra 	$L__BB0_151;
// %bb.150:                             // %__nv_fmul_rn.exit.i.i.i235
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2708, 0f00000000;
	mul.rn.f32 	%f3697, %f3650, %f2708;
	mov.b32 	%r1822, 0;
	bra.uni 	$L__BB0_156;
$L__BB0_151:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r172, %f3650;
	shr.u32 	%r173, %r172, 23;
	and.b32  	%r1216, %r173, 224;
	add.s32 	%r1217, %r1216, -128;
	shl.b32 	%r1218, %r172, 8;
	or.b32  	%r174, %r1218, -2147483648;
	shr.u32 	%r175, %r1217, 5;
	mov.b32 	%r1820, 0;
	mov.b64 	%rd512, 0;
$L__BB0_152:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd351, __cudart_i2opi_f;
	add.s64 	%rd352, %rd351, %rd512;
	ld.global.nc.u32 	%r1221, [%rd352];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1219, %r1221, %r174, %r1820;
	madc.hi.u32     %r1820, %r1221, %r174,  0;
	}
	// end inline asm
	add.s64 	%rd353, %rd14, %rd512;
	st.local.u32 	[%rd353], %r1219;
	add.s64 	%rd512, %rd512, 4;
	cvt.u32.u64 	%r1224, %rd512;
	setp.ne.s32 	%p626, %r1224, 24;
	@%p626 bra 	$L__BB0_152;
// %bb.153:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd14+24], %r1820;
	mul.wide.u32 	%rd354, %r175, 4;
	sub.s64 	%rd77, %rd14, %rd354;
	ld.local.u32 	%r178, [%rd77+24];
	ld.local.u32 	%r179, [%rd77+20];
	and.b32  	%r1226, %r172, 260046848;
	setp.eq.s32 	%p627, %r1226, 0;
	mov.u32 	%r1821, %r179;
	@%p627 bra 	$L__BB0_155;
// %bb.154:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1227, [%rd77+16];
	shf.l.wrap.b32 	%r1821, %r1227, %r179, %r173;
$L__BB0_155:                            // %__internal_trig_reduction_slowpath.exit.i.i.i219
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1228, %r179, %r178, %r173;
	shr.u32 	%r1229, %r1228, 30;
	shf.l.wrap.b32 	%r1230, %r1821, %r1228, 2;
	shl.b32 	%r1231, %r1821, 2;
	shr.u32 	%r1232, %r1230, 31;
	add.s32 	%r1233, %r1232, %r1229;
	neg.s32 	%r1234, %r1233;
	setp.lt.s32 	%p628, %r172, 0;
	selp.b32 	%r1822, %r1234, %r1233, %p628;
	xor.b32  	%r1235, %r1230, %r172;
	shr.s32 	%r1236, %r1230, 31;
	xor.b32  	%r1237, %r1236, %r1230;
	xor.b32  	%r1238, %r1236, %r1231;
	cvt.u64.u32 	%rd355, %r1237;
	shl.b64 	%rd356, %rd355, 32;
	cvt.u64.u32 	%rd357, %r1238;
	or.b64  	%rd358, %rd356, %rd357;
	cvt.rn.f64.s64 	%fd21, %rd358;
	mul.rn.f64 	%fd22, %fd21, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2706, %fd22;
	neg.f32 	%f2707, %f2706;
	setp.lt.s32 	%p629, %r1235, 0;
	selp.f32 	%f3697, %f2707, %f2706, %p629;
$L__BB0_156:                            // %__nv_cosf.exit236
                                        //   in Loop: Header=BB0_3 Depth=1
	and.b32  	%r1185, %r1816, 1;
	setp.eq.b32 	%p614, %r1185, 1;
	selp.f32 	%f2675, 0fB94D4153, %f2674, %p614;
	and.b32  	%r1213, %r1819, 1;
	setp.eq.b32 	%p622, %r1213, 1;
	selp.f32 	%f2694, 0fB94D4153, %f2693, %p622;
	mul.rn.f32 	%f2709, %f3697, %f3697;
	and.b32  	%r1241, %r1822, 1;
	setp.eq.b32 	%p630, %r1241, 1;
	fma.rn.f32 	%f2712, %f2709, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2713, 0fB94D4153, %f2712, %p630;
	mul.rn.f32 	%f2721, %f3651, 0f3F22F983;
	cvt.rni.s32.f32 	%r1825, %f2721;
	cvt.rn.f32.s32 	%f2722, %r1825;
	fma.rn.f32 	%f2723, %f2722, 0fBFC90FDA, %f3651;
	fma.rn.f32 	%f2724, %f2722, 0fB3A22168, %f2723;
	fma.rn.f32 	%f3698, %f2722, 0fA7C234C5, %f2724;
	abs.f32 	%f263, %f3651;
	setp.ltu.f32 	%p632, %f263, 0f47CE4780;
	@%p632 bra 	$L__BB0_164;
// %bb.157:                             // %__nv_isinff.exit.i.i.i238
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p633, %f263, 0f7F800000;
	@%p633 bra 	$L__BB0_159;
// %bb.158:                             // %__nv_fmul_rn.exit.i.i.i258
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2727, 0f00000000;
	mul.rn.f32 	%f3698, %f3651, %f2727;
	mov.b32 	%r1825, 0;
	bra.uni 	$L__BB0_164;
$L__BB0_159:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r185, %f3651;
	shr.u32 	%r186, %r185, 23;
	and.b32  	%r1244, %r186, 224;
	add.s32 	%r1245, %r1244, -128;
	shl.b32 	%r1246, %r185, 8;
	or.b32  	%r187, %r1246, -2147483648;
	shr.u32 	%r188, %r1245, 5;
	mov.b32 	%r1823, 0;
	mov.b64 	%rd513, 0;
$L__BB0_160:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd360, __cudart_i2opi_f;
	add.s64 	%rd361, %rd360, %rd513;
	ld.global.nc.u32 	%r1249, [%rd361];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1247, %r1249, %r187, %r1823;
	madc.hi.u32     %r1823, %r1249, %r187,  0;
	}
	// end inline asm
	add.s64 	%rd362, %rd13, %rd513;
	st.local.u32 	[%rd362], %r1247;
	add.s64 	%rd513, %rd513, 4;
	cvt.u32.u64 	%r1252, %rd513;
	setp.ne.s32 	%p634, %r1252, 24;
	@%p634 bra 	$L__BB0_160;
// %bb.161:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd13+24], %r1823;
	mul.wide.u32 	%rd363, %r188, 4;
	sub.s64 	%rd80, %rd13, %rd363;
	ld.local.u32 	%r191, [%rd80+24];
	ld.local.u32 	%r192, [%rd80+20];
	and.b32  	%r1254, %r185, 260046848;
	setp.eq.s32 	%p635, %r1254, 0;
	mov.u32 	%r1824, %r192;
	@%p635 bra 	$L__BB0_163;
// %bb.162:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1255, [%rd80+16];
	shf.l.wrap.b32 	%r1824, %r1255, %r192, %r186;
$L__BB0_163:                            // %__internal_trig_reduction_slowpath.exit.i.i.i242
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1256, %r192, %r191, %r186;
	shr.u32 	%r1257, %r1256, 30;
	shf.l.wrap.b32 	%r1258, %r1824, %r1256, 2;
	shl.b32 	%r1259, %r1824, 2;
	shr.u32 	%r1260, %r1258, 31;
	add.s32 	%r1261, %r1260, %r1257;
	neg.s32 	%r1262, %r1261;
	setp.lt.s32 	%p636, %r185, 0;
	selp.b32 	%r1825, %r1262, %r1261, %p636;
	xor.b32  	%r1263, %r1258, %r185;
	shr.s32 	%r1264, %r1258, 31;
	xor.b32  	%r1265, %r1264, %r1258;
	xor.b32  	%r1266, %r1264, %r1259;
	cvt.u64.u32 	%rd364, %r1265;
	shl.b64 	%rd365, %rd364, 32;
	cvt.u64.u32 	%rd366, %r1266;
	or.b64  	%rd367, %rd365, %rd366;
	cvt.rn.f64.s64 	%fd23, %rd367;
	mul.rn.f64 	%fd24, %fd23, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2725, %fd24;
	neg.f32 	%f2726, %f2725;
	setp.lt.s32 	%p637, %r1263, 0;
	selp.f32 	%f3698, %f2726, %f2725, %p637;
$L__BB0_164:                            // %__nv_cosf.exit259
                                        //   in Loop: Header=BB0_3 Depth=1
	selp.f32 	%f2672, %f3695, 0f3F800000, %p614;
	selp.f32 	%f2676, 0f3C0885E4, 0f3D2AAABB, %p614;
	fma.rn.f32 	%f2677, %f2675, %f2671, %f2676;
	selp.f32 	%f2691, %f3696, 0f3F800000, %p622;
	selp.f32 	%f2695, 0f3C0885E4, 0f3D2AAABB, %p622;
	fma.rn.f32 	%f2696, %f2694, %f2690, %f2695;
	selp.f32 	%f2710, %f3697, 0f3F800000, %p630;
	selp.f32 	%f2714, 0f3C0885E4, 0f3D2AAABB, %p630;
	fma.rn.f32 	%f2715, %f2713, %f2709, %f2714;
	mul.rn.f32 	%f2728, %f3698, %f3698;
	and.b32  	%r1269, %r1825, 1;
	setp.eq.b32 	%p638, %r1269, 1;
	selp.f32 	%f2729, %f3698, 0f3F800000, %p638;
	fma.rn.f32 	%f2731, %f2728, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2732, 0fB94D4153, %f2731, %p638;
	selp.f32 	%f2733, 0f3C0885E4, 0f3D2AAABB, %p638;
	fma.rn.f32 	%f2734, %f2732, %f2728, %f2733;
	mul.rn.f32 	%f2740, %f3652, 0f3F22F983;
	cvt.rni.s32.f32 	%r1828, %f2740;
	cvt.rn.f32.s32 	%f2741, %r1828;
	fma.rn.f32 	%f2742, %f2741, 0fBFC90FDA, %f3652;
	fma.rn.f32 	%f2743, %f2741, 0fB3A22168, %f2742;
	fma.rn.f32 	%f3699, %f2741, 0fA7C234C5, %f2743;
	abs.f32 	%f269, %f3652;
	setp.ltu.f32 	%p640, %f269, 0f47CE4780;
	@%p640 bra 	$L__BB0_172;
// %bb.165:                             // %__nv_isinff.exit.i.i.i261
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p641, %f269, 0f7F800000;
	@%p641 bra 	$L__BB0_167;
// %bb.166:                             // %__nv_fmul_rn.exit.i.i.i281
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2746, 0f00000000;
	mul.rn.f32 	%f3699, %f3652, %f2746;
	mov.b32 	%r1828, 0;
	bra.uni 	$L__BB0_172;
$L__BB0_167:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r198, %f3652;
	shr.u32 	%r199, %r198, 23;
	and.b32  	%r1272, %r199, 224;
	add.s32 	%r1273, %r1272, -128;
	shl.b32 	%r1274, %r198, 8;
	or.b32  	%r200, %r1274, -2147483648;
	shr.u32 	%r201, %r1273, 5;
	mov.b32 	%r1826, 0;
	mov.b64 	%rd514, 0;
$L__BB0_168:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd369, __cudart_i2opi_f;
	add.s64 	%rd370, %rd369, %rd514;
	ld.global.nc.u32 	%r1277, [%rd370];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1275, %r1277, %r200, %r1826;
	madc.hi.u32     %r1826, %r1277, %r200,  0;
	}
	// end inline asm
	add.s64 	%rd371, %rd12, %rd514;
	st.local.u32 	[%rd371], %r1275;
	add.s64 	%rd514, %rd514, 4;
	cvt.u32.u64 	%r1280, %rd514;
	setp.ne.s32 	%p642, %r1280, 24;
	@%p642 bra 	$L__BB0_168;
// %bb.169:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd12+24], %r1826;
	mul.wide.u32 	%rd372, %r201, 4;
	sub.s64 	%rd83, %rd12, %rd372;
	ld.local.u32 	%r204, [%rd83+24];
	ld.local.u32 	%r205, [%rd83+20];
	and.b32  	%r1282, %r198, 260046848;
	setp.eq.s32 	%p643, %r1282, 0;
	mov.u32 	%r1827, %r205;
	@%p643 bra 	$L__BB0_171;
// %bb.170:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1283, [%rd83+16];
	shf.l.wrap.b32 	%r1827, %r1283, %r205, %r199;
$L__BB0_171:                            // %__internal_trig_reduction_slowpath.exit.i.i.i265
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1284, %r205, %r204, %r199;
	shr.u32 	%r1285, %r1284, 30;
	shf.l.wrap.b32 	%r1286, %r1827, %r1284, 2;
	shl.b32 	%r1287, %r1827, 2;
	shr.u32 	%r1288, %r1286, 31;
	add.s32 	%r1289, %r1288, %r1285;
	neg.s32 	%r1290, %r1289;
	setp.lt.s32 	%p644, %r198, 0;
	selp.b32 	%r1828, %r1290, %r1289, %p644;
	xor.b32  	%r1291, %r1286, %r198;
	shr.s32 	%r1292, %r1286, 31;
	xor.b32  	%r1293, %r1292, %r1286;
	xor.b32  	%r1294, %r1292, %r1287;
	cvt.u64.u32 	%rd373, %r1293;
	shl.b64 	%rd374, %rd373, 32;
	cvt.u64.u32 	%rd375, %r1294;
	or.b64  	%rd376, %rd374, %rd375;
	cvt.rn.f64.s64 	%fd25, %rd376;
	mul.rn.f64 	%fd26, %fd25, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2744, %fd26;
	neg.f32 	%f2745, %f2744;
	setp.lt.s32 	%p645, %r1291, 0;
	selp.f32 	%f3699, %f2745, %f2744, %p645;
$L__BB0_172:                            // %__nv_cosf.exit282
                                        //   in Loop: Header=BB0_3 Depth=1
	fma.rn.f32 	%f2673, %f2671, %f2672, 0f00000000;
	selp.f32 	%f2678, 0fBE2AAAA8, 0fBEFFFFFF, %p614;
	fma.rn.f32 	%f2679, %f2677, %f2671, %f2678;
	fma.rn.f32 	%f2692, %f2690, %f2691, 0f00000000;
	selp.f32 	%f2697, 0fBE2AAAA8, 0fBEFFFFFF, %p622;
	fma.rn.f32 	%f2698, %f2696, %f2690, %f2697;
	fma.rn.f32 	%f2711, %f2709, %f2710, 0f00000000;
	selp.f32 	%f2716, 0fBE2AAAA8, 0fBEFFFFFF, %p630;
	fma.rn.f32 	%f2717, %f2715, %f2709, %f2716;
	fma.rn.f32 	%f2730, %f2728, %f2729, 0f00000000;
	selp.f32 	%f2735, 0fBE2AAAA8, 0fBEFFFFFF, %p638;
	fma.rn.f32 	%f2736, %f2734, %f2728, %f2735;
	mul.rn.f32 	%f2747, %f3699, %f3699;
	and.b32  	%r1297, %r1828, 1;
	setp.eq.b32 	%p646, %r1297, 1;
	selp.f32 	%f2748, %f3699, 0f3F800000, %p646;
	fma.rn.f32 	%f2749, %f2747, %f2748, 0f00000000;
	fma.rn.f32 	%f2750, %f2747, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2751, 0fB94D4153, %f2750, %p646;
	selp.f32 	%f2752, 0f3C0885E4, 0f3D2AAABB, %p646;
	fma.rn.f32 	%f2753, %f2751, %f2747, %f2752;
	selp.f32 	%f2754, 0fBE2AAAA8, 0fBEFFFFFF, %p646;
	fma.rn.f32 	%f2755, %f2753, %f2747, %f2754;
	mul.rn.f32 	%f2759, %f3653, 0f3F22F983;
	cvt.rni.s32.f32 	%r1831, %f2759;
	cvt.rn.f32.s32 	%f2760, %r1831;
	fma.rn.f32 	%f2761, %f2760, 0fBFC90FDA, %f3653;
	fma.rn.f32 	%f2762, %f2760, 0fB3A22168, %f2761;
	fma.rn.f32 	%f3700, %f2760, 0fA7C234C5, %f2762;
	abs.f32 	%f275, %f3653;
	setp.ltu.f32 	%p648, %f275, 0f47CE4780;
	@%p648 bra 	$L__BB0_180;
// %bb.173:                             // %__nv_isinff.exit.i.i.i284
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p649, %f275, 0f7F800000;
	@%p649 bra 	$L__BB0_175;
// %bb.174:                             // %__nv_fmul_rn.exit.i.i.i304
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2765, 0f00000000;
	mul.rn.f32 	%f3700, %f3653, %f2765;
	mov.b32 	%r1831, 0;
	bra.uni 	$L__BB0_180;
$L__BB0_175:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r211, %f3653;
	shr.u32 	%r212, %r211, 23;
	and.b32  	%r1300, %r212, 224;
	add.s32 	%r1301, %r1300, -128;
	shl.b32 	%r1302, %r211, 8;
	or.b32  	%r213, %r1302, -2147483648;
	shr.u32 	%r214, %r1301, 5;
	mov.b32 	%r1829, 0;
	mov.b64 	%rd515, 0;
$L__BB0_176:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd378, __cudart_i2opi_f;
	add.s64 	%rd379, %rd378, %rd515;
	ld.global.nc.u32 	%r1305, [%rd379];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1303, %r1305, %r213, %r1829;
	madc.hi.u32     %r1829, %r1305, %r213,  0;
	}
	// end inline asm
	add.s64 	%rd380, %rd11, %rd515;
	st.local.u32 	[%rd380], %r1303;
	add.s64 	%rd515, %rd515, 4;
	cvt.u32.u64 	%r1308, %rd515;
	setp.ne.s32 	%p650, %r1308, 24;
	@%p650 bra 	$L__BB0_176;
// %bb.177:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd11+24], %r1829;
	mul.wide.u32 	%rd381, %r214, 4;
	sub.s64 	%rd86, %rd11, %rd381;
	ld.local.u32 	%r217, [%rd86+24];
	ld.local.u32 	%r218, [%rd86+20];
	and.b32  	%r1310, %r211, 260046848;
	setp.eq.s32 	%p651, %r1310, 0;
	mov.u32 	%r1830, %r218;
	@%p651 bra 	$L__BB0_179;
// %bb.178:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1311, [%rd86+16];
	shf.l.wrap.b32 	%r1830, %r1311, %r218, %r212;
$L__BB0_179:                            // %__internal_trig_reduction_slowpath.exit.i.i.i288
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1312, %r218, %r217, %r212;
	shr.u32 	%r1313, %r1312, 30;
	shf.l.wrap.b32 	%r1314, %r1830, %r1312, 2;
	shl.b32 	%r1315, %r1830, 2;
	shr.u32 	%r1316, %r1314, 31;
	add.s32 	%r1317, %r1316, %r1313;
	neg.s32 	%r1318, %r1317;
	setp.lt.s32 	%p652, %r211, 0;
	selp.b32 	%r1831, %r1318, %r1317, %p652;
	xor.b32  	%r1319, %r1314, %r211;
	shr.s32 	%r1320, %r1314, 31;
	xor.b32  	%r1321, %r1320, %r1314;
	xor.b32  	%r1322, %r1320, %r1315;
	cvt.u64.u32 	%rd382, %r1321;
	shl.b64 	%rd383, %rd382, 32;
	cvt.u64.u32 	%rd384, %r1322;
	or.b64  	%rd385, %rd383, %rd384;
	cvt.rn.f64.s64 	%fd27, %rd385;
	mul.rn.f64 	%fd28, %fd27, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2763, %fd28;
	neg.f32 	%f2764, %f2763;
	setp.lt.s32 	%p653, %r1319, 0;
	selp.f32 	%f3700, %f2764, %f2763, %p653;
$L__BB0_180:                            // %__nv_cosf.exit305
                                        //   in Loop: Header=BB0_3 Depth=1
	fma.rn.f32 	%f2680, %f2679, %f2673, %f2672;
	fma.rn.f32 	%f2699, %f2698, %f2692, %f2691;
	fma.rn.f32 	%f2718, %f2717, %f2711, %f2710;
	fma.rn.f32 	%f2737, %f2736, %f2730, %f2729;
	fma.rn.f32 	%f2756, %f2755, %f2749, %f2748;
	mul.rn.f32 	%f2766, %f3700, %f3700;
	and.b32  	%r1325, %r1831, 1;
	setp.eq.b32 	%p654, %r1325, 1;
	selp.f32 	%f2767, %f3700, 0f3F800000, %p654;
	fma.rn.f32 	%f2768, %f2766, %f2767, 0f00000000;
	fma.rn.f32 	%f2769, %f2766, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2770, 0fB94D4153, %f2769, %p654;
	selp.f32 	%f2771, 0f3C0885E4, 0f3D2AAABB, %p654;
	fma.rn.f32 	%f2772, %f2770, %f2766, %f2771;
	selp.f32 	%f2773, 0fBE2AAAA8, 0fBEFFFFFF, %p654;
	fma.rn.f32 	%f2774, %f2772, %f2766, %f2773;
	fma.rn.f32 	%f2775, %f2774, %f2768, %f2767;
	mul.rn.f32 	%f2778, %f3654, 0f3F22F983;
	cvt.rni.s32.f32 	%r1834, %f2778;
	cvt.rn.f32.s32 	%f2779, %r1834;
	fma.rn.f32 	%f2780, %f2779, 0fBFC90FDA, %f3654;
	fma.rn.f32 	%f2781, %f2779, 0fB3A22168, %f2780;
	fma.rn.f32 	%f3701, %f2779, 0fA7C234C5, %f2781;
	abs.f32 	%f281, %f3654;
	setp.ltu.f32 	%p656, %f281, 0f47CE4780;
	@%p656 bra 	$L__BB0_188;
// %bb.181:                             // %__nv_isinff.exit.i.i.i307
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p657, %f281, 0f7F800000;
	@%p657 bra 	$L__BB0_183;
// %bb.182:                             // %__nv_fmul_rn.exit.i.i.i327
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2784, 0f00000000;
	mul.rn.f32 	%f3701, %f3654, %f2784;
	mov.b32 	%r1834, 0;
	bra.uni 	$L__BB0_188;
$L__BB0_183:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r224, %f3654;
	shr.u32 	%r225, %r224, 23;
	and.b32  	%r1328, %r225, 224;
	add.s32 	%r1329, %r1328, -128;
	shl.b32 	%r1330, %r224, 8;
	or.b32  	%r226, %r1330, -2147483648;
	shr.u32 	%r227, %r1329, 5;
	mov.b32 	%r1832, 0;
	mov.b64 	%rd516, 0;
$L__BB0_184:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd387, __cudart_i2opi_f;
	add.s64 	%rd388, %rd387, %rd516;
	ld.global.nc.u32 	%r1333, [%rd388];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1331, %r1333, %r226, %r1832;
	madc.hi.u32     %r1832, %r1333, %r226,  0;
	}
	// end inline asm
	add.s64 	%rd389, %rd10, %rd516;
	st.local.u32 	[%rd389], %r1331;
	add.s64 	%rd516, %rd516, 4;
	cvt.u32.u64 	%r1336, %rd516;
	setp.ne.s32 	%p658, %r1336, 24;
	@%p658 bra 	$L__BB0_184;
// %bb.185:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd10+24], %r1832;
	mul.wide.u32 	%rd390, %r227, 4;
	sub.s64 	%rd89, %rd10, %rd390;
	ld.local.u32 	%r230, [%rd89+24];
	ld.local.u32 	%r231, [%rd89+20];
	and.b32  	%r1338, %r224, 260046848;
	setp.eq.s32 	%p659, %r1338, 0;
	mov.u32 	%r1833, %r231;
	@%p659 bra 	$L__BB0_187;
// %bb.186:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1339, [%rd89+16];
	shf.l.wrap.b32 	%r1833, %r1339, %r231, %r225;
$L__BB0_187:                            // %__internal_trig_reduction_slowpath.exit.i.i.i311
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1340, %r231, %r230, %r225;
	shr.u32 	%r1341, %r1340, 30;
	shf.l.wrap.b32 	%r1342, %r1833, %r1340, 2;
	shl.b32 	%r1343, %r1833, 2;
	shr.u32 	%r1344, %r1342, 31;
	add.s32 	%r1345, %r1344, %r1341;
	neg.s32 	%r1346, %r1345;
	setp.lt.s32 	%p660, %r224, 0;
	selp.b32 	%r1834, %r1346, %r1345, %p660;
	xor.b32  	%r1347, %r1342, %r224;
	shr.s32 	%r1348, %r1342, 31;
	xor.b32  	%r1349, %r1348, %r1342;
	xor.b32  	%r1350, %r1348, %r1343;
	cvt.u64.u32 	%rd391, %r1349;
	shl.b64 	%rd392, %rd391, 32;
	cvt.u64.u32 	%rd393, %r1350;
	or.b64  	%rd394, %rd392, %rd393;
	cvt.rn.f64.s64 	%fd29, %rd394;
	mul.rn.f64 	%fd30, %fd29, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2782, %fd30;
	neg.f32 	%f2783, %f2782;
	setp.lt.s32 	%p661, %r1347, 0;
	selp.f32 	%f3701, %f2783, %f2782, %p661;
$L__BB0_188:                            // %__nv_cosf.exit328
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2681, 0f00000000;
	sub.rn.f32 	%f2682, %f2681, %f2680;
	sub.rn.f32 	%f2701, %f2681, %f2699;
	mov.f32 	%f2719, 0f00000000;
	sub.rn.f32 	%f2720, %f2719, %f2718;
	sub.rn.f32 	%f2739, %f2719, %f2737;
	mov.f32 	%f2757, 0f00000000;
	sub.rn.f32 	%f2758, %f2757, %f2756;
	sub.rn.f32 	%f2777, %f2757, %f2775;
	mul.rn.f32 	%f2785, %f3701, %f3701;
	and.b32  	%r1353, %r1834, 1;
	setp.eq.b32 	%p662, %r1353, 1;
	selp.f32 	%f2786, %f3701, 0f3F800000, %p662;
	fma.rn.f32 	%f2787, %f2785, %f2786, 0f00000000;
	fma.rn.f32 	%f2788, %f2785, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2789, 0fB94D4153, %f2788, %p662;
	selp.f32 	%f2790, 0f3C0885E4, 0f3D2AAABB, %p662;
	fma.rn.f32 	%f2791, %f2789, %f2785, %f2790;
	selp.f32 	%f2792, 0fBE2AAAA8, 0fBEFFFFFF, %p662;
	fma.rn.f32 	%f2793, %f2791, %f2785, %f2792;
	fma.rn.f32 	%f2794, %f2793, %f2787, %f2786;
	mov.f32 	%f2795, 0f00000000;
	sub.rn.f32 	%f2796, %f2795, %f2794;
	mul.rn.f32 	%f2797, %f8, 0f3F22F983;
	cvt.rni.s32.f32 	%r1837, %f2797;
	cvt.rn.f32.s32 	%f2798, %r1837;
	fma.rn.f32 	%f2799, %f2798, 0fBFC90FDA, %f8;
	fma.rn.f32 	%f2800, %f2798, 0fB3A22168, %f2799;
	fma.rn.f32 	%f3702, %f2798, 0fA7C234C5, %f2800;
	abs.f32 	%f287, %f8;
	setp.ltu.f32 	%p664, %f287, 0f47CE4780;
	@%p664 bra 	$L__BB0_196;
// %bb.189:                             // %__nv_isinff.exit.i.i.i330
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p665, %f287, 0f7F800000;
	@%p665 bra 	$L__BB0_191;
// %bb.190:                             // %__nv_fmul_rn.exit.i.i.i350
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2803, 0f00000000;
	mul.rn.f32 	%f3702, %f8, %f2803;
	mov.b32 	%r1837, 0;
	bra.uni 	$L__BB0_196;
$L__BB0_191:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r237, %f8;
	shr.u32 	%r238, %r237, 23;
	and.b32  	%r1356, %r238, 224;
	add.s32 	%r1357, %r1356, -128;
	shl.b32 	%r1358, %r237, 8;
	or.b32  	%r239, %r1358, -2147483648;
	shr.u32 	%r240, %r1357, 5;
	mov.b32 	%r1835, 0;
	mov.b64 	%rd517, 0;
$L__BB0_192:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd396, __cudart_i2opi_f;
	add.s64 	%rd397, %rd396, %rd517;
	ld.global.nc.u32 	%r1361, [%rd397];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1359, %r1361, %r239, %r1835;
	madc.hi.u32     %r1835, %r1361, %r239,  0;
	}
	// end inline asm
	add.s64 	%rd398, %rd9, %rd517;
	st.local.u32 	[%rd398], %r1359;
	add.s64 	%rd517, %rd517, 4;
	cvt.u32.u64 	%r1364, %rd517;
	setp.ne.s32 	%p666, %r1364, 24;
	@%p666 bra 	$L__BB0_192;
// %bb.193:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd9+24], %r1835;
	mul.wide.u32 	%rd399, %r240, 4;
	sub.s64 	%rd92, %rd9, %rd399;
	ld.local.u32 	%r243, [%rd92+24];
	ld.local.u32 	%r244, [%rd92+20];
	and.b32  	%r1366, %r237, 260046848;
	setp.eq.s32 	%p667, %r1366, 0;
	mov.u32 	%r1836, %r244;
	@%p667 bra 	$L__BB0_195;
// %bb.194:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1367, [%rd92+16];
	shf.l.wrap.b32 	%r1836, %r1367, %r244, %r238;
$L__BB0_195:                            // %__internal_trig_reduction_slowpath.exit.i.i.i334
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1368, %r244, %r243, %r238;
	shr.u32 	%r1369, %r1368, 30;
	shf.l.wrap.b32 	%r1370, %r1836, %r1368, 2;
	shl.b32 	%r1371, %r1836, 2;
	shr.u32 	%r1372, %r1370, 31;
	add.s32 	%r1373, %r1372, %r1369;
	neg.s32 	%r1374, %r1373;
	setp.lt.s32 	%p668, %r237, 0;
	selp.b32 	%r1837, %r1374, %r1373, %p668;
	xor.b32  	%r1375, %r1370, %r237;
	shr.s32 	%r1376, %r1370, 31;
	xor.b32  	%r1377, %r1376, %r1370;
	xor.b32  	%r1378, %r1376, %r1371;
	cvt.u64.u32 	%rd400, %r1377;
	shl.b64 	%rd401, %rd400, 32;
	cvt.u64.u32 	%rd402, %r1378;
	or.b64  	%rd403, %rd401, %rd402;
	cvt.rn.f64.s64 	%fd31, %rd403;
	mul.rn.f64 	%fd32, %fd31, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2801, %fd32;
	neg.f32 	%f2802, %f2801;
	setp.lt.s32 	%p669, %r1375, 0;
	selp.f32 	%f3702, %f2802, %f2801, %p669;
$L__BB0_196:                            // %__nv_cosf.exit351
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r1184, %r1816, 1;
	and.b32  	%r1186, %r1184, 2;
	setp.eq.s32 	%p615, %r1186, 0;
	selp.f32 	%f3648, %f2680, %f2682, %p615;
	add.s32 	%r1212, %r1819, 1;
	and.b32  	%r1214, %r1212, 2;
	setp.eq.s32 	%p623, %r1214, 0;
	selp.f32 	%f3649, %f2699, %f2701, %p623;
	add.s32 	%r1240, %r1822, 1;
	and.b32  	%r1242, %r1240, 2;
	setp.eq.s32 	%p631, %r1242, 0;
	selp.f32 	%f3650, %f2718, %f2720, %p631;
	add.s32 	%r1268, %r1825, 1;
	and.b32  	%r1270, %r1268, 2;
	setp.eq.s32 	%p639, %r1270, 0;
	selp.f32 	%f3651, %f2737, %f2739, %p639;
	add.s32 	%r1296, %r1828, 1;
	and.b32  	%r1298, %r1296, 2;
	setp.eq.s32 	%p647, %r1298, 0;
	selp.f32 	%f3652, %f2756, %f2758, %p647;
	add.s32 	%r1324, %r1831, 1;
	and.b32  	%r1326, %r1324, 2;
	setp.eq.s32 	%p655, %r1326, 0;
	selp.f32 	%f3653, %f2775, %f2777, %p655;
	add.s32 	%r1352, %r1834, 1;
	and.b32  	%r1354, %r1352, 2;
	setp.eq.s32 	%p663, %r1354, 0;
	selp.f32 	%f3654, %f2794, %f2796, %p663;
	add.s32 	%r1380, %r1837, 1;
	mul.rn.f32 	%f2804, %f3702, %f3702;
	and.b32  	%r1381, %r1837, 1;
	setp.eq.b32 	%p670, %r1381, 1;
	selp.f32 	%f2805, %f3702, 0f3F800000, %p670;
	fma.rn.f32 	%f2806, %f2804, %f2805, 0f00000000;
	fma.rn.f32 	%f2807, %f2804, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2808, 0fB94D4153, %f2807, %p670;
	selp.f32 	%f2809, 0f3C0885E4, 0f3D2AAABB, %p670;
	fma.rn.f32 	%f2810, %f2808, %f2804, %f2809;
	selp.f32 	%f2811, 0fBE2AAAA8, 0fBEFFFFFF, %p670;
	fma.rn.f32 	%f2812, %f2810, %f2804, %f2811;
	fma.rn.f32 	%f2813, %f2812, %f2806, %f2805;
	and.b32  	%r1382, %r1380, 2;
	setp.eq.s32 	%p671, %r1382, 0;
	sub.rn.f32 	%f2815, %f2795, %f2813;
	selp.f32 	%f3655, %f2813, %f2815, %p671;
	bra.uni 	$L__BB0_502;
$L__BB0_70:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r42, %f3648;
	shr.u32 	%r43, %r42, 23;
	and.b32  	%r1384, %r43, 224;
	add.s32 	%r1385, %r1384, -128;
	shl.b32 	%r1386, %r42, 8;
	or.b32  	%r44, %r1386, -2147483648;
	shr.u32 	%r45, %r1385, 5;
	mov.b32 	%r1790, 0;
	mov.b64 	%rd502, 0;
$L__BB0_71:                             //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd405, __cudart_i2opi_f;
	add.s64 	%rd406, %rd405, %rd502;
	ld.global.nc.u32 	%r1389, [%rd406];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1387, %r1389, %r44, %r1790;
	madc.hi.u32     %r1790, %r1389, %r44,  0;
	}
	// end inline asm
	add.s64 	%rd407, %rd24, %rd502;
	st.local.u32 	[%rd407], %r1387;
	add.s64 	%rd502, %rd502, 4;
	cvt.u32.u64 	%r1392, %rd502;
	setp.ne.s32 	%p674, %r1392, 24;
	@%p674 bra 	$L__BB0_71;
// %bb.72:                              //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd24+24], %r1790;
	mul.wide.u32 	%rd408, %r45, 4;
	sub.s64 	%rd47, %rd24, %rd408;
	ld.local.u32 	%r48, [%rd47+24];
	ld.local.u32 	%r49, [%rd47+20];
	and.b32  	%r1394, %r42, 260046848;
	setp.eq.s32 	%p675, %r1394, 0;
	mov.u32 	%r1791, %r49;
	@%p675 bra 	$L__BB0_74;
// %bb.73:                              //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1395, [%rd47+16];
	shf.l.wrap.b32 	%r1791, %r1395, %r49, %r43;
$L__BB0_74:                             // %__internal_trig_reduction_slowpath.exit.i.i.i
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1396, %r49, %r48, %r43;
	shr.u32 	%r1397, %r1396, 30;
	shf.l.wrap.b32 	%r1398, %r1791, %r1396, 2;
	shl.b32 	%r1399, %r1791, 2;
	shr.u32 	%r1400, %r1398, 31;
	add.s32 	%r1401, %r1400, %r1397;
	neg.s32 	%r1402, %r1401;
	setp.lt.s32 	%p676, %r42, 0;
	selp.b32 	%r1792, %r1402, %r1401, %p676;
	xor.b32  	%r1403, %r1398, %r42;
	shr.s32 	%r1404, %r1398, 31;
	xor.b32  	%r1405, %r1404, %r1398;
	xor.b32  	%r1406, %r1404, %r1399;
	cvt.u64.u32 	%rd409, %r1405;
	shl.b64 	%rd410, %rd409, 32;
	cvt.u64.u32 	%rd411, %r1406;
	or.b64  	%rd412, %rd410, %rd411;
	cvt.rn.f64.s64 	%fd33, %rd412;
	mul.rn.f64 	%fd34, %fd33, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2820, %fd34;
	neg.f32 	%f2821, %f2820;
	setp.lt.s32 	%p677, %r1403, 0;
	selp.f32 	%f3687, %f2821, %f2820, %p677;
$L__BB0_75:                             // %__nv_sinf.exit
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2823, %f3687, %f3687;
	mul.rn.f32 	%f2835, %f3649, 0f3F22F983;
	cvt.rni.s32.f32 	%r1795, %f2835;
	cvt.rn.f32.s32 	%f2836, %r1795;
	fma.rn.f32 	%f2837, %f2836, 0fBFC90FDA, %f3649;
	fma.rn.f32 	%f2838, %f2836, 0fB3A22168, %f2837;
	fma.rn.f32 	%f3688, %f2836, 0fA7C234C5, %f2838;
	abs.f32 	%f203, %f3649;
	setp.ltu.f32 	%p680, %f203, 0f47CE4780;
	@%p680 bra 	$L__BB0_83;
// %bb.76:                              // %__nv_isinff.exit.i.i.i10
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p681, %f203, 0f7F800000;
	@%p681 bra 	$L__BB0_78;
// %bb.77:                              // %__nv_fmul_rn.exit.i.i.i30
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2841, 0f00000000;
	mul.rn.f32 	%f3688, %f3649, %f2841;
	mov.b32 	%r1795, 0;
	bra.uni 	$L__BB0_83;
$L__BB0_78:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r55, %f3649;
	shr.u32 	%r56, %r55, 23;
	and.b32  	%r1411, %r56, 224;
	add.s32 	%r1412, %r1411, -128;
	shl.b32 	%r1413, %r55, 8;
	or.b32  	%r57, %r1413, -2147483648;
	shr.u32 	%r58, %r1412, 5;
	mov.b32 	%r1793, 0;
	mov.b64 	%rd503, 0;
$L__BB0_79:                             //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd414, __cudart_i2opi_f;
	add.s64 	%rd415, %rd414, %rd503;
	ld.global.nc.u32 	%r1416, [%rd415];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1414, %r1416, %r57, %r1793;
	madc.hi.u32     %r1793, %r1416, %r57,  0;
	}
	// end inline asm
	add.s64 	%rd416, %rd23, %rd503;
	st.local.u32 	[%rd416], %r1414;
	add.s64 	%rd503, %rd503, 4;
	cvt.u32.u64 	%r1419, %rd503;
	setp.ne.s32 	%p682, %r1419, 24;
	@%p682 bra 	$L__BB0_79;
// %bb.80:                              //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd23+24], %r1793;
	mul.wide.u32 	%rd417, %r58, 4;
	sub.s64 	%rd50, %rd23, %rd417;
	ld.local.u32 	%r61, [%rd50+24];
	ld.local.u32 	%r62, [%rd50+20];
	and.b32  	%r1421, %r55, 260046848;
	setp.eq.s32 	%p683, %r1421, 0;
	mov.u32 	%r1794, %r62;
	@%p683 bra 	$L__BB0_82;
// %bb.81:                              //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1422, [%rd50+16];
	shf.l.wrap.b32 	%r1794, %r1422, %r62, %r56;
$L__BB0_82:                             // %__internal_trig_reduction_slowpath.exit.i.i.i14
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1423, %r62, %r61, %r56;
	shr.u32 	%r1424, %r1423, 30;
	shf.l.wrap.b32 	%r1425, %r1794, %r1423, 2;
	shl.b32 	%r1426, %r1794, 2;
	shr.u32 	%r1427, %r1425, 31;
	add.s32 	%r1428, %r1427, %r1424;
	neg.s32 	%r1429, %r1428;
	setp.lt.s32 	%p684, %r55, 0;
	selp.b32 	%r1795, %r1429, %r1428, %p684;
	xor.b32  	%r1430, %r1425, %r55;
	shr.s32 	%r1431, %r1425, 31;
	xor.b32  	%r1432, %r1431, %r1425;
	xor.b32  	%r1433, %r1431, %r1426;
	cvt.u64.u32 	%rd418, %r1432;
	shl.b64 	%rd419, %rd418, 32;
	cvt.u64.u32 	%rd420, %r1433;
	or.b64  	%rd421, %rd419, %rd420;
	cvt.rn.f64.s64 	%fd35, %rd421;
	mul.rn.f64 	%fd36, %fd35, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2839, %fd36;
	neg.f32 	%f2840, %f2839;
	setp.lt.s32 	%p685, %r1430, 0;
	selp.f32 	%f3688, %f2840, %f2839, %p685;
$L__BB0_83:                             // %__nv_sinf.exit31
                                        //   in Loop: Header=BB0_3 Depth=1
	fma.rn.f32 	%f2826, %f2823, 0f37CBAC00, 0fBAB607ED;
	mul.rn.f32 	%f2842, %f3688, %f3688;
	fma.rn.f32 	%f2845, %f2842, 0f37CBAC00, 0fBAB607ED;
	mul.rn.f32 	%f2854, %f3650, 0f3F22F983;
	cvt.rni.s32.f32 	%r1798, %f2854;
	cvt.rn.f32.s32 	%f2855, %r1798;
	fma.rn.f32 	%f2856, %f2855, 0fBFC90FDA, %f3650;
	fma.rn.f32 	%f2857, %f2855, 0fB3A22168, %f2856;
	fma.rn.f32 	%f3689, %f2855, 0fA7C234C5, %f2857;
	abs.f32 	%f209, %f3650;
	setp.ltu.f32 	%p688, %f209, 0f47CE4780;
	@%p688 bra 	$L__BB0_91;
// %bb.84:                              // %__nv_isinff.exit.i.i.i33
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p689, %f209, 0f7F800000;
	@%p689 bra 	$L__BB0_86;
// %bb.85:                              // %__nv_fmul_rn.exit.i.i.i53
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2860, 0f00000000;
	mul.rn.f32 	%f3689, %f3650, %f2860;
	mov.b32 	%r1798, 0;
	bra.uni 	$L__BB0_91;
$L__BB0_86:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r68, %f3650;
	shr.u32 	%r69, %r68, 23;
	and.b32  	%r1438, %r69, 224;
	add.s32 	%r1439, %r1438, -128;
	shl.b32 	%r1440, %r68, 8;
	or.b32  	%r70, %r1440, -2147483648;
	shr.u32 	%r71, %r1439, 5;
	mov.b32 	%r1796, 0;
	mov.b64 	%rd504, 0;
$L__BB0_87:                             //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd423, __cudart_i2opi_f;
	add.s64 	%rd424, %rd423, %rd504;
	ld.global.nc.u32 	%r1443, [%rd424];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1441, %r1443, %r70, %r1796;
	madc.hi.u32     %r1796, %r1443, %r70,  0;
	}
	// end inline asm
	add.s64 	%rd425, %rd22, %rd504;
	st.local.u32 	[%rd425], %r1441;
	add.s64 	%rd504, %rd504, 4;
	cvt.u32.u64 	%r1446, %rd504;
	setp.ne.s32 	%p690, %r1446, 24;
	@%p690 bra 	$L__BB0_87;
// %bb.88:                              //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd22+24], %r1796;
	mul.wide.u32 	%rd426, %r71, 4;
	sub.s64 	%rd53, %rd22, %rd426;
	ld.local.u32 	%r74, [%rd53+24];
	ld.local.u32 	%r75, [%rd53+20];
	and.b32  	%r1448, %r68, 260046848;
	setp.eq.s32 	%p691, %r1448, 0;
	mov.u32 	%r1797, %r75;
	@%p691 bra 	$L__BB0_90;
// %bb.89:                              //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1449, [%rd53+16];
	shf.l.wrap.b32 	%r1797, %r1449, %r75, %r69;
$L__BB0_90:                             // %__internal_trig_reduction_slowpath.exit.i.i.i37
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1450, %r75, %r74, %r69;
	shr.u32 	%r1451, %r1450, 30;
	shf.l.wrap.b32 	%r1452, %r1797, %r1450, 2;
	shl.b32 	%r1453, %r1797, 2;
	shr.u32 	%r1454, %r1452, 31;
	add.s32 	%r1455, %r1454, %r1451;
	neg.s32 	%r1456, %r1455;
	setp.lt.s32 	%p692, %r68, 0;
	selp.b32 	%r1798, %r1456, %r1455, %p692;
	xor.b32  	%r1457, %r1452, %r68;
	shr.s32 	%r1458, %r1452, 31;
	xor.b32  	%r1459, %r1458, %r1452;
	xor.b32  	%r1460, %r1458, %r1453;
	cvt.u64.u32 	%rd427, %r1459;
	shl.b64 	%rd428, %rd427, 32;
	cvt.u64.u32 	%rd429, %r1460;
	or.b64  	%rd430, %rd428, %rd429;
	cvt.rn.f64.s64 	%fd37, %rd430;
	mul.rn.f64 	%fd38, %fd37, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2858, %fd38;
	neg.f32 	%f2859, %f2858;
	setp.lt.s32 	%p693, %r1457, 0;
	selp.f32 	%f3689, %f2859, %f2858, %p693;
$L__BB0_91:                             // %__nv_sinf.exit54
                                        //   in Loop: Header=BB0_3 Depth=1
	and.b32  	%r1408, %r1792, 1;
	setp.eq.b32 	%p678, %r1408, 1;
	selp.f32 	%f2827, %f2826, 0fB94D4153, %p678;
	and.b32  	%r1435, %r1795, 1;
	setp.eq.b32 	%p686, %r1435, 1;
	selp.f32 	%f2846, %f2845, 0fB94D4153, %p686;
	mul.rn.f32 	%f2861, %f3689, %f3689;
	and.b32  	%r1462, %r1798, 1;
	setp.eq.b32 	%p694, %r1462, 1;
	fma.rn.f32 	%f2864, %f2861, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2865, %f2864, 0fB94D4153, %p694;
	mul.rn.f32 	%f2873, %f3651, 0f3F22F983;
	cvt.rni.s32.f32 	%r1801, %f2873;
	cvt.rn.f32.s32 	%f2874, %r1801;
	fma.rn.f32 	%f2875, %f2874, 0fBFC90FDA, %f3651;
	fma.rn.f32 	%f2876, %f2874, 0fB3A22168, %f2875;
	fma.rn.f32 	%f3690, %f2874, 0fA7C234C5, %f2876;
	abs.f32 	%f215, %f3651;
	setp.ltu.f32 	%p696, %f215, 0f47CE4780;
	@%p696 bra 	$L__BB0_99;
// %bb.92:                              // %__nv_isinff.exit.i.i.i56
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p697, %f215, 0f7F800000;
	@%p697 bra 	$L__BB0_94;
// %bb.93:                              // %__nv_fmul_rn.exit.i.i.i76
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2879, 0f00000000;
	mul.rn.f32 	%f3690, %f3651, %f2879;
	mov.b32 	%r1801, 0;
	bra.uni 	$L__BB0_99;
$L__BB0_94:                             //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r81, %f3651;
	shr.u32 	%r82, %r81, 23;
	and.b32  	%r1465, %r82, 224;
	add.s32 	%r1466, %r1465, -128;
	shl.b32 	%r1467, %r81, 8;
	or.b32  	%r83, %r1467, -2147483648;
	shr.u32 	%r84, %r1466, 5;
	mov.b32 	%r1799, 0;
	mov.b64 	%rd505, 0;
$L__BB0_95:                             //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd432, __cudart_i2opi_f;
	add.s64 	%rd433, %rd432, %rd505;
	ld.global.nc.u32 	%r1470, [%rd433];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1468, %r1470, %r83, %r1799;
	madc.hi.u32     %r1799, %r1470, %r83,  0;
	}
	// end inline asm
	add.s64 	%rd434, %rd21, %rd505;
	st.local.u32 	[%rd434], %r1468;
	add.s64 	%rd505, %rd505, 4;
	cvt.u32.u64 	%r1473, %rd505;
	setp.ne.s32 	%p698, %r1473, 24;
	@%p698 bra 	$L__BB0_95;
// %bb.96:                              //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd21+24], %r1799;
	mul.wide.u32 	%rd435, %r84, 4;
	sub.s64 	%rd56, %rd21, %rd435;
	ld.local.u32 	%r87, [%rd56+24];
	ld.local.u32 	%r88, [%rd56+20];
	and.b32  	%r1475, %r81, 260046848;
	setp.eq.s32 	%p699, %r1475, 0;
	mov.u32 	%r1800, %r88;
	@%p699 bra 	$L__BB0_98;
// %bb.97:                              //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1476, [%rd56+16];
	shf.l.wrap.b32 	%r1800, %r1476, %r88, %r82;
$L__BB0_98:                             // %__internal_trig_reduction_slowpath.exit.i.i.i60
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1477, %r88, %r87, %r82;
	shr.u32 	%r1478, %r1477, 30;
	shf.l.wrap.b32 	%r1479, %r1800, %r1477, 2;
	shl.b32 	%r1480, %r1800, 2;
	shr.u32 	%r1481, %r1479, 31;
	add.s32 	%r1482, %r1481, %r1478;
	neg.s32 	%r1483, %r1482;
	setp.lt.s32 	%p700, %r81, 0;
	selp.b32 	%r1801, %r1483, %r1482, %p700;
	xor.b32  	%r1484, %r1479, %r81;
	shr.s32 	%r1485, %r1479, 31;
	xor.b32  	%r1486, %r1485, %r1479;
	xor.b32  	%r1487, %r1485, %r1480;
	cvt.u64.u32 	%rd436, %r1486;
	shl.b64 	%rd437, %rd436, 32;
	cvt.u64.u32 	%rd438, %r1487;
	or.b64  	%rd439, %rd437, %rd438;
	cvt.rn.f64.s64 	%fd39, %rd439;
	mul.rn.f64 	%fd40, %fd39, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2877, %fd40;
	neg.f32 	%f2878, %f2877;
	setp.lt.s32 	%p701, %r1484, 0;
	selp.f32 	%f3690, %f2878, %f2877, %p701;
$L__BB0_99:                             // %__nv_sinf.exit77
                                        //   in Loop: Header=BB0_3 Depth=1
	selp.f32 	%f2824, 0f3F800000, %f3687, %p678;
	selp.f32 	%f2828, 0f3D2AAABB, 0f3C0885E4, %p678;
	fma.rn.f32 	%f2829, %f2827, %f2823, %f2828;
	selp.f32 	%f2843, 0f3F800000, %f3688, %p686;
	selp.f32 	%f2847, 0f3D2AAABB, 0f3C0885E4, %p686;
	fma.rn.f32 	%f2848, %f2846, %f2842, %f2847;
	selp.f32 	%f2862, 0f3F800000, %f3689, %p694;
	selp.f32 	%f2866, 0f3D2AAABB, 0f3C0885E4, %p694;
	fma.rn.f32 	%f2867, %f2865, %f2861, %f2866;
	mul.rn.f32 	%f2880, %f3690, %f3690;
	and.b32  	%r1489, %r1801, 1;
	setp.eq.b32 	%p702, %r1489, 1;
	selp.f32 	%f2881, 0f3F800000, %f3690, %p702;
	fma.rn.f32 	%f2883, %f2880, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2884, %f2883, 0fB94D4153, %p702;
	selp.f32 	%f2885, 0f3D2AAABB, 0f3C0885E4, %p702;
	fma.rn.f32 	%f2886, %f2884, %f2880, %f2885;
	mul.rn.f32 	%f2892, %f3652, 0f3F22F983;
	cvt.rni.s32.f32 	%r1804, %f2892;
	cvt.rn.f32.s32 	%f2893, %r1804;
	fma.rn.f32 	%f2894, %f2893, 0fBFC90FDA, %f3652;
	fma.rn.f32 	%f2895, %f2893, 0fB3A22168, %f2894;
	fma.rn.f32 	%f3691, %f2893, 0fA7C234C5, %f2895;
	abs.f32 	%f221, %f3652;
	setp.ltu.f32 	%p704, %f221, 0f47CE4780;
	@%p704 bra 	$L__BB0_107;
// %bb.100:                             // %__nv_isinff.exit.i.i.i79
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p705, %f221, 0f7F800000;
	@%p705 bra 	$L__BB0_102;
// %bb.101:                             // %__nv_fmul_rn.exit.i.i.i99
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2898, 0f00000000;
	mul.rn.f32 	%f3691, %f3652, %f2898;
	mov.b32 	%r1804, 0;
	bra.uni 	$L__BB0_107;
$L__BB0_102:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r94, %f3652;
	shr.u32 	%r95, %r94, 23;
	and.b32  	%r1492, %r95, 224;
	add.s32 	%r1493, %r1492, -128;
	shl.b32 	%r1494, %r94, 8;
	or.b32  	%r96, %r1494, -2147483648;
	shr.u32 	%r97, %r1493, 5;
	mov.b32 	%r1802, 0;
	mov.b64 	%rd506, 0;
$L__BB0_103:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd441, __cudart_i2opi_f;
	add.s64 	%rd442, %rd441, %rd506;
	ld.global.nc.u32 	%r1497, [%rd442];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1495, %r1497, %r96, %r1802;
	madc.hi.u32     %r1802, %r1497, %r96,  0;
	}
	// end inline asm
	add.s64 	%rd443, %rd20, %rd506;
	st.local.u32 	[%rd443], %r1495;
	add.s64 	%rd506, %rd506, 4;
	cvt.u32.u64 	%r1500, %rd506;
	setp.ne.s32 	%p706, %r1500, 24;
	@%p706 bra 	$L__BB0_103;
// %bb.104:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd20+24], %r1802;
	mul.wide.u32 	%rd444, %r97, 4;
	sub.s64 	%rd59, %rd20, %rd444;
	ld.local.u32 	%r100, [%rd59+24];
	ld.local.u32 	%r101, [%rd59+20];
	and.b32  	%r1502, %r94, 260046848;
	setp.eq.s32 	%p707, %r1502, 0;
	mov.u32 	%r1803, %r101;
	@%p707 bra 	$L__BB0_106;
// %bb.105:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1503, [%rd59+16];
	shf.l.wrap.b32 	%r1803, %r1503, %r101, %r95;
$L__BB0_106:                            // %__internal_trig_reduction_slowpath.exit.i.i.i83
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1504, %r101, %r100, %r95;
	shr.u32 	%r1505, %r1504, 30;
	shf.l.wrap.b32 	%r1506, %r1803, %r1504, 2;
	shl.b32 	%r1507, %r1803, 2;
	shr.u32 	%r1508, %r1506, 31;
	add.s32 	%r1509, %r1508, %r1505;
	neg.s32 	%r1510, %r1509;
	setp.lt.s32 	%p708, %r94, 0;
	selp.b32 	%r1804, %r1510, %r1509, %p708;
	xor.b32  	%r1511, %r1506, %r94;
	shr.s32 	%r1512, %r1506, 31;
	xor.b32  	%r1513, %r1512, %r1506;
	xor.b32  	%r1514, %r1512, %r1507;
	cvt.u64.u32 	%rd445, %r1513;
	shl.b64 	%rd446, %rd445, 32;
	cvt.u64.u32 	%rd447, %r1514;
	or.b64  	%rd448, %rd446, %rd447;
	cvt.rn.f64.s64 	%fd41, %rd448;
	mul.rn.f64 	%fd42, %fd41, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2896, %fd42;
	neg.f32 	%f2897, %f2896;
	setp.lt.s32 	%p709, %r1511, 0;
	selp.f32 	%f3691, %f2897, %f2896, %p709;
$L__BB0_107:                            // %__nv_sinf.exit100
                                        //   in Loop: Header=BB0_3 Depth=1
	fma.rn.f32 	%f2825, %f2823, %f2824, 0f00000000;
	selp.f32 	%f2830, 0fBEFFFFFF, 0fBE2AAAA8, %p678;
	fma.rn.f32 	%f2831, %f2829, %f2823, %f2830;
	fma.rn.f32 	%f2844, %f2842, %f2843, 0f00000000;
	selp.f32 	%f2849, 0fBEFFFFFF, 0fBE2AAAA8, %p686;
	fma.rn.f32 	%f2850, %f2848, %f2842, %f2849;
	fma.rn.f32 	%f2863, %f2861, %f2862, 0f00000000;
	selp.f32 	%f2868, 0fBEFFFFFF, 0fBE2AAAA8, %p694;
	fma.rn.f32 	%f2869, %f2867, %f2861, %f2868;
	fma.rn.f32 	%f2882, %f2880, %f2881, 0f00000000;
	selp.f32 	%f2887, 0fBEFFFFFF, 0fBE2AAAA8, %p702;
	fma.rn.f32 	%f2888, %f2886, %f2880, %f2887;
	mul.rn.f32 	%f2899, %f3691, %f3691;
	and.b32  	%r1516, %r1804, 1;
	setp.eq.b32 	%p710, %r1516, 1;
	selp.f32 	%f2900, 0f3F800000, %f3691, %p710;
	fma.rn.f32 	%f2901, %f2899, %f2900, 0f00000000;
	fma.rn.f32 	%f2902, %f2899, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2903, %f2902, 0fB94D4153, %p710;
	selp.f32 	%f2904, 0f3D2AAABB, 0f3C0885E4, %p710;
	fma.rn.f32 	%f2905, %f2903, %f2899, %f2904;
	selp.f32 	%f2906, 0fBEFFFFFF, 0fBE2AAAA8, %p710;
	fma.rn.f32 	%f2907, %f2905, %f2899, %f2906;
	mul.rn.f32 	%f2911, %f3653, 0f3F22F983;
	cvt.rni.s32.f32 	%r1807, %f2911;
	cvt.rn.f32.s32 	%f2912, %r1807;
	fma.rn.f32 	%f2913, %f2912, 0fBFC90FDA, %f3653;
	fma.rn.f32 	%f2914, %f2912, 0fB3A22168, %f2913;
	fma.rn.f32 	%f3692, %f2912, 0fA7C234C5, %f2914;
	abs.f32 	%f227, %f3653;
	setp.ltu.f32 	%p712, %f227, 0f47CE4780;
	@%p712 bra 	$L__BB0_115;
// %bb.108:                             // %__nv_isinff.exit.i.i.i102
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p713, %f227, 0f7F800000;
	@%p713 bra 	$L__BB0_110;
// %bb.109:                             // %__nv_fmul_rn.exit.i.i.i122
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2917, 0f00000000;
	mul.rn.f32 	%f3692, %f3653, %f2917;
	mov.b32 	%r1807, 0;
	bra.uni 	$L__BB0_115;
$L__BB0_110:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r107, %f3653;
	shr.u32 	%r108, %r107, 23;
	and.b32  	%r1519, %r108, 224;
	add.s32 	%r1520, %r1519, -128;
	shl.b32 	%r1521, %r107, 8;
	or.b32  	%r109, %r1521, -2147483648;
	shr.u32 	%r110, %r1520, 5;
	mov.b32 	%r1805, 0;
	mov.b64 	%rd507, 0;
$L__BB0_111:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd450, __cudart_i2opi_f;
	add.s64 	%rd451, %rd450, %rd507;
	ld.global.nc.u32 	%r1524, [%rd451];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1522, %r1524, %r109, %r1805;
	madc.hi.u32     %r1805, %r1524, %r109,  0;
	}
	// end inline asm
	add.s64 	%rd452, %rd19, %rd507;
	st.local.u32 	[%rd452], %r1522;
	add.s64 	%rd507, %rd507, 4;
	cvt.u32.u64 	%r1527, %rd507;
	setp.ne.s32 	%p714, %r1527, 24;
	@%p714 bra 	$L__BB0_111;
// %bb.112:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd19+24], %r1805;
	mul.wide.u32 	%rd453, %r110, 4;
	sub.s64 	%rd62, %rd19, %rd453;
	ld.local.u32 	%r113, [%rd62+24];
	ld.local.u32 	%r114, [%rd62+20];
	and.b32  	%r1529, %r107, 260046848;
	setp.eq.s32 	%p715, %r1529, 0;
	mov.u32 	%r1806, %r114;
	@%p715 bra 	$L__BB0_114;
// %bb.113:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1530, [%rd62+16];
	shf.l.wrap.b32 	%r1806, %r1530, %r114, %r108;
$L__BB0_114:                            // %__internal_trig_reduction_slowpath.exit.i.i.i106
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1531, %r114, %r113, %r108;
	shr.u32 	%r1532, %r1531, 30;
	shf.l.wrap.b32 	%r1533, %r1806, %r1531, 2;
	shl.b32 	%r1534, %r1806, 2;
	shr.u32 	%r1535, %r1533, 31;
	add.s32 	%r1536, %r1535, %r1532;
	neg.s32 	%r1537, %r1536;
	setp.lt.s32 	%p716, %r107, 0;
	selp.b32 	%r1807, %r1537, %r1536, %p716;
	xor.b32  	%r1538, %r1533, %r107;
	shr.s32 	%r1539, %r1533, 31;
	xor.b32  	%r1540, %r1539, %r1533;
	xor.b32  	%r1541, %r1539, %r1534;
	cvt.u64.u32 	%rd454, %r1540;
	shl.b64 	%rd455, %rd454, 32;
	cvt.u64.u32 	%rd456, %r1541;
	or.b64  	%rd457, %rd455, %rd456;
	cvt.rn.f64.s64 	%fd43, %rd457;
	mul.rn.f64 	%fd44, %fd43, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2915, %fd44;
	neg.f32 	%f2916, %f2915;
	setp.lt.s32 	%p717, %r1538, 0;
	selp.f32 	%f3692, %f2916, %f2915, %p717;
$L__BB0_115:                            // %__nv_sinf.exit123
                                        //   in Loop: Header=BB0_3 Depth=1
	fma.rn.f32 	%f2832, %f2831, %f2825, %f2824;
	fma.rn.f32 	%f2851, %f2850, %f2844, %f2843;
	fma.rn.f32 	%f2870, %f2869, %f2863, %f2862;
	fma.rn.f32 	%f2889, %f2888, %f2882, %f2881;
	fma.rn.f32 	%f2908, %f2907, %f2901, %f2900;
	mul.rn.f32 	%f2918, %f3692, %f3692;
	and.b32  	%r1543, %r1807, 1;
	setp.eq.b32 	%p718, %r1543, 1;
	selp.f32 	%f2919, 0f3F800000, %f3692, %p718;
	fma.rn.f32 	%f2920, %f2918, %f2919, 0f00000000;
	fma.rn.f32 	%f2921, %f2918, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2922, %f2921, 0fB94D4153, %p718;
	selp.f32 	%f2923, 0f3D2AAABB, 0f3C0885E4, %p718;
	fma.rn.f32 	%f2924, %f2922, %f2918, %f2923;
	selp.f32 	%f2925, 0fBEFFFFFF, 0fBE2AAAA8, %p718;
	fma.rn.f32 	%f2926, %f2924, %f2918, %f2925;
	fma.rn.f32 	%f2927, %f2926, %f2920, %f2919;
	mul.rn.f32 	%f2930, %f3654, 0f3F22F983;
	cvt.rni.s32.f32 	%r1810, %f2930;
	cvt.rn.f32.s32 	%f2931, %r1810;
	fma.rn.f32 	%f2932, %f2931, 0fBFC90FDA, %f3654;
	fma.rn.f32 	%f2933, %f2931, 0fB3A22168, %f2932;
	fma.rn.f32 	%f3693, %f2931, 0fA7C234C5, %f2933;
	abs.f32 	%f233, %f3654;
	setp.ltu.f32 	%p720, %f233, 0f47CE4780;
	@%p720 bra 	$L__BB0_123;
// %bb.116:                             // %__nv_isinff.exit.i.i.i125
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p721, %f233, 0f7F800000;
	@%p721 bra 	$L__BB0_118;
// %bb.117:                             // %__nv_fmul_rn.exit.i.i.i145
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2936, 0f00000000;
	mul.rn.f32 	%f3693, %f3654, %f2936;
	mov.b32 	%r1810, 0;
	bra.uni 	$L__BB0_123;
$L__BB0_118:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r120, %f3654;
	shr.u32 	%r121, %r120, 23;
	and.b32  	%r1546, %r121, 224;
	add.s32 	%r1547, %r1546, -128;
	shl.b32 	%r1548, %r120, 8;
	or.b32  	%r122, %r1548, -2147483648;
	shr.u32 	%r123, %r1547, 5;
	mov.b32 	%r1808, 0;
	mov.b64 	%rd508, 0;
$L__BB0_119:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd459, __cudart_i2opi_f;
	add.s64 	%rd460, %rd459, %rd508;
	ld.global.nc.u32 	%r1551, [%rd460];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1549, %r1551, %r122, %r1808;
	madc.hi.u32     %r1808, %r1551, %r122,  0;
	}
	// end inline asm
	add.s64 	%rd461, %rd18, %rd508;
	st.local.u32 	[%rd461], %r1549;
	add.s64 	%rd508, %rd508, 4;
	cvt.u32.u64 	%r1554, %rd508;
	setp.ne.s32 	%p722, %r1554, 24;
	@%p722 bra 	$L__BB0_119;
// %bb.120:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd18+24], %r1808;
	mul.wide.u32 	%rd462, %r123, 4;
	sub.s64 	%rd65, %rd18, %rd462;
	ld.local.u32 	%r126, [%rd65+24];
	ld.local.u32 	%r127, [%rd65+20];
	and.b32  	%r1556, %r120, 260046848;
	setp.eq.s32 	%p723, %r1556, 0;
	mov.u32 	%r1809, %r127;
	@%p723 bra 	$L__BB0_122;
// %bb.121:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1557, [%rd65+16];
	shf.l.wrap.b32 	%r1809, %r1557, %r127, %r121;
$L__BB0_122:                            // %__internal_trig_reduction_slowpath.exit.i.i.i129
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1558, %r127, %r126, %r121;
	shr.u32 	%r1559, %r1558, 30;
	shf.l.wrap.b32 	%r1560, %r1809, %r1558, 2;
	shl.b32 	%r1561, %r1809, 2;
	shr.u32 	%r1562, %r1560, 31;
	add.s32 	%r1563, %r1562, %r1559;
	neg.s32 	%r1564, %r1563;
	setp.lt.s32 	%p724, %r120, 0;
	selp.b32 	%r1810, %r1564, %r1563, %p724;
	xor.b32  	%r1565, %r1560, %r120;
	shr.s32 	%r1566, %r1560, 31;
	xor.b32  	%r1567, %r1566, %r1560;
	xor.b32  	%r1568, %r1566, %r1561;
	cvt.u64.u32 	%rd463, %r1567;
	shl.b64 	%rd464, %rd463, 32;
	cvt.u64.u32 	%rd465, %r1568;
	or.b64  	%rd466, %rd464, %rd465;
	cvt.rn.f64.s64 	%fd45, %rd466;
	mul.rn.f64 	%fd46, %fd45, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2934, %fd46;
	neg.f32 	%f2935, %f2934;
	setp.lt.s32 	%p725, %r1565, 0;
	selp.f32 	%f3693, %f2935, %f2934, %p725;
$L__BB0_123:                            // %__nv_sinf.exit146
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2833, 0f00000000;
	sub.rn.f32 	%f2834, %f2833, %f2832;
	sub.rn.f32 	%f2853, %f2833, %f2851;
	mov.f32 	%f2871, 0f00000000;
	sub.rn.f32 	%f2872, %f2871, %f2870;
	sub.rn.f32 	%f2891, %f2871, %f2889;
	mov.f32 	%f2909, 0f00000000;
	sub.rn.f32 	%f2910, %f2909, %f2908;
	sub.rn.f32 	%f2929, %f2909, %f2927;
	mul.rn.f32 	%f2937, %f3693, %f3693;
	and.b32  	%r1570, %r1810, 1;
	setp.eq.b32 	%p726, %r1570, 1;
	selp.f32 	%f2938, 0f3F800000, %f3693, %p726;
	fma.rn.f32 	%f2939, %f2937, %f2938, 0f00000000;
	fma.rn.f32 	%f2940, %f2937, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2941, %f2940, 0fB94D4153, %p726;
	selp.f32 	%f2942, 0f3D2AAABB, 0f3C0885E4, %p726;
	fma.rn.f32 	%f2943, %f2941, %f2937, %f2942;
	selp.f32 	%f2944, 0fBEFFFFFF, 0fBE2AAAA8, %p726;
	fma.rn.f32 	%f2945, %f2943, %f2937, %f2944;
	fma.rn.f32 	%f2946, %f2945, %f2939, %f2938;
	mov.f32 	%f2947, 0f00000000;
	sub.rn.f32 	%f2948, %f2947, %f2946;
	mul.rn.f32 	%f2949, %f8, 0f3F22F983;
	cvt.rni.s32.f32 	%r1813, %f2949;
	cvt.rn.f32.s32 	%f2950, %r1813;
	fma.rn.f32 	%f2951, %f2950, 0fBFC90FDA, %f8;
	fma.rn.f32 	%f2952, %f2950, 0fB3A22168, %f2951;
	fma.rn.f32 	%f3694, %f2950, 0fA7C234C5, %f2952;
	abs.f32 	%f239, %f8;
	setp.ltu.f32 	%p728, %f239, 0f47CE4780;
	@%p728 bra 	$L__BB0_131;
// %bb.124:                             // %__nv_isinff.exit.i.i.i148
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p729, %f239, 0f7F800000;
	@%p729 bra 	$L__BB0_126;
// %bb.125:                             // %__nv_fmul_rn.exit.i.i.i168
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2955, 0f00000000;
	mul.rn.f32 	%f3694, %f8, %f2955;
	mov.b32 	%r1813, 0;
	bra.uni 	$L__BB0_131;
$L__BB0_126:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r133, %f8;
	shr.u32 	%r134, %r133, 23;
	and.b32  	%r1573, %r134, 224;
	add.s32 	%r1574, %r1573, -128;
	shl.b32 	%r1575, %r133, 8;
	or.b32  	%r135, %r1575, -2147483648;
	shr.u32 	%r136, %r1574, 5;
	mov.b32 	%r1811, 0;
	mov.b64 	%rd509, 0;
$L__BB0_127:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd468, __cudart_i2opi_f;
	add.s64 	%rd469, %rd468, %rd509;
	ld.global.nc.u32 	%r1578, [%rd469];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1576, %r1578, %r135, %r1811;
	madc.hi.u32     %r1811, %r1578, %r135,  0;
	}
	// end inline asm
	add.s64 	%rd470, %rd17, %rd509;
	st.local.u32 	[%rd470], %r1576;
	add.s64 	%rd509, %rd509, 4;
	cvt.u32.u64 	%r1581, %rd509;
	setp.ne.s32 	%p730, %r1581, 24;
	@%p730 bra 	$L__BB0_127;
// %bb.128:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd17+24], %r1811;
	mul.wide.u32 	%rd471, %r136, 4;
	sub.s64 	%rd68, %rd17, %rd471;
	ld.local.u32 	%r139, [%rd68+24];
	ld.local.u32 	%r140, [%rd68+20];
	and.b32  	%r1583, %r133, 260046848;
	setp.eq.s32 	%p731, %r1583, 0;
	mov.u32 	%r1812, %r140;
	@%p731 bra 	$L__BB0_130;
// %bb.129:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1584, [%rd68+16];
	shf.l.wrap.b32 	%r1812, %r1584, %r140, %r134;
$L__BB0_130:                            // %__internal_trig_reduction_slowpath.exit.i.i.i152
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1585, %r140, %r139, %r134;
	shr.u32 	%r1586, %r1585, 30;
	shf.l.wrap.b32 	%r1587, %r1812, %r1585, 2;
	shl.b32 	%r1588, %r1812, 2;
	shr.u32 	%r1589, %r1587, 31;
	add.s32 	%r1590, %r1589, %r1586;
	neg.s32 	%r1591, %r1590;
	setp.lt.s32 	%p732, %r133, 0;
	selp.b32 	%r1813, %r1591, %r1590, %p732;
	xor.b32  	%r1592, %r1587, %r133;
	shr.s32 	%r1593, %r1587, 31;
	xor.b32  	%r1594, %r1593, %r1587;
	xor.b32  	%r1595, %r1593, %r1588;
	cvt.u64.u32 	%rd472, %r1594;
	shl.b64 	%rd473, %rd472, 32;
	cvt.u64.u32 	%rd474, %r1595;
	or.b64  	%rd475, %rd473, %rd474;
	cvt.rn.f64.s64 	%fd47, %rd475;
	mul.rn.f64 	%fd48, %fd47, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2953, %fd48;
	neg.f32 	%f2954, %f2953;
	setp.lt.s32 	%p733, %r1592, 0;
	selp.f32 	%f3694, %f2954, %f2953, %p733;
$L__BB0_131:                            // %__nv_sinf.exit169
                                        //   in Loop: Header=BB0_3 Depth=1
	and.b32  	%r1409, %r1792, 2;
	setp.eq.s32 	%p679, %r1409, 0;
	selp.f32 	%f3648, %f2832, %f2834, %p679;
	and.b32  	%r1436, %r1795, 2;
	setp.eq.s32 	%p687, %r1436, 0;
	selp.f32 	%f3649, %f2851, %f2853, %p687;
	and.b32  	%r1463, %r1798, 2;
	setp.eq.s32 	%p695, %r1463, 0;
	selp.f32 	%f3650, %f2870, %f2872, %p695;
	and.b32  	%r1490, %r1801, 2;
	setp.eq.s32 	%p703, %r1490, 0;
	selp.f32 	%f3651, %f2889, %f2891, %p703;
	and.b32  	%r1517, %r1804, 2;
	setp.eq.s32 	%p711, %r1517, 0;
	selp.f32 	%f3652, %f2908, %f2910, %p711;
	and.b32  	%r1544, %r1807, 2;
	setp.eq.s32 	%p719, %r1544, 0;
	selp.f32 	%f3653, %f2927, %f2929, %p719;
	and.b32  	%r1571, %r1810, 2;
	setp.eq.s32 	%p727, %r1571, 0;
	selp.f32 	%f3654, %f2946, %f2948, %p727;
	mul.rn.f32 	%f2956, %f3694, %f3694;
	and.b32  	%r1597, %r1813, 1;
	setp.eq.b32 	%p734, %r1597, 1;
	selp.f32 	%f2957, 0f3F800000, %f3694, %p734;
	fma.rn.f32 	%f2958, %f2956, %f2957, 0f00000000;
	fma.rn.f32 	%f2959, %f2956, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2960, %f2959, 0fB94D4153, %p734;
	selp.f32 	%f2961, 0f3D2AAABB, 0f3C0885E4, %p734;
	fma.rn.f32 	%f2962, %f2960, %f2956, %f2961;
	selp.f32 	%f2963, 0fBEFFFFFF, 0fBE2AAAA8, %p734;
	fma.rn.f32 	%f2964, %f2962, %f2956, %f2963;
	fma.rn.f32 	%f2965, %f2964, %f2958, %f2957;
	and.b32  	%r1598, %r1813, 2;
	setp.eq.s32 	%p735, %r1598, 0;
	sub.rn.f32 	%f2967, %f2947, %f2965;
	selp.f32 	%f3655, %f2965, %f2967, %p735;
	bra.uni 	$L__BB0_502;
$L__BB0_200:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r250, %f3648;
	shr.u32 	%r251, %r250, 23;
	and.b32  	%r952, %r251, 224;
	add.s32 	%r953, %r952, -128;
	shl.b32 	%r954, %r250, 8;
	or.b32  	%r252, %r954, -2147483648;
	shr.u32 	%r253, %r953, 5;
	mov.b32 	%r1838, 0;
	mov.b64 	%rd518, 0;
$L__BB0_201:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd262, %rd500, %rd518;
	ld.global.nc.u32 	%r957, [%rd262];
	// begin inline asm
	{
	mad.lo.cc.u32   %r955, %r957, %r252, %r1838;
	madc.hi.u32     %r1838, %r957, %r252,  0;
	}
	// end inline asm
	add.s64 	%rd263, %rd8, %rd518;
	st.local.u32 	[%rd263], %r955;
	add.s64 	%rd518, %rd518, 4;
	cvt.u32.u64 	%r960, %rd518;
	setp.ne.s32 	%p538, %r960, 24;
	@%p538 bra 	$L__BB0_201;
// %bb.202:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd8+24], %r1838;
	mul.wide.u32 	%rd264, %r253, 4;
	sub.s64 	%rd95, %rd8, %rd264;
	ld.local.u32 	%r256, [%rd95+24];
	ld.local.u32 	%r257, [%rd95+20];
	and.b32  	%r962, %r250, 260046848;
	setp.eq.s32 	%p539, %r962, 0;
	mov.u32 	%r1839, %r257;
	@%p539 bra 	$L__BB0_204;
// %bb.203:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r963, [%rd95+16];
	shf.l.wrap.b32 	%r1839, %r963, %r257, %r251;
$L__BB0_204:                            // %__internal_trig_reduction_slowpath.exit.i.i
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r964, %r257, %r256, %r251;
	shr.u32 	%r965, %r964, 30;
	shf.l.wrap.b32 	%r966, %r1839, %r964, 2;
	shl.b32 	%r967, %r1839, 2;
	shr.u32 	%r968, %r966, 31;
	add.s32 	%r969, %r968, %r965;
	neg.s32 	%r970, %r969;
	setp.lt.s32 	%p540, %r250, 0;
	selp.b32 	%r1840, %r970, %r969, %p540;
	xor.b32  	%r971, %r966, %r250;
	shr.s32 	%r972, %r966, 31;
	xor.b32  	%r973, %r972, %r966;
	xor.b32  	%r974, %r972, %r967;
	cvt.u64.u32 	%rd265, %r973;
	shl.b64 	%rd266, %rd265, 32;
	cvt.u64.u32 	%rd267, %r974;
	or.b64  	%rd268, %rd266, %rd267;
	cvt.rn.f64.s64 	%fd1, %rd268;
	mul.rn.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2524, %fd2;
	neg.f32 	%f2525, %f2524;
	setp.lt.s32 	%p541, %r971, 0;
	selp.f32 	%f3703, %f2525, %f2524, %p541;
$L__BB0_205:                            // %__internal_trig_reduction_kernel.exit.i
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2527, %f3703, %f3703;
	fma.rn.f32 	%f2528, %f2527, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2529, %f2528, %f2527, 0f3CC70000;
	fma.rn.f32 	%f2530, %f2529, %f2527, 0f3D5B0000;
	fma.rn.f32 	%f2531, %f2530, %f2527, 0f3E089438;
	fma.rn.f32 	%f2532, %f2531, %f2527, 0f3EAAAA88;
	mul.rn.f32 	%f2533, %f2527, %f3703;
	fma.rn.f32 	%f2534, %f2532, %f2533, %f3703;
	abs.f32 	%f2535, %f3703;
	setp.eq.f32 	%p542, %f2535, 0f3A00B43C;
	selp.f32 	%f3648, %f3703, %f2534, %p542;
	and.b32  	%r976, %r1840, 1;
	setp.eq.b32 	%p543, %r976, 1;
	not.pred 	%p544, %p543;
	@%p544 bra 	$L__BB0_207;
// %bb.206:                             //   in Loop: Header=BB0_3 Depth=1
	neg.f32 	%f2537, %f3648;
	// begin inline asm
	rcp.approx.ftz.f32 %f3648,%f2537;
	// end inline asm
$L__BB0_207:                            // %__nv_tanf.exit
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2538, %f3649, 0f3F22F983;
	cvt.rni.s32.f32 	%r1843, %f2538;
	cvt.rn.f32.s32 	%f2539, %r1843;
	fma.rn.f32 	%f2540, %f2539, 0fBFC90FDA, %f3649;
	fma.rn.f32 	%f2541, %f2539, 0fB3A22168, %f2540;
	fma.rn.f32 	%f3705, %f2539, 0fA7C234C5, %f2541;
	abs.f32 	%f302, %f3649;
	setp.ltu.f32 	%p545, %f302, 0f47CE4780;
	@%p545 bra 	$L__BB0_215;
// %bb.208:                             // %__nv_isinff.exit.i.i360
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p546, %f302, 0f7F800000;
	@%p546 bra 	$L__BB0_210;
// %bb.209:                             // %__nv_fmul_rn.exit.i.i381
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2544, 0f00000000;
	mul.rn.f32 	%f3705, %f3649, %f2544;
	mov.b32 	%r1843, 0;
	bra.uni 	$L__BB0_215;
$L__BB0_210:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r263, %f3649;
	shr.u32 	%r264, %r263, 23;
	and.b32  	%r978, %r264, 224;
	add.s32 	%r979, %r978, -128;
	shl.b32 	%r980, %r263, 8;
	or.b32  	%r265, %r980, -2147483648;
	shr.u32 	%r266, %r979, 5;
	mov.b32 	%r1841, 0;
	mov.b64 	%rd519, 0;
$L__BB0_211:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd271, %rd500, %rd519;
	ld.global.nc.u32 	%r983, [%rd271];
	// begin inline asm
	{
	mad.lo.cc.u32   %r981, %r983, %r265, %r1841;
	madc.hi.u32     %r1841, %r983, %r265,  0;
	}
	// end inline asm
	add.s64 	%rd272, %rd7, %rd519;
	st.local.u32 	[%rd272], %r981;
	add.s64 	%rd519, %rd519, 4;
	cvt.u32.u64 	%r986, %rd519;
	setp.ne.s32 	%p547, %r986, 24;
	@%p547 bra 	$L__BB0_211;
// %bb.212:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd7+24], %r1841;
	mul.wide.u32 	%rd273, %r266, 4;
	sub.s64 	%rd98, %rd7, %rd273;
	ld.local.u32 	%r269, [%rd98+24];
	ld.local.u32 	%r270, [%rd98+20];
	and.b32  	%r988, %r263, 260046848;
	setp.eq.s32 	%p548, %r988, 0;
	mov.u32 	%r1842, %r270;
	@%p548 bra 	$L__BB0_214;
// %bb.213:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r989, [%rd98+16];
	shf.l.wrap.b32 	%r1842, %r989, %r270, %r264;
$L__BB0_214:                            // %__internal_trig_reduction_slowpath.exit.i.i364
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r990, %r270, %r269, %r264;
	shr.u32 	%r991, %r990, 30;
	shf.l.wrap.b32 	%r992, %r1842, %r990, 2;
	shl.b32 	%r993, %r1842, 2;
	shr.u32 	%r994, %r992, 31;
	add.s32 	%r995, %r994, %r991;
	neg.s32 	%r996, %r995;
	setp.lt.s32 	%p549, %r263, 0;
	selp.b32 	%r1843, %r996, %r995, %p549;
	xor.b32  	%r997, %r992, %r263;
	shr.s32 	%r998, %r992, 31;
	xor.b32  	%r999, %r998, %r992;
	xor.b32  	%r1000, %r998, %r993;
	cvt.u64.u32 	%rd274, %r999;
	shl.b64 	%rd275, %rd274, 32;
	cvt.u64.u32 	%rd276, %r1000;
	or.b64  	%rd277, %rd275, %rd276;
	cvt.rn.f64.s64 	%fd3, %rd277;
	mul.rn.f64 	%fd4, %fd3, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2542, %fd4;
	neg.f32 	%f2543, %f2542;
	setp.lt.s32 	%p550, %r997, 0;
	selp.f32 	%f3705, %f2543, %f2542, %p550;
$L__BB0_215:                            // %__internal_trig_reduction_kernel.exit.i375
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2545, %f3705, %f3705;
	fma.rn.f32 	%f2546, %f2545, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2547, %f2546, %f2545, 0f3CC70000;
	fma.rn.f32 	%f2548, %f2547, %f2545, 0f3D5B0000;
	fma.rn.f32 	%f2549, %f2548, %f2545, 0f3E089438;
	fma.rn.f32 	%f2550, %f2549, %f2545, 0f3EAAAA88;
	mul.rn.f32 	%f2551, %f2545, %f3705;
	fma.rn.f32 	%f2552, %f2550, %f2551, %f3705;
	abs.f32 	%f2553, %f3705;
	setp.eq.f32 	%p551, %f2553, 0f3A00B43C;
	selp.f32 	%f3649, %f3705, %f2552, %p551;
	and.b32  	%r1002, %r1843, 1;
	setp.eq.b32 	%p552, %r1002, 1;
	not.pred 	%p553, %p552;
	@%p553 bra 	$L__BB0_217;
// %bb.216:                             //   in Loop: Header=BB0_3 Depth=1
	neg.f32 	%f2555, %f3649;
	// begin inline asm
	rcp.approx.ftz.f32 %f3649,%f2555;
	// end inline asm
$L__BB0_217:                            // %__nv_tanf.exit382
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2556, %f3650, 0f3F22F983;
	cvt.rni.s32.f32 	%r1846, %f2556;
	cvt.rn.f32.s32 	%f2557, %r1846;
	fma.rn.f32 	%f2558, %f2557, 0fBFC90FDA, %f3650;
	fma.rn.f32 	%f2559, %f2557, 0fB3A22168, %f2558;
	fma.rn.f32 	%f3707, %f2557, 0fA7C234C5, %f2559;
	abs.f32 	%f311, %f3650;
	setp.ltu.f32 	%p554, %f311, 0f47CE4780;
	@%p554 bra 	$L__BB0_225;
// %bb.218:                             // %__nv_isinff.exit.i.i384
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p555, %f311, 0f7F800000;
	@%p555 bra 	$L__BB0_220;
// %bb.219:                             // %__nv_fmul_rn.exit.i.i405
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2562, 0f00000000;
	mul.rn.f32 	%f3707, %f3650, %f2562;
	mov.b32 	%r1846, 0;
	bra.uni 	$L__BB0_225;
$L__BB0_220:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r276, %f3650;
	shr.u32 	%r277, %r276, 23;
	and.b32  	%r1004, %r277, 224;
	add.s32 	%r1005, %r1004, -128;
	shl.b32 	%r1006, %r276, 8;
	or.b32  	%r278, %r1006, -2147483648;
	shr.u32 	%r279, %r1005, 5;
	mov.b32 	%r1844, 0;
	mov.b64 	%rd520, 0;
$L__BB0_221:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd280, %rd500, %rd520;
	ld.global.nc.u32 	%r1009, [%rd280];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1007, %r1009, %r278, %r1844;
	madc.hi.u32     %r1844, %r1009, %r278,  0;
	}
	// end inline asm
	add.s64 	%rd281, %rd6, %rd520;
	st.local.u32 	[%rd281], %r1007;
	add.s64 	%rd520, %rd520, 4;
	cvt.u32.u64 	%r1012, %rd520;
	setp.ne.s32 	%p556, %r1012, 24;
	@%p556 bra 	$L__BB0_221;
// %bb.222:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd6+24], %r1844;
	mul.wide.u32 	%rd282, %r279, 4;
	sub.s64 	%rd101, %rd6, %rd282;
	ld.local.u32 	%r282, [%rd101+24];
	ld.local.u32 	%r283, [%rd101+20];
	and.b32  	%r1014, %r276, 260046848;
	setp.eq.s32 	%p557, %r1014, 0;
	mov.u32 	%r1845, %r283;
	@%p557 bra 	$L__BB0_224;
// %bb.223:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1015, [%rd101+16];
	shf.l.wrap.b32 	%r1845, %r1015, %r283, %r277;
$L__BB0_224:                            // %__internal_trig_reduction_slowpath.exit.i.i388
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1016, %r283, %r282, %r277;
	shr.u32 	%r1017, %r1016, 30;
	shf.l.wrap.b32 	%r1018, %r1845, %r1016, 2;
	shl.b32 	%r1019, %r1845, 2;
	shr.u32 	%r1020, %r1018, 31;
	add.s32 	%r1021, %r1020, %r1017;
	neg.s32 	%r1022, %r1021;
	setp.lt.s32 	%p558, %r276, 0;
	selp.b32 	%r1846, %r1022, %r1021, %p558;
	xor.b32  	%r1023, %r1018, %r276;
	shr.s32 	%r1024, %r1018, 31;
	xor.b32  	%r1025, %r1024, %r1018;
	xor.b32  	%r1026, %r1024, %r1019;
	cvt.u64.u32 	%rd283, %r1025;
	shl.b64 	%rd284, %rd283, 32;
	cvt.u64.u32 	%rd285, %r1026;
	or.b64  	%rd286, %rd284, %rd285;
	cvt.rn.f64.s64 	%fd5, %rd286;
	mul.rn.f64 	%fd6, %fd5, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2560, %fd6;
	neg.f32 	%f2561, %f2560;
	setp.lt.s32 	%p559, %r1023, 0;
	selp.f32 	%f3707, %f2561, %f2560, %p559;
$L__BB0_225:                            // %__internal_trig_reduction_kernel.exit.i399
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2563, %f3707, %f3707;
	fma.rn.f32 	%f2564, %f2563, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2565, %f2564, %f2563, 0f3CC70000;
	fma.rn.f32 	%f2566, %f2565, %f2563, 0f3D5B0000;
	fma.rn.f32 	%f2567, %f2566, %f2563, 0f3E089438;
	fma.rn.f32 	%f2568, %f2567, %f2563, 0f3EAAAA88;
	mul.rn.f32 	%f2569, %f2563, %f3707;
	fma.rn.f32 	%f2570, %f2568, %f2569, %f3707;
	abs.f32 	%f2571, %f3707;
	setp.eq.f32 	%p560, %f2571, 0f3A00B43C;
	selp.f32 	%f3650, %f3707, %f2570, %p560;
	and.b32  	%r1028, %r1846, 1;
	setp.eq.b32 	%p561, %r1028, 1;
	not.pred 	%p562, %p561;
	@%p562 bra 	$L__BB0_227;
// %bb.226:                             //   in Loop: Header=BB0_3 Depth=1
	neg.f32 	%f2573, %f3650;
	// begin inline asm
	rcp.approx.ftz.f32 %f3650,%f2573;
	// end inline asm
$L__BB0_227:                            // %__nv_tanf.exit406
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2574, %f3651, 0f3F22F983;
	cvt.rni.s32.f32 	%r1849, %f2574;
	cvt.rn.f32.s32 	%f2575, %r1849;
	fma.rn.f32 	%f2576, %f2575, 0fBFC90FDA, %f3651;
	fma.rn.f32 	%f2577, %f2575, 0fB3A22168, %f2576;
	fma.rn.f32 	%f3709, %f2575, 0fA7C234C5, %f2577;
	abs.f32 	%f320, %f3651;
	setp.ltu.f32 	%p563, %f320, 0f47CE4780;
	@%p563 bra 	$L__BB0_235;
// %bb.228:                             // %__nv_isinff.exit.i.i408
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p564, %f320, 0f7F800000;
	@%p564 bra 	$L__BB0_230;
// %bb.229:                             // %__nv_fmul_rn.exit.i.i429
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2580, 0f00000000;
	mul.rn.f32 	%f3709, %f3651, %f2580;
	mov.b32 	%r1849, 0;
	bra.uni 	$L__BB0_235;
$L__BB0_230:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r289, %f3651;
	shr.u32 	%r290, %r289, 23;
	and.b32  	%r1030, %r290, 224;
	add.s32 	%r1031, %r1030, -128;
	shl.b32 	%r1032, %r289, 8;
	or.b32  	%r291, %r1032, -2147483648;
	shr.u32 	%r292, %r1031, 5;
	mov.b32 	%r1847, 0;
	mov.b64 	%rd521, 0;
$L__BB0_231:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd289, %rd500, %rd521;
	ld.global.nc.u32 	%r1035, [%rd289];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1033, %r1035, %r291, %r1847;
	madc.hi.u32     %r1847, %r1035, %r291,  0;
	}
	// end inline asm
	add.s64 	%rd290, %rd5, %rd521;
	st.local.u32 	[%rd290], %r1033;
	add.s64 	%rd521, %rd521, 4;
	cvt.u32.u64 	%r1038, %rd521;
	setp.ne.s32 	%p565, %r1038, 24;
	@%p565 bra 	$L__BB0_231;
// %bb.232:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd5+24], %r1847;
	mul.wide.u32 	%rd291, %r292, 4;
	sub.s64 	%rd104, %rd5, %rd291;
	ld.local.u32 	%r295, [%rd104+24];
	ld.local.u32 	%r296, [%rd104+20];
	and.b32  	%r1040, %r289, 260046848;
	setp.eq.s32 	%p566, %r1040, 0;
	mov.u32 	%r1848, %r296;
	@%p566 bra 	$L__BB0_234;
// %bb.233:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1041, [%rd104+16];
	shf.l.wrap.b32 	%r1848, %r1041, %r296, %r290;
$L__BB0_234:                            // %__internal_trig_reduction_slowpath.exit.i.i412
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1042, %r296, %r295, %r290;
	shr.u32 	%r1043, %r1042, 30;
	shf.l.wrap.b32 	%r1044, %r1848, %r1042, 2;
	shl.b32 	%r1045, %r1848, 2;
	shr.u32 	%r1046, %r1044, 31;
	add.s32 	%r1047, %r1046, %r1043;
	neg.s32 	%r1048, %r1047;
	setp.lt.s32 	%p567, %r289, 0;
	selp.b32 	%r1849, %r1048, %r1047, %p567;
	xor.b32  	%r1049, %r1044, %r289;
	shr.s32 	%r1050, %r1044, 31;
	xor.b32  	%r1051, %r1050, %r1044;
	xor.b32  	%r1052, %r1050, %r1045;
	cvt.u64.u32 	%rd292, %r1051;
	shl.b64 	%rd293, %rd292, 32;
	cvt.u64.u32 	%rd294, %r1052;
	or.b64  	%rd295, %rd293, %rd294;
	cvt.rn.f64.s64 	%fd7, %rd295;
	mul.rn.f64 	%fd8, %fd7, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2578, %fd8;
	neg.f32 	%f2579, %f2578;
	setp.lt.s32 	%p568, %r1049, 0;
	selp.f32 	%f3709, %f2579, %f2578, %p568;
$L__BB0_235:                            // %__internal_trig_reduction_kernel.exit.i423
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2581, %f3709, %f3709;
	fma.rn.f32 	%f2582, %f2581, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2583, %f2582, %f2581, 0f3CC70000;
	fma.rn.f32 	%f2584, %f2583, %f2581, 0f3D5B0000;
	fma.rn.f32 	%f2585, %f2584, %f2581, 0f3E089438;
	fma.rn.f32 	%f2586, %f2585, %f2581, 0f3EAAAA88;
	mul.rn.f32 	%f2587, %f2581, %f3709;
	fma.rn.f32 	%f2588, %f2586, %f2587, %f3709;
	abs.f32 	%f2589, %f3709;
	setp.eq.f32 	%p569, %f2589, 0f3A00B43C;
	selp.f32 	%f3651, %f3709, %f2588, %p569;
	and.b32  	%r1054, %r1849, 1;
	setp.eq.b32 	%p570, %r1054, 1;
	not.pred 	%p571, %p570;
	@%p571 bra 	$L__BB0_237;
// %bb.236:                             //   in Loop: Header=BB0_3 Depth=1
	neg.f32 	%f2591, %f3651;
	// begin inline asm
	rcp.approx.ftz.f32 %f3651,%f2591;
	// end inline asm
$L__BB0_237:                            // %__nv_tanf.exit430
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2592, %f3652, 0f3F22F983;
	cvt.rni.s32.f32 	%r1852, %f2592;
	cvt.rn.f32.s32 	%f2593, %r1852;
	fma.rn.f32 	%f2594, %f2593, 0fBFC90FDA, %f3652;
	fma.rn.f32 	%f2595, %f2593, 0fB3A22168, %f2594;
	fma.rn.f32 	%f3711, %f2593, 0fA7C234C5, %f2595;
	abs.f32 	%f329, %f3652;
	setp.ltu.f32 	%p572, %f329, 0f47CE4780;
	@%p572 bra 	$L__BB0_245;
// %bb.238:                             // %__nv_isinff.exit.i.i432
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p573, %f329, 0f7F800000;
	@%p573 bra 	$L__BB0_240;
// %bb.239:                             // %__nv_fmul_rn.exit.i.i453
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2598, 0f00000000;
	mul.rn.f32 	%f3711, %f3652, %f2598;
	mov.b32 	%r1852, 0;
	bra.uni 	$L__BB0_245;
$L__BB0_240:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r302, %f3652;
	shr.u32 	%r303, %r302, 23;
	and.b32  	%r1056, %r303, 224;
	add.s32 	%r1057, %r1056, -128;
	shl.b32 	%r1058, %r302, 8;
	or.b32  	%r304, %r1058, -2147483648;
	shr.u32 	%r305, %r1057, 5;
	mov.b32 	%r1850, 0;
	mov.b64 	%rd522, 0;
$L__BB0_241:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd298, %rd500, %rd522;
	ld.global.nc.u32 	%r1061, [%rd298];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1059, %r1061, %r304, %r1850;
	madc.hi.u32     %r1850, %r1061, %r304,  0;
	}
	// end inline asm
	add.s64 	%rd299, %rd4, %rd522;
	st.local.u32 	[%rd299], %r1059;
	add.s64 	%rd522, %rd522, 4;
	cvt.u32.u64 	%r1064, %rd522;
	setp.ne.s32 	%p574, %r1064, 24;
	@%p574 bra 	$L__BB0_241;
// %bb.242:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd4+24], %r1850;
	mul.wide.u32 	%rd300, %r305, 4;
	sub.s64 	%rd107, %rd4, %rd300;
	ld.local.u32 	%r308, [%rd107+24];
	ld.local.u32 	%r309, [%rd107+20];
	and.b32  	%r1066, %r302, 260046848;
	setp.eq.s32 	%p575, %r1066, 0;
	mov.u32 	%r1851, %r309;
	@%p575 bra 	$L__BB0_244;
// %bb.243:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1067, [%rd107+16];
	shf.l.wrap.b32 	%r1851, %r1067, %r309, %r303;
$L__BB0_244:                            // %__internal_trig_reduction_slowpath.exit.i.i436
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1068, %r309, %r308, %r303;
	shr.u32 	%r1069, %r1068, 30;
	shf.l.wrap.b32 	%r1070, %r1851, %r1068, 2;
	shl.b32 	%r1071, %r1851, 2;
	shr.u32 	%r1072, %r1070, 31;
	add.s32 	%r1073, %r1072, %r1069;
	neg.s32 	%r1074, %r1073;
	setp.lt.s32 	%p576, %r302, 0;
	selp.b32 	%r1852, %r1074, %r1073, %p576;
	xor.b32  	%r1075, %r1070, %r302;
	shr.s32 	%r1076, %r1070, 31;
	xor.b32  	%r1077, %r1076, %r1070;
	xor.b32  	%r1078, %r1076, %r1071;
	cvt.u64.u32 	%rd301, %r1077;
	shl.b64 	%rd302, %rd301, 32;
	cvt.u64.u32 	%rd303, %r1078;
	or.b64  	%rd304, %rd302, %rd303;
	cvt.rn.f64.s64 	%fd9, %rd304;
	mul.rn.f64 	%fd10, %fd9, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2596, %fd10;
	neg.f32 	%f2597, %f2596;
	setp.lt.s32 	%p577, %r1075, 0;
	selp.f32 	%f3711, %f2597, %f2596, %p577;
$L__BB0_245:                            // %__internal_trig_reduction_kernel.exit.i447
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2599, %f3711, %f3711;
	fma.rn.f32 	%f2600, %f2599, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2601, %f2600, %f2599, 0f3CC70000;
	fma.rn.f32 	%f2602, %f2601, %f2599, 0f3D5B0000;
	fma.rn.f32 	%f2603, %f2602, %f2599, 0f3E089438;
	fma.rn.f32 	%f2604, %f2603, %f2599, 0f3EAAAA88;
	mul.rn.f32 	%f2605, %f2599, %f3711;
	fma.rn.f32 	%f2606, %f2604, %f2605, %f3711;
	abs.f32 	%f2607, %f3711;
	setp.eq.f32 	%p578, %f2607, 0f3A00B43C;
	selp.f32 	%f3652, %f3711, %f2606, %p578;
	and.b32  	%r1080, %r1852, 1;
	setp.eq.b32 	%p579, %r1080, 1;
	not.pred 	%p580, %p579;
	@%p580 bra 	$L__BB0_247;
// %bb.246:                             //   in Loop: Header=BB0_3 Depth=1
	neg.f32 	%f2609, %f3652;
	// begin inline asm
	rcp.approx.ftz.f32 %f3652,%f2609;
	// end inline asm
$L__BB0_247:                            // %__nv_tanf.exit454
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2610, %f3653, 0f3F22F983;
	cvt.rni.s32.f32 	%r1855, %f2610;
	cvt.rn.f32.s32 	%f2611, %r1855;
	fma.rn.f32 	%f2612, %f2611, 0fBFC90FDA, %f3653;
	fma.rn.f32 	%f2613, %f2611, 0fB3A22168, %f2612;
	fma.rn.f32 	%f3713, %f2611, 0fA7C234C5, %f2613;
	abs.f32 	%f338, %f3653;
	setp.ltu.f32 	%p581, %f338, 0f47CE4780;
	@%p581 bra 	$L__BB0_255;
// %bb.248:                             // %__nv_isinff.exit.i.i456
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p582, %f338, 0f7F800000;
	@%p582 bra 	$L__BB0_250;
// %bb.249:                             // %__nv_fmul_rn.exit.i.i477
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2616, 0f00000000;
	mul.rn.f32 	%f3713, %f3653, %f2616;
	mov.b32 	%r1855, 0;
	bra.uni 	$L__BB0_255;
$L__BB0_250:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r315, %f3653;
	shr.u32 	%r316, %r315, 23;
	and.b32  	%r1082, %r316, 224;
	add.s32 	%r1083, %r1082, -128;
	shl.b32 	%r1084, %r315, 8;
	or.b32  	%r317, %r1084, -2147483648;
	shr.u32 	%r318, %r1083, 5;
	mov.b32 	%r1853, 0;
	mov.b64 	%rd523, 0;
$L__BB0_251:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd307, %rd500, %rd523;
	ld.global.nc.u32 	%r1087, [%rd307];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1085, %r1087, %r317, %r1853;
	madc.hi.u32     %r1853, %r1087, %r317,  0;
	}
	// end inline asm
	add.s64 	%rd308, %rd3, %rd523;
	st.local.u32 	[%rd308], %r1085;
	add.s64 	%rd523, %rd523, 4;
	cvt.u32.u64 	%r1090, %rd523;
	setp.ne.s32 	%p583, %r1090, 24;
	@%p583 bra 	$L__BB0_251;
// %bb.252:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd3+24], %r1853;
	mul.wide.u32 	%rd309, %r318, 4;
	sub.s64 	%rd110, %rd3, %rd309;
	ld.local.u32 	%r321, [%rd110+24];
	ld.local.u32 	%r322, [%rd110+20];
	and.b32  	%r1092, %r315, 260046848;
	setp.eq.s32 	%p584, %r1092, 0;
	mov.u32 	%r1854, %r322;
	@%p584 bra 	$L__BB0_254;
// %bb.253:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1093, [%rd110+16];
	shf.l.wrap.b32 	%r1854, %r1093, %r322, %r316;
$L__BB0_254:                            // %__internal_trig_reduction_slowpath.exit.i.i460
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1094, %r322, %r321, %r316;
	shr.u32 	%r1095, %r1094, 30;
	shf.l.wrap.b32 	%r1096, %r1854, %r1094, 2;
	shl.b32 	%r1097, %r1854, 2;
	shr.u32 	%r1098, %r1096, 31;
	add.s32 	%r1099, %r1098, %r1095;
	neg.s32 	%r1100, %r1099;
	setp.lt.s32 	%p585, %r315, 0;
	selp.b32 	%r1855, %r1100, %r1099, %p585;
	xor.b32  	%r1101, %r1096, %r315;
	shr.s32 	%r1102, %r1096, 31;
	xor.b32  	%r1103, %r1102, %r1096;
	xor.b32  	%r1104, %r1102, %r1097;
	cvt.u64.u32 	%rd310, %r1103;
	shl.b64 	%rd311, %rd310, 32;
	cvt.u64.u32 	%rd312, %r1104;
	or.b64  	%rd313, %rd311, %rd312;
	cvt.rn.f64.s64 	%fd11, %rd313;
	mul.rn.f64 	%fd12, %fd11, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2614, %fd12;
	neg.f32 	%f2615, %f2614;
	setp.lt.s32 	%p586, %r1101, 0;
	selp.f32 	%f3713, %f2615, %f2614, %p586;
$L__BB0_255:                            // %__internal_trig_reduction_kernel.exit.i471
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2617, %f3713, %f3713;
	fma.rn.f32 	%f2618, %f2617, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2619, %f2618, %f2617, 0f3CC70000;
	fma.rn.f32 	%f2620, %f2619, %f2617, 0f3D5B0000;
	fma.rn.f32 	%f2621, %f2620, %f2617, 0f3E089438;
	fma.rn.f32 	%f2622, %f2621, %f2617, 0f3EAAAA88;
	mul.rn.f32 	%f2623, %f2617, %f3713;
	fma.rn.f32 	%f2624, %f2622, %f2623, %f3713;
	abs.f32 	%f2625, %f3713;
	setp.eq.f32 	%p587, %f2625, 0f3A00B43C;
	selp.f32 	%f3653, %f3713, %f2624, %p587;
	and.b32  	%r1106, %r1855, 1;
	setp.eq.b32 	%p588, %r1106, 1;
	not.pred 	%p589, %p588;
	@%p589 bra 	$L__BB0_257;
// %bb.256:                             //   in Loop: Header=BB0_3 Depth=1
	neg.f32 	%f2627, %f3653;
	// begin inline asm
	rcp.approx.ftz.f32 %f3653,%f2627;
	// end inline asm
$L__BB0_257:                            // %__nv_tanf.exit478
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2628, %f3654, 0f3F22F983;
	cvt.rni.s32.f32 	%r1858, %f2628;
	cvt.rn.f32.s32 	%f2629, %r1858;
	fma.rn.f32 	%f2630, %f2629, 0fBFC90FDA, %f3654;
	fma.rn.f32 	%f2631, %f2629, 0fB3A22168, %f2630;
	fma.rn.f32 	%f3715, %f2629, 0fA7C234C5, %f2631;
	abs.f32 	%f347, %f3654;
	setp.ltu.f32 	%p590, %f347, 0f47CE4780;
	@%p590 bra 	$L__BB0_265;
// %bb.258:                             // %__nv_isinff.exit.i.i480
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p591, %f347, 0f7F800000;
	@%p591 bra 	$L__BB0_260;
// %bb.259:                             // %__nv_fmul_rn.exit.i.i501
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2634, 0f00000000;
	mul.rn.f32 	%f3715, %f3654, %f2634;
	mov.b32 	%r1858, 0;
	bra.uni 	$L__BB0_265;
$L__BB0_260:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r328, %f3654;
	shr.u32 	%r329, %r328, 23;
	and.b32  	%r1108, %r329, 224;
	add.s32 	%r1109, %r1108, -128;
	shl.b32 	%r1110, %r328, 8;
	or.b32  	%r330, %r1110, -2147483648;
	shr.u32 	%r331, %r1109, 5;
	mov.b32 	%r1856, 0;
	mov.b64 	%rd524, 0;
$L__BB0_261:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd316, %rd500, %rd524;
	ld.global.nc.u32 	%r1113, [%rd316];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1111, %r1113, %r330, %r1856;
	madc.hi.u32     %r1856, %r1113, %r330,  0;
	}
	// end inline asm
	add.s64 	%rd317, %rd2, %rd524;
	st.local.u32 	[%rd317], %r1111;
	add.s64 	%rd524, %rd524, 4;
	cvt.u32.u64 	%r1116, %rd524;
	setp.ne.s32 	%p592, %r1116, 24;
	@%p592 bra 	$L__BB0_261;
// %bb.262:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd2+24], %r1856;
	mul.wide.u32 	%rd318, %r331, 4;
	sub.s64 	%rd113, %rd2, %rd318;
	ld.local.u32 	%r334, [%rd113+24];
	ld.local.u32 	%r335, [%rd113+20];
	and.b32  	%r1118, %r328, 260046848;
	setp.eq.s32 	%p593, %r1118, 0;
	mov.u32 	%r1857, %r335;
	@%p593 bra 	$L__BB0_264;
// %bb.263:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1119, [%rd113+16];
	shf.l.wrap.b32 	%r1857, %r1119, %r335, %r329;
$L__BB0_264:                            // %__internal_trig_reduction_slowpath.exit.i.i484
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1120, %r335, %r334, %r329;
	shr.u32 	%r1121, %r1120, 30;
	shf.l.wrap.b32 	%r1122, %r1857, %r1120, 2;
	shl.b32 	%r1123, %r1857, 2;
	shr.u32 	%r1124, %r1122, 31;
	add.s32 	%r1125, %r1124, %r1121;
	neg.s32 	%r1126, %r1125;
	setp.lt.s32 	%p594, %r328, 0;
	selp.b32 	%r1858, %r1126, %r1125, %p594;
	xor.b32  	%r1127, %r1122, %r328;
	shr.s32 	%r1128, %r1122, 31;
	xor.b32  	%r1129, %r1128, %r1122;
	xor.b32  	%r1130, %r1128, %r1123;
	cvt.u64.u32 	%rd319, %r1129;
	shl.b64 	%rd320, %rd319, 32;
	cvt.u64.u32 	%rd321, %r1130;
	or.b64  	%rd322, %rd320, %rd321;
	cvt.rn.f64.s64 	%fd13, %rd322;
	mul.rn.f64 	%fd14, %fd13, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2632, %fd14;
	neg.f32 	%f2633, %f2632;
	setp.lt.s32 	%p595, %r1127, 0;
	selp.f32 	%f3715, %f2633, %f2632, %p595;
$L__BB0_265:                            // %__internal_trig_reduction_kernel.exit.i495
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2635, %f3715, %f3715;
	fma.rn.f32 	%f2636, %f2635, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2637, %f2636, %f2635, 0f3CC70000;
	fma.rn.f32 	%f2638, %f2637, %f2635, 0f3D5B0000;
	fma.rn.f32 	%f2639, %f2638, %f2635, 0f3E089438;
	fma.rn.f32 	%f2640, %f2639, %f2635, 0f3EAAAA88;
	mul.rn.f32 	%f2641, %f2635, %f3715;
	fma.rn.f32 	%f2642, %f2640, %f2641, %f3715;
	abs.f32 	%f2643, %f3715;
	setp.eq.f32 	%p596, %f2643, 0f3A00B43C;
	selp.f32 	%f3654, %f3715, %f2642, %p596;
	and.b32  	%r1132, %r1858, 1;
	setp.eq.b32 	%p597, %r1132, 1;
	not.pred 	%p598, %p597;
	@%p598 bra 	$L__BB0_267;
// %bb.266:                             //   in Loop: Header=BB0_3 Depth=1
	neg.f32 	%f2645, %f3654;
	// begin inline asm
	rcp.approx.ftz.f32 %f3654,%f2645;
	// end inline asm
$L__BB0_267:                            // %__nv_tanf.exit502
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2646, %f8, 0f3F22F983;
	cvt.rni.s32.f32 	%r1861, %f2646;
	cvt.rn.f32.s32 	%f2647, %r1861;
	fma.rn.f32 	%f2648, %f2647, 0fBFC90FDA, %f8;
	fma.rn.f32 	%f2649, %f2647, 0fB3A22168, %f2648;
	fma.rn.f32 	%f3717, %f2647, 0fA7C234C5, %f2649;
	abs.f32 	%f356, %f8;
	setp.ltu.f32 	%p599, %f356, 0f47CE4780;
	@%p599 bra 	$L__BB0_275;
// %bb.268:                             // %__nv_isinff.exit.i.i504
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p600, %f356, 0f7F800000;
	@%p600 bra 	$L__BB0_270;
// %bb.269:                             // %__nv_fmul_rn.exit.i.i525
                                        //   in Loop: Header=BB0_3 Depth=1
	mov.f32 	%f2652, 0f00000000;
	mul.rn.f32 	%f3717, %f8, %f2652;
	mov.b32 	%r1861, 0;
	bra.uni 	$L__BB0_275;
$L__BB0_270:                            //   in Loop: Header=BB0_3 Depth=1
	mov.b32 	%r341, %f8;
	shr.u32 	%r342, %r341, 23;
	and.b32  	%r1134, %r342, 224;
	add.s32 	%r1135, %r1134, -128;
	shl.b32 	%r1136, %r341, 8;
	or.b32  	%r343, %r1136, -2147483648;
	shr.u32 	%r344, %r1135, 5;
	mov.b32 	%r1859, 0;
	mov.b64 	%rd525, 0;
$L__BB0_271:                            //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd325, %rd500, %rd525;
	ld.global.nc.u32 	%r1139, [%rd325];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1137, %r1139, %r343, %r1859;
	madc.hi.u32     %r1859, %r1139, %r343,  0;
	}
	// end inline asm
	add.s64 	%rd326, %rd1, %rd525;
	st.local.u32 	[%rd326], %r1137;
	add.s64 	%rd525, %rd525, 4;
	cvt.u32.u64 	%r1142, %rd525;
	setp.ne.s32 	%p601, %r1142, 24;
	@%p601 bra 	$L__BB0_271;
// %bb.272:                             //   in Loop: Header=BB0_3 Depth=1
	st.local.u32 	[%rd1+24], %r1859;
	mul.wide.u32 	%rd327, %r344, 4;
	sub.s64 	%rd116, %rd1, %rd327;
	ld.local.u32 	%r347, [%rd116+24];
	ld.local.u32 	%r348, [%rd116+20];
	and.b32  	%r1144, %r341, 260046848;
	setp.eq.s32 	%p602, %r1144, 0;
	mov.u32 	%r1860, %r348;
	@%p602 bra 	$L__BB0_274;
// %bb.273:                             //   in Loop: Header=BB0_3 Depth=1
	ld.local.u32 	%r1145, [%rd116+16];
	shf.l.wrap.b32 	%r1860, %r1145, %r348, %r342;
$L__BB0_274:                            // %__internal_trig_reduction_slowpath.exit.i.i508
                                        //   in Loop: Header=BB0_3 Depth=1
	shf.l.wrap.b32 	%r1146, %r348, %r347, %r342;
	shr.u32 	%r1147, %r1146, 30;
	shf.l.wrap.b32 	%r1148, %r1860, %r1146, 2;
	shl.b32 	%r1149, %r1860, 2;
	shr.u32 	%r1150, %r1148, 31;
	add.s32 	%r1151, %r1150, %r1147;
	neg.s32 	%r1152, %r1151;
	setp.lt.s32 	%p603, %r341, 0;
	selp.b32 	%r1861, %r1152, %r1151, %p603;
	xor.b32  	%r1153, %r1148, %r341;
	shr.s32 	%r1154, %r1148, 31;
	xor.b32  	%r1155, %r1154, %r1148;
	xor.b32  	%r1156, %r1154, %r1149;
	cvt.u64.u32 	%rd328, %r1155;
	shl.b64 	%rd329, %rd328, 32;
	cvt.u64.u32 	%rd330, %r1156;
	or.b64  	%rd331, %rd329, %rd330;
	cvt.rn.f64.s64 	%fd15, %rd331;
	mul.rn.f64 	%fd16, %fd15, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2650, %fd16;
	neg.f32 	%f2651, %f2650;
	setp.lt.s32 	%p604, %r1153, 0;
	selp.f32 	%f3717, %f2651, %f2650, %p604;
$L__BB0_275:                            // %__internal_trig_reduction_kernel.exit.i519
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f2653, %f3717, %f3717;
	fma.rn.f32 	%f2654, %f2653, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2655, %f2654, %f2653, 0f3CC70000;
	fma.rn.f32 	%f2656, %f2655, %f2653, 0f3D5B0000;
	fma.rn.f32 	%f2657, %f2656, %f2653, 0f3E089438;
	fma.rn.f32 	%f2658, %f2657, %f2653, 0f3EAAAA88;
	mul.rn.f32 	%f2659, %f2653, %f3717;
	fma.rn.f32 	%f2660, %f2658, %f2659, %f3717;
	abs.f32 	%f2661, %f3717;
	setp.eq.f32 	%p605, %f2661, 0f3A00B43C;
	selp.f32 	%f3655, %f3717, %f2660, %p605;
	and.b32  	%r1158, %r1861, 1;
	setp.eq.b32 	%p606, %r1158, 1;
	not.pred 	%p607, %p606;
	@%p607 bra 	$L__BB0_502;
// %bb.276:                             //   in Loop: Header=BB0_3 Depth=1
	neg.f32 	%f2663, %f3655;
	// begin inline asm
	rcp.approx.ftz.f32 %f3655,%f2663;
	// end inline asm
	bra.uni 	$L__BB0_502;
$L__BB0_328:                            // %__nv_isinff.exit.i.i719
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p212, %f436, 0f7F800000;
	@%p212 bra 	$L__BB0_330;
// %bb.329:                             //   in Loop: Header=BB0_3 Depth=1
	setp.ge.f32 	%p213, %f3656, 0f00000000;
	selp.b32 	%r682, 2139095040, 0, %p213;
	or.b32  	%r683, %r682, -2147483648;
	selp.b32 	%r684, %r683, %r682, %p1;
	mov.b32 	%f3727, %r684;
$L__BB0_330:                            // %__nv_powf.exit
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f1347, %f3657, 0f3F000000;
	cvt.rzi.f32.f32 	%f1348, %f1347;
	add.rn.f32 	%f1349, %f1348, %f1348;
	sub.rn.f32 	%f1350, %f3657, %f1349;
	abs.f32 	%f1351, %f1350;
	setp.eq.f32 	%p219, %f1351, 0f3F800000;
	abs.f32 	%f450, %f3649;
	abs.f32 	%f454, %f3657;
	setp.lt.f32 	%p222, %f3649, 0f00000000;
	and.pred  	%p2, %p222, %p219;
	setp.neu.f32 	%p223, %f3649, 0f00000000;
	@%p223 bra 	$L__BB0_332;
// %bb.331:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1427, %f3649, %f3649;
	mov.b32 	%r694, %f1427;
	selp.b32 	%r695, %r694, 0, %p219;
	setp.lt.f32 	%p233, %f3657, 0f00000000;
	or.b32  	%r696, %r695, 2139095040;
	selp.b32 	%r697, %r696, %r695, %p233;
	mov.b32 	%f3729, %r697;
	bra.uni 	$L__BB0_333;
$L__BB0_332:                            //   in Loop: Header=BB0_3 Depth=1
	setp.lt.f32 	%p220, %f450, 0f00800000;
	mul.rn.f32 	%f1352, %f450, 0f4B800000;
	selp.f32 	%f1353, %f1352, %f450, %p220;
	mov.b32 	%r354, %f1353;
	and.b32  	%r688, %r354, 8388607;
	or.b32  	%r689, %r688, 1065353216;
	mov.b32 	%f451, %r689;
	setp.gt.f32 	%p221, %f451, 0f3FB504F3;
	mul.rn.f32 	%f1354, %f451, 0f3F000000;
	selp.f32 	%f452, %f1354, %f451, %p221;
	add.rn.f32 	%f1345, %f452, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1344,%f1345;
	// end inline asm
	setp.gt.f32 	%p227, %f454, 0f77F684DF;
	mul.rn.f32 	%f1355, %f3657, 0f39000000;
	selp.f32 	%f1356, %f1355, %f3657, %p227;
	selp.f32 	%f1357, 0fC3170000, 0fC2FE0000, %p220;
	shr.u32 	%r690, %r354, 23;
	cvt.rn.f32.u32 	%f1358, %r690;
	add.rn.f32 	%f1359, %f1357, %f1358;
	add.rn.f32 	%f1360, %f1359, 0f3F800000;
	selp.f32 	%f1361, %f1360, %f1359, %p221;
	mov.f32 	%f1362, 0f3F317200;
	mul.rn.f32 	%f1363, %f1361, %f1362;
	add.rn.f32 	%f1364, %f452, 0fBF800000;
	add.rn.f32 	%f1365, %f1364, %f1364;
	mul.rn.f32 	%f1366, %f1365, %f1344;
	mul.rn.f32 	%f1367, %f1366, %f1366;
	fma.rn.f32 	%f1368, %f1367, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1369, %f1368, %f1367, 0f3DAAAABD;
	mul.rn.f32 	%f1370, %f1369, %f1367;
	mul.rn.f32 	%f1371, %f1370, %f1366;
	add.rn.f32 	%f1372, %f1366, %f1371;
	sub.rn.f32 	%f1373, %f1366, %f1372;
	add.rn.f32 	%f1374, %f1371, %f1373;
	neg.f32 	%f1375, %f1366;
	sub.rn.f32 	%f1376, %f1364, %f1366;
	add.rn.f32 	%f1377, %f1376, %f1376;
	fma.rn.f32 	%f1378, %f1375, %f1364, %f1377;
	mul.rn.f32 	%f1379, %f1344, %f1378;
	add.rn.f32 	%f1380, %f1379, %f1374;
	add.rn.f32 	%f1381, %f1372, %f1380;
	add.rn.f32 	%f1382, %f1363, %f1381;
	sub.rn.f32 	%f1383, %f1363, %f1382;
	add.rn.f32 	%f1384, %f1381, %f1383;
	sub.rn.f32 	%f1385, %f1372, %f1381;
	add.rn.f32 	%f1386, %f1380, %f1385;
	add.rn.f32 	%f1387, %f1386, %f1384;
	mov.f32 	%f1388, 0f35BFBE8E;
	mul.rn.f32 	%f1389, %f1361, %f1388;
	add.rn.f32 	%f1390, %f1389, %f1387;
	add.rn.f32 	%f1391, %f1382, %f1390;
	mul.rn.f32 	%f1392, %f1356, %f1391;
	sub.rn.f32 	%f1393, %f1382, %f1391;
	add.rn.f32 	%f1394, %f1390, %f1393;
	neg.f32 	%f1395, %f1392;
	fma.rn.f32 	%f1396, %f1356, %f1391, %f1395;
	fma.rn.f32 	%f1397, %f1356, %f1394, %f1396;
	fma.rn.f32 	%f1398, %f1391, 0f00000000, %f1397;
	add.rn.f32 	%f1399, %f1392, %f1398;
	mov.b32 	%r691, %f1399;
	setp.eq.s32 	%p228, %r691, 1118925336;
	selp.f32 	%f1400, 0f42B17217, %f1399, %p228;
	neg.f32 	%f1401, %f1399;
	add.rn.f32 	%f1402, %f1392, %f1401;
	add.rn.f32 	%f1403, %f1402, %f1398;
	add.rn.f32 	%f1404, %f1403, 0f37000000;
	selp.f32 	%f1405, %f1404, %f1403, %p228;
	mov.f32 	%f1406, 0f3FB8AA3B;
	mul.rn.f32 	%f1407, %f1400, %f1406;
	cvt.rzi.f32.f32 	%f1408, %f1407;
	abs.f32 	%f1409, %f1408;
	setp.gt.f32 	%p229, %f1409, 0f42FC0000;
	mov.f32 	%f1410, 0f42FC0000;
	copysign.f32 	%f1411, %f1408, %f1410;
	selp.f32 	%f1412, %f1411, %f1408, %p229;
	fma.rn.f32 	%f1413, %f1412, 0fBF317218, %f1400;
	fma.rn.f32 	%f1414, %f1412, 0f3102E308, %f1413;
	mul.rn.f32 	%f1415, %f1414, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1416, %f1415;
	add.rn.f32 	%f1417, %f1412, 0f4B40007F;
	mov.b32 	%r692, %f1417;
	shl.b32 	%r693, %r692, 23;
	mov.b32 	%f1418, %r693;
	mul.rn.f32 	%f1419, %f1416, %f1418;
	setp.neu.f32 	%p230, %f1419, 0f7F800000;
	fma.rn.f32 	%f1420, %f1419, %f1405, %f1419;
	selp.f32 	%f1421, %f1420, 0f7F800000, %p230;
	neg.f32 	%f1422, %f1421;
	selp.f32 	%f1423, %f1422, %f1421, %p2;
	cvt.rzi.f32.f32 	%f1424, %f3657;
	setp.neu.f32 	%p231, %f3657, %f1424;
	selp.f32 	%f1426, 0f7FFFFFFF, %f1423, %p231;
	selp.f32 	%f3729, %f1426, %f1423, %p222;
$L__BB0_333:                            // %__internal_powf_corner_cases.exit.i733
                                        //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1428, %f450, %f454;
	mov.b32 	%r698, %f1428;
	setp.lt.s32 	%p234, %r698, 2139095040;
	@%p234 bra 	$L__BB0_340;
// %bb.334:                             // %__nv_isnanf.exit.i.i738
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.num.f32 	%p235, %f450, %f450;
	setp.num.f32 	%p236, %f454, %f454;
	and.pred  	%p237, %p235, %p236;
	@%p237 bra 	$L__BB0_336;
// %bb.335:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f3729, %f3649, %f3657;
	bra.uni 	$L__BB0_340;
$L__BB0_336:                            // %__nv_isinff.exit8.i.i740
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p238, %f454, 0f7F800000;
	@%p238 bra 	$L__BB0_338;
// %bb.337:                             // %__nv_fabsf.exit5.i.i744
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.gt.f32 	%p241, %f450, 0f3F800000;
	selp.b32 	%r702, 2139095040, 0, %p241;
	setp.lt.f32 	%p242, %f3657, 0f00000000;
	xor.b32  	%r703, %r702, 2139095040;
	selp.b32 	%r704, %r703, %r702, %p242;
	setp.eq.f32 	%p243, %f3649, 0fBF800000;
	mov.b32 	%f1429, %r704;
	selp.f32 	%f3729, 0f3F800000, %f1429, %p243;
	bra.uni 	$L__BB0_340;
$L__BB0_338:                            // %__nv_isinff.exit.i.i741
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p239, %f450, 0f7F800000;
	@%p239 bra 	$L__BB0_340;
// %bb.339:                             //   in Loop: Header=BB0_3 Depth=1
	setp.ge.f32 	%p240, %f3657, 0f00000000;
	selp.b32 	%r699, 2139095040, 0, %p240;
	or.b32  	%r700, %r699, -2147483648;
	selp.b32 	%r701, %r700, %r699, %p2;
	mov.b32 	%f3729, %r701;
$L__BB0_340:                            // %__nv_powf.exit749
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f1433, %f3658, 0f3F000000;
	cvt.rzi.f32.f32 	%f1434, %f1433;
	add.rn.f32 	%f1435, %f1434, %f1434;
	sub.rn.f32 	%f1436, %f3658, %f1435;
	abs.f32 	%f1437, %f1436;
	setp.eq.f32 	%p246, %f1437, 0f3F800000;
	abs.f32 	%f464, %f3650;
	abs.f32 	%f468, %f3658;
	setp.lt.f32 	%p249, %f3650, 0f00000000;
	and.pred  	%p3, %p249, %p246;
	setp.neu.f32 	%p250, %f3650, 0f00000000;
	@%p250 bra 	$L__BB0_342;
// %bb.341:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1513, %f3650, %f3650;
	mov.b32 	%r711, %f1513;
	selp.b32 	%r712, %r711, 0, %p246;
	setp.lt.f32 	%p260, %f3658, 0f00000000;
	or.b32  	%r713, %r712, 2139095040;
	selp.b32 	%r714, %r713, %r712, %p260;
	mov.b32 	%f3731, %r714;
	bra.uni 	$L__BB0_343;
$L__BB0_342:                            //   in Loop: Header=BB0_3 Depth=1
	setp.lt.f32 	%p247, %f464, 0f00800000;
	mul.rn.f32 	%f1438, %f464, 0f4B800000;
	selp.f32 	%f1439, %f1438, %f464, %p247;
	mov.b32 	%r355, %f1439;
	and.b32  	%r705, %r355, 8388607;
	or.b32  	%r706, %r705, 1065353216;
	mov.b32 	%f465, %r706;
	setp.gt.f32 	%p248, %f465, 0f3FB504F3;
	mul.rn.f32 	%f1440, %f465, 0f3F000000;
	selp.f32 	%f466, %f1440, %f465, %p248;
	add.rn.f32 	%f1431, %f466, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1430,%f1431;
	// end inline asm
	setp.gt.f32 	%p254, %f468, 0f77F684DF;
	mul.rn.f32 	%f1441, %f3658, 0f39000000;
	selp.f32 	%f1442, %f1441, %f3658, %p254;
	selp.f32 	%f1443, 0fC3170000, 0fC2FE0000, %p247;
	shr.u32 	%r707, %r355, 23;
	cvt.rn.f32.u32 	%f1444, %r707;
	add.rn.f32 	%f1445, %f1443, %f1444;
	add.rn.f32 	%f1446, %f1445, 0f3F800000;
	selp.f32 	%f1447, %f1446, %f1445, %p248;
	mov.f32 	%f1448, 0f3F317200;
	mul.rn.f32 	%f1449, %f1447, %f1448;
	add.rn.f32 	%f1450, %f466, 0fBF800000;
	add.rn.f32 	%f1451, %f1450, %f1450;
	mul.rn.f32 	%f1452, %f1451, %f1430;
	mul.rn.f32 	%f1453, %f1452, %f1452;
	fma.rn.f32 	%f1454, %f1453, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1455, %f1454, %f1453, 0f3DAAAABD;
	mul.rn.f32 	%f1456, %f1455, %f1453;
	mul.rn.f32 	%f1457, %f1456, %f1452;
	add.rn.f32 	%f1458, %f1452, %f1457;
	sub.rn.f32 	%f1459, %f1452, %f1458;
	add.rn.f32 	%f1460, %f1457, %f1459;
	neg.f32 	%f1461, %f1452;
	sub.rn.f32 	%f1462, %f1450, %f1452;
	add.rn.f32 	%f1463, %f1462, %f1462;
	fma.rn.f32 	%f1464, %f1461, %f1450, %f1463;
	mul.rn.f32 	%f1465, %f1430, %f1464;
	add.rn.f32 	%f1466, %f1465, %f1460;
	add.rn.f32 	%f1467, %f1458, %f1466;
	add.rn.f32 	%f1468, %f1449, %f1467;
	sub.rn.f32 	%f1469, %f1449, %f1468;
	add.rn.f32 	%f1470, %f1467, %f1469;
	sub.rn.f32 	%f1471, %f1458, %f1467;
	add.rn.f32 	%f1472, %f1466, %f1471;
	add.rn.f32 	%f1473, %f1472, %f1470;
	mov.f32 	%f1474, 0f35BFBE8E;
	mul.rn.f32 	%f1475, %f1447, %f1474;
	add.rn.f32 	%f1476, %f1475, %f1473;
	add.rn.f32 	%f1477, %f1468, %f1476;
	mul.rn.f32 	%f1478, %f1442, %f1477;
	sub.rn.f32 	%f1479, %f1468, %f1477;
	add.rn.f32 	%f1480, %f1476, %f1479;
	neg.f32 	%f1481, %f1478;
	fma.rn.f32 	%f1482, %f1442, %f1477, %f1481;
	fma.rn.f32 	%f1483, %f1442, %f1480, %f1482;
	fma.rn.f32 	%f1484, %f1477, 0f00000000, %f1483;
	add.rn.f32 	%f1485, %f1478, %f1484;
	mov.b32 	%r708, %f1485;
	setp.eq.s32 	%p255, %r708, 1118925336;
	selp.f32 	%f1486, 0f42B17217, %f1485, %p255;
	neg.f32 	%f1487, %f1485;
	add.rn.f32 	%f1488, %f1478, %f1487;
	add.rn.f32 	%f1489, %f1488, %f1484;
	add.rn.f32 	%f1490, %f1489, 0f37000000;
	selp.f32 	%f1491, %f1490, %f1489, %p255;
	mov.f32 	%f1492, 0f3FB8AA3B;
	mul.rn.f32 	%f1493, %f1486, %f1492;
	cvt.rzi.f32.f32 	%f1494, %f1493;
	abs.f32 	%f1495, %f1494;
	setp.gt.f32 	%p256, %f1495, 0f42FC0000;
	mov.f32 	%f1496, 0f42FC0000;
	copysign.f32 	%f1497, %f1494, %f1496;
	selp.f32 	%f1498, %f1497, %f1494, %p256;
	fma.rn.f32 	%f1499, %f1498, 0fBF317218, %f1486;
	fma.rn.f32 	%f1500, %f1498, 0f3102E308, %f1499;
	mul.rn.f32 	%f1501, %f1500, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1502, %f1501;
	add.rn.f32 	%f1503, %f1498, 0f4B40007F;
	mov.b32 	%r709, %f1503;
	shl.b32 	%r710, %r709, 23;
	mov.b32 	%f1504, %r710;
	mul.rn.f32 	%f1505, %f1502, %f1504;
	setp.neu.f32 	%p257, %f1505, 0f7F800000;
	fma.rn.f32 	%f1506, %f1505, %f1491, %f1505;
	selp.f32 	%f1507, %f1506, 0f7F800000, %p257;
	neg.f32 	%f1508, %f1507;
	selp.f32 	%f1509, %f1508, %f1507, %p3;
	cvt.rzi.f32.f32 	%f1510, %f3658;
	setp.neu.f32 	%p258, %f3658, %f1510;
	selp.f32 	%f1512, 0f7FFFFFFF, %f1509, %p258;
	selp.f32 	%f3731, %f1512, %f1509, %p249;
$L__BB0_343:                            // %__internal_powf_corner_cases.exit.i763
                                        //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1514, %f464, %f468;
	mov.b32 	%r715, %f1514;
	setp.lt.s32 	%p261, %r715, 2139095040;
	@%p261 bra 	$L__BB0_350;
// %bb.344:                             // %__nv_isnanf.exit.i.i768
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.num.f32 	%p262, %f464, %f464;
	setp.num.f32 	%p263, %f468, %f468;
	and.pred  	%p264, %p262, %p263;
	@%p264 bra 	$L__BB0_346;
// %bb.345:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f3731, %f3650, %f3658;
	bra.uni 	$L__BB0_350;
$L__BB0_346:                            // %__nv_isinff.exit8.i.i770
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p265, %f468, 0f7F800000;
	@%p265 bra 	$L__BB0_348;
// %bb.347:                             // %__nv_fabsf.exit5.i.i774
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.gt.f32 	%p268, %f464, 0f3F800000;
	selp.b32 	%r719, 2139095040, 0, %p268;
	setp.lt.f32 	%p269, %f3658, 0f00000000;
	xor.b32  	%r720, %r719, 2139095040;
	selp.b32 	%r721, %r720, %r719, %p269;
	setp.eq.f32 	%p270, %f3650, 0fBF800000;
	mov.b32 	%f1515, %r721;
	selp.f32 	%f3731, 0f3F800000, %f1515, %p270;
	bra.uni 	$L__BB0_350;
$L__BB0_348:                            // %__nv_isinff.exit.i.i771
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p266, %f464, 0f7F800000;
	@%p266 bra 	$L__BB0_350;
// %bb.349:                             //   in Loop: Header=BB0_3 Depth=1
	setp.ge.f32 	%p267, %f3658, 0f00000000;
	selp.b32 	%r716, 2139095040, 0, %p267;
	or.b32  	%r717, %r716, -2147483648;
	selp.b32 	%r718, %r717, %r716, %p3;
	mov.b32 	%f3731, %r718;
$L__BB0_350:                            // %__nv_powf.exit779
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f1519, %f3659, 0f3F000000;
	cvt.rzi.f32.f32 	%f1520, %f1519;
	add.rn.f32 	%f1521, %f1520, %f1520;
	sub.rn.f32 	%f1522, %f3659, %f1521;
	abs.f32 	%f1523, %f1522;
	setp.eq.f32 	%p273, %f1523, 0f3F800000;
	abs.f32 	%f478, %f3651;
	abs.f32 	%f482, %f3659;
	setp.lt.f32 	%p276, %f3651, 0f00000000;
	and.pred  	%p4, %p276, %p273;
	setp.neu.f32 	%p277, %f3651, 0f00000000;
	@%p277 bra 	$L__BB0_352;
// %bb.351:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1599, %f3651, %f3651;
	mov.b32 	%r728, %f1599;
	selp.b32 	%r729, %r728, 0, %p273;
	setp.lt.f32 	%p287, %f3659, 0f00000000;
	or.b32  	%r730, %r729, 2139095040;
	selp.b32 	%r731, %r730, %r729, %p287;
	mov.b32 	%f3733, %r731;
	bra.uni 	$L__BB0_353;
$L__BB0_352:                            //   in Loop: Header=BB0_3 Depth=1
	setp.lt.f32 	%p274, %f478, 0f00800000;
	mul.rn.f32 	%f1524, %f478, 0f4B800000;
	selp.f32 	%f1525, %f1524, %f478, %p274;
	mov.b32 	%r356, %f1525;
	and.b32  	%r722, %r356, 8388607;
	or.b32  	%r723, %r722, 1065353216;
	mov.b32 	%f479, %r723;
	setp.gt.f32 	%p275, %f479, 0f3FB504F3;
	mul.rn.f32 	%f1526, %f479, 0f3F000000;
	selp.f32 	%f480, %f1526, %f479, %p275;
	add.rn.f32 	%f1517, %f480, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1516,%f1517;
	// end inline asm
	setp.gt.f32 	%p281, %f482, 0f77F684DF;
	mul.rn.f32 	%f1527, %f3659, 0f39000000;
	selp.f32 	%f1528, %f1527, %f3659, %p281;
	selp.f32 	%f1529, 0fC3170000, 0fC2FE0000, %p274;
	shr.u32 	%r724, %r356, 23;
	cvt.rn.f32.u32 	%f1530, %r724;
	add.rn.f32 	%f1531, %f1529, %f1530;
	add.rn.f32 	%f1532, %f1531, 0f3F800000;
	selp.f32 	%f1533, %f1532, %f1531, %p275;
	mov.f32 	%f1534, 0f3F317200;
	mul.rn.f32 	%f1535, %f1533, %f1534;
	add.rn.f32 	%f1536, %f480, 0fBF800000;
	add.rn.f32 	%f1537, %f1536, %f1536;
	mul.rn.f32 	%f1538, %f1537, %f1516;
	mul.rn.f32 	%f1539, %f1538, %f1538;
	fma.rn.f32 	%f1540, %f1539, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1541, %f1540, %f1539, 0f3DAAAABD;
	mul.rn.f32 	%f1542, %f1541, %f1539;
	mul.rn.f32 	%f1543, %f1542, %f1538;
	add.rn.f32 	%f1544, %f1538, %f1543;
	sub.rn.f32 	%f1545, %f1538, %f1544;
	add.rn.f32 	%f1546, %f1543, %f1545;
	neg.f32 	%f1547, %f1538;
	sub.rn.f32 	%f1548, %f1536, %f1538;
	add.rn.f32 	%f1549, %f1548, %f1548;
	fma.rn.f32 	%f1550, %f1547, %f1536, %f1549;
	mul.rn.f32 	%f1551, %f1516, %f1550;
	add.rn.f32 	%f1552, %f1551, %f1546;
	add.rn.f32 	%f1553, %f1544, %f1552;
	add.rn.f32 	%f1554, %f1535, %f1553;
	sub.rn.f32 	%f1555, %f1535, %f1554;
	add.rn.f32 	%f1556, %f1553, %f1555;
	sub.rn.f32 	%f1557, %f1544, %f1553;
	add.rn.f32 	%f1558, %f1552, %f1557;
	add.rn.f32 	%f1559, %f1558, %f1556;
	mov.f32 	%f1560, 0f35BFBE8E;
	mul.rn.f32 	%f1561, %f1533, %f1560;
	add.rn.f32 	%f1562, %f1561, %f1559;
	add.rn.f32 	%f1563, %f1554, %f1562;
	mul.rn.f32 	%f1564, %f1528, %f1563;
	sub.rn.f32 	%f1565, %f1554, %f1563;
	add.rn.f32 	%f1566, %f1562, %f1565;
	neg.f32 	%f1567, %f1564;
	fma.rn.f32 	%f1568, %f1528, %f1563, %f1567;
	fma.rn.f32 	%f1569, %f1528, %f1566, %f1568;
	fma.rn.f32 	%f1570, %f1563, 0f00000000, %f1569;
	add.rn.f32 	%f1571, %f1564, %f1570;
	mov.b32 	%r725, %f1571;
	setp.eq.s32 	%p282, %r725, 1118925336;
	selp.f32 	%f1572, 0f42B17217, %f1571, %p282;
	neg.f32 	%f1573, %f1571;
	add.rn.f32 	%f1574, %f1564, %f1573;
	add.rn.f32 	%f1575, %f1574, %f1570;
	add.rn.f32 	%f1576, %f1575, 0f37000000;
	selp.f32 	%f1577, %f1576, %f1575, %p282;
	mov.f32 	%f1578, 0f3FB8AA3B;
	mul.rn.f32 	%f1579, %f1572, %f1578;
	cvt.rzi.f32.f32 	%f1580, %f1579;
	abs.f32 	%f1581, %f1580;
	setp.gt.f32 	%p283, %f1581, 0f42FC0000;
	mov.f32 	%f1582, 0f42FC0000;
	copysign.f32 	%f1583, %f1580, %f1582;
	selp.f32 	%f1584, %f1583, %f1580, %p283;
	fma.rn.f32 	%f1585, %f1584, 0fBF317218, %f1572;
	fma.rn.f32 	%f1586, %f1584, 0f3102E308, %f1585;
	mul.rn.f32 	%f1587, %f1586, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1588, %f1587;
	add.rn.f32 	%f1589, %f1584, 0f4B40007F;
	mov.b32 	%r726, %f1589;
	shl.b32 	%r727, %r726, 23;
	mov.b32 	%f1590, %r727;
	mul.rn.f32 	%f1591, %f1588, %f1590;
	setp.neu.f32 	%p284, %f1591, 0f7F800000;
	fma.rn.f32 	%f1592, %f1591, %f1577, %f1591;
	selp.f32 	%f1593, %f1592, 0f7F800000, %p284;
	neg.f32 	%f1594, %f1593;
	selp.f32 	%f1595, %f1594, %f1593, %p4;
	cvt.rzi.f32.f32 	%f1596, %f3659;
	setp.neu.f32 	%p285, %f3659, %f1596;
	selp.f32 	%f1598, 0f7FFFFFFF, %f1595, %p285;
	selp.f32 	%f3733, %f1598, %f1595, %p276;
$L__BB0_353:                            // %__internal_powf_corner_cases.exit.i793
                                        //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1600, %f478, %f482;
	mov.b32 	%r732, %f1600;
	setp.lt.s32 	%p288, %r732, 2139095040;
	@%p288 bra 	$L__BB0_360;
// %bb.354:                             // %__nv_isnanf.exit.i.i798
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.num.f32 	%p289, %f478, %f478;
	setp.num.f32 	%p290, %f482, %f482;
	and.pred  	%p291, %p289, %p290;
	@%p291 bra 	$L__BB0_356;
// %bb.355:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f3733, %f3651, %f3659;
	bra.uni 	$L__BB0_360;
$L__BB0_356:                            // %__nv_isinff.exit8.i.i800
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p292, %f482, 0f7F800000;
	@%p292 bra 	$L__BB0_358;
// %bb.357:                             // %__nv_fabsf.exit5.i.i804
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.gt.f32 	%p295, %f478, 0f3F800000;
	selp.b32 	%r736, 2139095040, 0, %p295;
	setp.lt.f32 	%p296, %f3659, 0f00000000;
	xor.b32  	%r737, %r736, 2139095040;
	selp.b32 	%r738, %r737, %r736, %p296;
	setp.eq.f32 	%p297, %f3651, 0fBF800000;
	mov.b32 	%f1601, %r738;
	selp.f32 	%f3733, 0f3F800000, %f1601, %p297;
	bra.uni 	$L__BB0_360;
$L__BB0_358:                            // %__nv_isinff.exit.i.i801
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p293, %f478, 0f7F800000;
	@%p293 bra 	$L__BB0_360;
// %bb.359:                             //   in Loop: Header=BB0_3 Depth=1
	setp.ge.f32 	%p294, %f3659, 0f00000000;
	selp.b32 	%r733, 2139095040, 0, %p294;
	or.b32  	%r734, %r733, -2147483648;
	selp.b32 	%r735, %r734, %r733, %p4;
	mov.b32 	%f3733, %r735;
$L__BB0_360:                            // %__nv_powf.exit809
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f1605, %f3660, 0f3F000000;
	cvt.rzi.f32.f32 	%f1606, %f1605;
	add.rn.f32 	%f1607, %f1606, %f1606;
	sub.rn.f32 	%f1608, %f3660, %f1607;
	abs.f32 	%f1609, %f1608;
	setp.eq.f32 	%p300, %f1609, 0f3F800000;
	abs.f32 	%f492, %f3652;
	abs.f32 	%f496, %f3660;
	setp.lt.f32 	%p303, %f3652, 0f00000000;
	and.pred  	%p5, %p303, %p300;
	setp.neu.f32 	%p304, %f3652, 0f00000000;
	@%p304 bra 	$L__BB0_362;
// %bb.361:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1685, %f3652, %f3652;
	mov.b32 	%r745, %f1685;
	selp.b32 	%r746, %r745, 0, %p300;
	setp.lt.f32 	%p314, %f3660, 0f00000000;
	or.b32  	%r747, %r746, 2139095040;
	selp.b32 	%r748, %r747, %r746, %p314;
	mov.b32 	%f3735, %r748;
	bra.uni 	$L__BB0_363;
$L__BB0_362:                            //   in Loop: Header=BB0_3 Depth=1
	setp.lt.f32 	%p301, %f492, 0f00800000;
	mul.rn.f32 	%f1610, %f492, 0f4B800000;
	selp.f32 	%f1611, %f1610, %f492, %p301;
	mov.b32 	%r357, %f1611;
	and.b32  	%r739, %r357, 8388607;
	or.b32  	%r740, %r739, 1065353216;
	mov.b32 	%f493, %r740;
	setp.gt.f32 	%p302, %f493, 0f3FB504F3;
	mul.rn.f32 	%f1612, %f493, 0f3F000000;
	selp.f32 	%f494, %f1612, %f493, %p302;
	add.rn.f32 	%f1603, %f494, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1602,%f1603;
	// end inline asm
	setp.gt.f32 	%p308, %f496, 0f77F684DF;
	mul.rn.f32 	%f1613, %f3660, 0f39000000;
	selp.f32 	%f1614, %f1613, %f3660, %p308;
	selp.f32 	%f1615, 0fC3170000, 0fC2FE0000, %p301;
	shr.u32 	%r741, %r357, 23;
	cvt.rn.f32.u32 	%f1616, %r741;
	add.rn.f32 	%f1617, %f1615, %f1616;
	add.rn.f32 	%f1618, %f1617, 0f3F800000;
	selp.f32 	%f1619, %f1618, %f1617, %p302;
	mov.f32 	%f1620, 0f3F317200;
	mul.rn.f32 	%f1621, %f1619, %f1620;
	add.rn.f32 	%f1622, %f494, 0fBF800000;
	add.rn.f32 	%f1623, %f1622, %f1622;
	mul.rn.f32 	%f1624, %f1623, %f1602;
	mul.rn.f32 	%f1625, %f1624, %f1624;
	fma.rn.f32 	%f1626, %f1625, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1627, %f1626, %f1625, 0f3DAAAABD;
	mul.rn.f32 	%f1628, %f1627, %f1625;
	mul.rn.f32 	%f1629, %f1628, %f1624;
	add.rn.f32 	%f1630, %f1624, %f1629;
	sub.rn.f32 	%f1631, %f1624, %f1630;
	add.rn.f32 	%f1632, %f1629, %f1631;
	neg.f32 	%f1633, %f1624;
	sub.rn.f32 	%f1634, %f1622, %f1624;
	add.rn.f32 	%f1635, %f1634, %f1634;
	fma.rn.f32 	%f1636, %f1633, %f1622, %f1635;
	mul.rn.f32 	%f1637, %f1602, %f1636;
	add.rn.f32 	%f1638, %f1637, %f1632;
	add.rn.f32 	%f1639, %f1630, %f1638;
	add.rn.f32 	%f1640, %f1621, %f1639;
	sub.rn.f32 	%f1641, %f1621, %f1640;
	add.rn.f32 	%f1642, %f1639, %f1641;
	sub.rn.f32 	%f1643, %f1630, %f1639;
	add.rn.f32 	%f1644, %f1638, %f1643;
	add.rn.f32 	%f1645, %f1644, %f1642;
	mov.f32 	%f1646, 0f35BFBE8E;
	mul.rn.f32 	%f1647, %f1619, %f1646;
	add.rn.f32 	%f1648, %f1647, %f1645;
	add.rn.f32 	%f1649, %f1640, %f1648;
	mul.rn.f32 	%f1650, %f1614, %f1649;
	sub.rn.f32 	%f1651, %f1640, %f1649;
	add.rn.f32 	%f1652, %f1648, %f1651;
	neg.f32 	%f1653, %f1650;
	fma.rn.f32 	%f1654, %f1614, %f1649, %f1653;
	fma.rn.f32 	%f1655, %f1614, %f1652, %f1654;
	fma.rn.f32 	%f1656, %f1649, 0f00000000, %f1655;
	add.rn.f32 	%f1657, %f1650, %f1656;
	mov.b32 	%r742, %f1657;
	setp.eq.s32 	%p309, %r742, 1118925336;
	selp.f32 	%f1658, 0f42B17217, %f1657, %p309;
	neg.f32 	%f1659, %f1657;
	add.rn.f32 	%f1660, %f1650, %f1659;
	add.rn.f32 	%f1661, %f1660, %f1656;
	add.rn.f32 	%f1662, %f1661, 0f37000000;
	selp.f32 	%f1663, %f1662, %f1661, %p309;
	mov.f32 	%f1664, 0f3FB8AA3B;
	mul.rn.f32 	%f1665, %f1658, %f1664;
	cvt.rzi.f32.f32 	%f1666, %f1665;
	abs.f32 	%f1667, %f1666;
	setp.gt.f32 	%p310, %f1667, 0f42FC0000;
	mov.f32 	%f1668, 0f42FC0000;
	copysign.f32 	%f1669, %f1666, %f1668;
	selp.f32 	%f1670, %f1669, %f1666, %p310;
	fma.rn.f32 	%f1671, %f1670, 0fBF317218, %f1658;
	fma.rn.f32 	%f1672, %f1670, 0f3102E308, %f1671;
	mul.rn.f32 	%f1673, %f1672, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1674, %f1673;
	add.rn.f32 	%f1675, %f1670, 0f4B40007F;
	mov.b32 	%r743, %f1675;
	shl.b32 	%r744, %r743, 23;
	mov.b32 	%f1676, %r744;
	mul.rn.f32 	%f1677, %f1674, %f1676;
	setp.neu.f32 	%p311, %f1677, 0f7F800000;
	fma.rn.f32 	%f1678, %f1677, %f1663, %f1677;
	selp.f32 	%f1679, %f1678, 0f7F800000, %p311;
	neg.f32 	%f1680, %f1679;
	selp.f32 	%f1681, %f1680, %f1679, %p5;
	cvt.rzi.f32.f32 	%f1682, %f3660;
	setp.neu.f32 	%p312, %f3660, %f1682;
	selp.f32 	%f1684, 0f7FFFFFFF, %f1681, %p312;
	selp.f32 	%f3735, %f1684, %f1681, %p303;
$L__BB0_363:                            // %__internal_powf_corner_cases.exit.i823
                                        //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1686, %f492, %f496;
	mov.b32 	%r749, %f1686;
	setp.lt.s32 	%p315, %r749, 2139095040;
	@%p315 bra 	$L__BB0_370;
// %bb.364:                             // %__nv_isnanf.exit.i.i828
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.num.f32 	%p316, %f492, %f492;
	setp.num.f32 	%p317, %f496, %f496;
	and.pred  	%p318, %p316, %p317;
	@%p318 bra 	$L__BB0_366;
// %bb.365:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f3735, %f3652, %f3660;
	bra.uni 	$L__BB0_370;
$L__BB0_366:                            // %__nv_isinff.exit8.i.i830
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p319, %f496, 0f7F800000;
	@%p319 bra 	$L__BB0_368;
// %bb.367:                             // %__nv_fabsf.exit5.i.i834
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.gt.f32 	%p322, %f492, 0f3F800000;
	selp.b32 	%r753, 2139095040, 0, %p322;
	setp.lt.f32 	%p323, %f3660, 0f00000000;
	xor.b32  	%r754, %r753, 2139095040;
	selp.b32 	%r755, %r754, %r753, %p323;
	setp.eq.f32 	%p324, %f3652, 0fBF800000;
	mov.b32 	%f1687, %r755;
	selp.f32 	%f3735, 0f3F800000, %f1687, %p324;
	bra.uni 	$L__BB0_370;
$L__BB0_368:                            // %__nv_isinff.exit.i.i831
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p320, %f492, 0f7F800000;
	@%p320 bra 	$L__BB0_370;
// %bb.369:                             //   in Loop: Header=BB0_3 Depth=1
	setp.ge.f32 	%p321, %f3660, 0f00000000;
	selp.b32 	%r750, 2139095040, 0, %p321;
	or.b32  	%r751, %r750, -2147483648;
	selp.b32 	%r752, %r751, %r750, %p5;
	mov.b32 	%f3735, %r752;
$L__BB0_370:                            // %__nv_powf.exit839
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f1691, %f3661, 0f3F000000;
	cvt.rzi.f32.f32 	%f1692, %f1691;
	add.rn.f32 	%f1693, %f1692, %f1692;
	sub.rn.f32 	%f1694, %f3661, %f1693;
	abs.f32 	%f1695, %f1694;
	setp.eq.f32 	%p327, %f1695, 0f3F800000;
	abs.f32 	%f506, %f3653;
	abs.f32 	%f510, %f3661;
	setp.lt.f32 	%p330, %f3653, 0f00000000;
	and.pred  	%p6, %p330, %p327;
	setp.neu.f32 	%p331, %f3653, 0f00000000;
	@%p331 bra 	$L__BB0_372;
// %bb.371:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1771, %f3653, %f3653;
	mov.b32 	%r762, %f1771;
	selp.b32 	%r763, %r762, 0, %p327;
	setp.lt.f32 	%p341, %f3661, 0f00000000;
	or.b32  	%r764, %r763, 2139095040;
	selp.b32 	%r765, %r764, %r763, %p341;
	mov.b32 	%f3737, %r765;
	bra.uni 	$L__BB0_373;
$L__BB0_372:                            //   in Loop: Header=BB0_3 Depth=1
	setp.lt.f32 	%p328, %f506, 0f00800000;
	mul.rn.f32 	%f1696, %f506, 0f4B800000;
	selp.f32 	%f1697, %f1696, %f506, %p328;
	mov.b32 	%r358, %f1697;
	and.b32  	%r756, %r358, 8388607;
	or.b32  	%r757, %r756, 1065353216;
	mov.b32 	%f507, %r757;
	setp.gt.f32 	%p329, %f507, 0f3FB504F3;
	mul.rn.f32 	%f1698, %f507, 0f3F000000;
	selp.f32 	%f508, %f1698, %f507, %p329;
	add.rn.f32 	%f1689, %f508, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1688,%f1689;
	// end inline asm
	setp.gt.f32 	%p335, %f510, 0f77F684DF;
	mul.rn.f32 	%f1699, %f3661, 0f39000000;
	selp.f32 	%f1700, %f1699, %f3661, %p335;
	selp.f32 	%f1701, 0fC3170000, 0fC2FE0000, %p328;
	shr.u32 	%r758, %r358, 23;
	cvt.rn.f32.u32 	%f1702, %r758;
	add.rn.f32 	%f1703, %f1701, %f1702;
	add.rn.f32 	%f1704, %f1703, 0f3F800000;
	selp.f32 	%f1705, %f1704, %f1703, %p329;
	mov.f32 	%f1706, 0f3F317200;
	mul.rn.f32 	%f1707, %f1705, %f1706;
	add.rn.f32 	%f1708, %f508, 0fBF800000;
	add.rn.f32 	%f1709, %f1708, %f1708;
	mul.rn.f32 	%f1710, %f1709, %f1688;
	mul.rn.f32 	%f1711, %f1710, %f1710;
	fma.rn.f32 	%f1712, %f1711, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1713, %f1712, %f1711, 0f3DAAAABD;
	mul.rn.f32 	%f1714, %f1713, %f1711;
	mul.rn.f32 	%f1715, %f1714, %f1710;
	add.rn.f32 	%f1716, %f1710, %f1715;
	sub.rn.f32 	%f1717, %f1710, %f1716;
	add.rn.f32 	%f1718, %f1715, %f1717;
	neg.f32 	%f1719, %f1710;
	sub.rn.f32 	%f1720, %f1708, %f1710;
	add.rn.f32 	%f1721, %f1720, %f1720;
	fma.rn.f32 	%f1722, %f1719, %f1708, %f1721;
	mul.rn.f32 	%f1723, %f1688, %f1722;
	add.rn.f32 	%f1724, %f1723, %f1718;
	add.rn.f32 	%f1725, %f1716, %f1724;
	add.rn.f32 	%f1726, %f1707, %f1725;
	sub.rn.f32 	%f1727, %f1707, %f1726;
	add.rn.f32 	%f1728, %f1725, %f1727;
	sub.rn.f32 	%f1729, %f1716, %f1725;
	add.rn.f32 	%f1730, %f1724, %f1729;
	add.rn.f32 	%f1731, %f1730, %f1728;
	mov.f32 	%f1732, 0f35BFBE8E;
	mul.rn.f32 	%f1733, %f1705, %f1732;
	add.rn.f32 	%f1734, %f1733, %f1731;
	add.rn.f32 	%f1735, %f1726, %f1734;
	mul.rn.f32 	%f1736, %f1700, %f1735;
	sub.rn.f32 	%f1737, %f1726, %f1735;
	add.rn.f32 	%f1738, %f1734, %f1737;
	neg.f32 	%f1739, %f1736;
	fma.rn.f32 	%f1740, %f1700, %f1735, %f1739;
	fma.rn.f32 	%f1741, %f1700, %f1738, %f1740;
	fma.rn.f32 	%f1742, %f1735, 0f00000000, %f1741;
	add.rn.f32 	%f1743, %f1736, %f1742;
	mov.b32 	%r759, %f1743;
	setp.eq.s32 	%p336, %r759, 1118925336;
	selp.f32 	%f1744, 0f42B17217, %f1743, %p336;
	neg.f32 	%f1745, %f1743;
	add.rn.f32 	%f1746, %f1736, %f1745;
	add.rn.f32 	%f1747, %f1746, %f1742;
	add.rn.f32 	%f1748, %f1747, 0f37000000;
	selp.f32 	%f1749, %f1748, %f1747, %p336;
	mov.f32 	%f1750, 0f3FB8AA3B;
	mul.rn.f32 	%f1751, %f1744, %f1750;
	cvt.rzi.f32.f32 	%f1752, %f1751;
	abs.f32 	%f1753, %f1752;
	setp.gt.f32 	%p337, %f1753, 0f42FC0000;
	mov.f32 	%f1754, 0f42FC0000;
	copysign.f32 	%f1755, %f1752, %f1754;
	selp.f32 	%f1756, %f1755, %f1752, %p337;
	fma.rn.f32 	%f1757, %f1756, 0fBF317218, %f1744;
	fma.rn.f32 	%f1758, %f1756, 0f3102E308, %f1757;
	mul.rn.f32 	%f1759, %f1758, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1760, %f1759;
	add.rn.f32 	%f1761, %f1756, 0f4B40007F;
	mov.b32 	%r760, %f1761;
	shl.b32 	%r761, %r760, 23;
	mov.b32 	%f1762, %r761;
	mul.rn.f32 	%f1763, %f1760, %f1762;
	setp.neu.f32 	%p338, %f1763, 0f7F800000;
	fma.rn.f32 	%f1764, %f1763, %f1749, %f1763;
	selp.f32 	%f1765, %f1764, 0f7F800000, %p338;
	neg.f32 	%f1766, %f1765;
	selp.f32 	%f1767, %f1766, %f1765, %p6;
	cvt.rzi.f32.f32 	%f1768, %f3661;
	setp.neu.f32 	%p339, %f3661, %f1768;
	selp.f32 	%f1770, 0f7FFFFFFF, %f1767, %p339;
	selp.f32 	%f3737, %f1770, %f1767, %p330;
$L__BB0_373:                            // %__internal_powf_corner_cases.exit.i853
                                        //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1772, %f506, %f510;
	mov.b32 	%r766, %f1772;
	setp.lt.s32 	%p342, %r766, 2139095040;
	@%p342 bra 	$L__BB0_380;
// %bb.374:                             // %__nv_isnanf.exit.i.i858
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.num.f32 	%p343, %f506, %f506;
	setp.num.f32 	%p344, %f510, %f510;
	and.pred  	%p345, %p343, %p344;
	@%p345 bra 	$L__BB0_376;
// %bb.375:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f3737, %f3653, %f3661;
	bra.uni 	$L__BB0_380;
$L__BB0_376:                            // %__nv_isinff.exit8.i.i860
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p346, %f510, 0f7F800000;
	@%p346 bra 	$L__BB0_378;
// %bb.377:                             // %__nv_fabsf.exit5.i.i864
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.gt.f32 	%p349, %f506, 0f3F800000;
	selp.b32 	%r770, 2139095040, 0, %p349;
	setp.lt.f32 	%p350, %f3661, 0f00000000;
	xor.b32  	%r771, %r770, 2139095040;
	selp.b32 	%r772, %r771, %r770, %p350;
	setp.eq.f32 	%p351, %f3653, 0fBF800000;
	mov.b32 	%f1773, %r772;
	selp.f32 	%f3737, 0f3F800000, %f1773, %p351;
	bra.uni 	$L__BB0_380;
$L__BB0_378:                            // %__nv_isinff.exit.i.i861
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p347, %f506, 0f7F800000;
	@%p347 bra 	$L__BB0_380;
// %bb.379:                             //   in Loop: Header=BB0_3 Depth=1
	setp.ge.f32 	%p348, %f3661, 0f00000000;
	selp.b32 	%r767, 2139095040, 0, %p348;
	or.b32  	%r768, %r767, -2147483648;
	selp.b32 	%r769, %r768, %r767, %p6;
	mov.b32 	%f3737, %r769;
$L__BB0_380:                            // %__nv_powf.exit869
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f1777, %f3662, 0f3F000000;
	cvt.rzi.f32.f32 	%f1778, %f1777;
	add.rn.f32 	%f1779, %f1778, %f1778;
	sub.rn.f32 	%f1780, %f3662, %f1779;
	abs.f32 	%f1781, %f1780;
	setp.eq.f32 	%p354, %f1781, 0f3F800000;
	abs.f32 	%f520, %f3654;
	abs.f32 	%f524, %f3662;
	setp.lt.f32 	%p357, %f3654, 0f00000000;
	and.pred  	%p7, %p357, %p354;
	setp.neu.f32 	%p358, %f3654, 0f00000000;
	@%p358 bra 	$L__BB0_382;
// %bb.381:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1857, %f3654, %f3654;
	mov.b32 	%r779, %f1857;
	selp.b32 	%r780, %r779, 0, %p354;
	setp.lt.f32 	%p368, %f3662, 0f00000000;
	or.b32  	%r781, %r780, 2139095040;
	selp.b32 	%r782, %r781, %r780, %p368;
	mov.b32 	%f3739, %r782;
	bra.uni 	$L__BB0_383;
$L__BB0_382:                            //   in Loop: Header=BB0_3 Depth=1
	setp.lt.f32 	%p355, %f520, 0f00800000;
	mul.rn.f32 	%f1782, %f520, 0f4B800000;
	selp.f32 	%f1783, %f1782, %f520, %p355;
	mov.b32 	%r359, %f1783;
	and.b32  	%r773, %r359, 8388607;
	or.b32  	%r774, %r773, 1065353216;
	mov.b32 	%f521, %r774;
	setp.gt.f32 	%p356, %f521, 0f3FB504F3;
	mul.rn.f32 	%f1784, %f521, 0f3F000000;
	selp.f32 	%f522, %f1784, %f521, %p356;
	add.rn.f32 	%f1775, %f522, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1774,%f1775;
	// end inline asm
	setp.gt.f32 	%p362, %f524, 0f77F684DF;
	mul.rn.f32 	%f1785, %f3662, 0f39000000;
	selp.f32 	%f1786, %f1785, %f3662, %p362;
	selp.f32 	%f1787, 0fC3170000, 0fC2FE0000, %p355;
	shr.u32 	%r775, %r359, 23;
	cvt.rn.f32.u32 	%f1788, %r775;
	add.rn.f32 	%f1789, %f1787, %f1788;
	add.rn.f32 	%f1790, %f1789, 0f3F800000;
	selp.f32 	%f1791, %f1790, %f1789, %p356;
	mov.f32 	%f1792, 0f3F317200;
	mul.rn.f32 	%f1793, %f1791, %f1792;
	add.rn.f32 	%f1794, %f522, 0fBF800000;
	add.rn.f32 	%f1795, %f1794, %f1794;
	mul.rn.f32 	%f1796, %f1795, %f1774;
	mul.rn.f32 	%f1797, %f1796, %f1796;
	fma.rn.f32 	%f1798, %f1797, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1799, %f1798, %f1797, 0f3DAAAABD;
	mul.rn.f32 	%f1800, %f1799, %f1797;
	mul.rn.f32 	%f1801, %f1800, %f1796;
	add.rn.f32 	%f1802, %f1796, %f1801;
	sub.rn.f32 	%f1803, %f1796, %f1802;
	add.rn.f32 	%f1804, %f1801, %f1803;
	neg.f32 	%f1805, %f1796;
	sub.rn.f32 	%f1806, %f1794, %f1796;
	add.rn.f32 	%f1807, %f1806, %f1806;
	fma.rn.f32 	%f1808, %f1805, %f1794, %f1807;
	mul.rn.f32 	%f1809, %f1774, %f1808;
	add.rn.f32 	%f1810, %f1809, %f1804;
	add.rn.f32 	%f1811, %f1802, %f1810;
	add.rn.f32 	%f1812, %f1793, %f1811;
	sub.rn.f32 	%f1813, %f1793, %f1812;
	add.rn.f32 	%f1814, %f1811, %f1813;
	sub.rn.f32 	%f1815, %f1802, %f1811;
	add.rn.f32 	%f1816, %f1810, %f1815;
	add.rn.f32 	%f1817, %f1816, %f1814;
	mov.f32 	%f1818, 0f35BFBE8E;
	mul.rn.f32 	%f1819, %f1791, %f1818;
	add.rn.f32 	%f1820, %f1819, %f1817;
	add.rn.f32 	%f1821, %f1812, %f1820;
	mul.rn.f32 	%f1822, %f1786, %f1821;
	sub.rn.f32 	%f1823, %f1812, %f1821;
	add.rn.f32 	%f1824, %f1820, %f1823;
	neg.f32 	%f1825, %f1822;
	fma.rn.f32 	%f1826, %f1786, %f1821, %f1825;
	fma.rn.f32 	%f1827, %f1786, %f1824, %f1826;
	fma.rn.f32 	%f1828, %f1821, 0f00000000, %f1827;
	add.rn.f32 	%f1829, %f1822, %f1828;
	mov.b32 	%r776, %f1829;
	setp.eq.s32 	%p363, %r776, 1118925336;
	selp.f32 	%f1830, 0f42B17217, %f1829, %p363;
	neg.f32 	%f1831, %f1829;
	add.rn.f32 	%f1832, %f1822, %f1831;
	add.rn.f32 	%f1833, %f1832, %f1828;
	add.rn.f32 	%f1834, %f1833, 0f37000000;
	selp.f32 	%f1835, %f1834, %f1833, %p363;
	mov.f32 	%f1836, 0f3FB8AA3B;
	mul.rn.f32 	%f1837, %f1830, %f1836;
	cvt.rzi.f32.f32 	%f1838, %f1837;
	abs.f32 	%f1839, %f1838;
	setp.gt.f32 	%p364, %f1839, 0f42FC0000;
	mov.f32 	%f1840, 0f42FC0000;
	copysign.f32 	%f1841, %f1838, %f1840;
	selp.f32 	%f1842, %f1841, %f1838, %p364;
	fma.rn.f32 	%f1843, %f1842, 0fBF317218, %f1830;
	fma.rn.f32 	%f1844, %f1842, 0f3102E308, %f1843;
	mul.rn.f32 	%f1845, %f1844, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1846, %f1845;
	add.rn.f32 	%f1847, %f1842, 0f4B40007F;
	mov.b32 	%r777, %f1847;
	shl.b32 	%r778, %r777, 23;
	mov.b32 	%f1848, %r778;
	mul.rn.f32 	%f1849, %f1846, %f1848;
	setp.neu.f32 	%p365, %f1849, 0f7F800000;
	fma.rn.f32 	%f1850, %f1849, %f1835, %f1849;
	selp.f32 	%f1851, %f1850, 0f7F800000, %p365;
	neg.f32 	%f1852, %f1851;
	selp.f32 	%f1853, %f1852, %f1851, %p7;
	cvt.rzi.f32.f32 	%f1854, %f3662;
	setp.neu.f32 	%p366, %f3662, %f1854;
	selp.f32 	%f1856, 0f7FFFFFFF, %f1853, %p366;
	selp.f32 	%f3739, %f1856, %f1853, %p357;
$L__BB0_383:                            // %__internal_powf_corner_cases.exit.i883
                                        //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1858, %f520, %f524;
	mov.b32 	%r783, %f1858;
	setp.lt.s32 	%p369, %r783, 2139095040;
	@%p369 bra 	$L__BB0_390;
// %bb.384:                             // %__nv_isnanf.exit.i.i888
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.num.f32 	%p370, %f520, %f520;
	setp.num.f32 	%p371, %f524, %f524;
	and.pred  	%p372, %p370, %p371;
	@%p372 bra 	$L__BB0_386;
// %bb.385:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f3739, %f3654, %f3662;
	bra.uni 	$L__BB0_390;
$L__BB0_386:                            // %__nv_isinff.exit8.i.i890
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p373, %f524, 0f7F800000;
	@%p373 bra 	$L__BB0_388;
// %bb.387:                             // %__nv_fabsf.exit5.i.i894
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.gt.f32 	%p376, %f520, 0f3F800000;
	selp.b32 	%r787, 2139095040, 0, %p376;
	setp.lt.f32 	%p377, %f3662, 0f00000000;
	xor.b32  	%r788, %r787, 2139095040;
	selp.b32 	%r789, %r788, %r787, %p377;
	setp.eq.f32 	%p378, %f3654, 0fBF800000;
	mov.b32 	%f1859, %r789;
	selp.f32 	%f3739, 0f3F800000, %f1859, %p378;
	bra.uni 	$L__BB0_390;
$L__BB0_388:                            // %__nv_isinff.exit.i.i891
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p374, %f520, 0f7F800000;
	@%p374 bra 	$L__BB0_390;
// %bb.389:                             //   in Loop: Header=BB0_3 Depth=1
	setp.ge.f32 	%p375, %f3662, 0f00000000;
	selp.b32 	%r784, 2139095040, 0, %p375;
	or.b32  	%r785, %r784, -2147483648;
	selp.b32 	%r786, %r785, %r784, %p7;
	mov.b32 	%f3739, %r786;
$L__BB0_390:                            // %__nv_powf.exit899
                                        //   in Loop: Header=BB0_3 Depth=1
	mul.rn.f32 	%f1863, %f3663, 0f3F000000;
	cvt.rzi.f32.f32 	%f1864, %f1863;
	add.rn.f32 	%f1865, %f1864, %f1864;
	sub.rn.f32 	%f1866, %f3663, %f1865;
	abs.f32 	%f1867, %f1866;
	setp.eq.f32 	%p381, %f1867, 0f3F800000;
	abs.f32 	%f534, %f8;
	abs.f32 	%f538, %f3663;
	setp.lt.f32 	%p384, %f8, 0f00000000;
	and.pred  	%p8, %p384, %p381;
	setp.neu.f32 	%p385, %f8, 0f00000000;
	@%p385 bra 	$L__BB0_392;
// %bb.391:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f1943, %f8, %f8;
	mov.b32 	%r796, %f1943;
	selp.b32 	%r797, %r796, 0, %p381;
	setp.lt.f32 	%p395, %f3663, 0f00000000;
	or.b32  	%r798, %r797, 2139095040;
	selp.b32 	%r799, %r798, %r797, %p395;
	mov.b32 	%f3741, %r799;
	bra.uni 	$L__BB0_393;
$L__BB0_392:                            //   in Loop: Header=BB0_3 Depth=1
	setp.lt.f32 	%p382, %f534, 0f00800000;
	mul.rn.f32 	%f1868, %f534, 0f4B800000;
	selp.f32 	%f1869, %f1868, %f534, %p382;
	mov.b32 	%r360, %f1869;
	and.b32  	%r790, %r360, 8388607;
	or.b32  	%r791, %r790, 1065353216;
	mov.b32 	%f535, %r791;
	setp.gt.f32 	%p383, %f535, 0f3FB504F3;
	mul.rn.f32 	%f1870, %f535, 0f3F000000;
	selp.f32 	%f536, %f1870, %f535, %p383;
	add.rn.f32 	%f1861, %f536, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1860,%f1861;
	// end inline asm
	setp.gt.f32 	%p389, %f538, 0f77F684DF;
	mul.rn.f32 	%f1871, %f3663, 0f39000000;
	selp.f32 	%f1872, %f1871, %f3663, %p389;
	selp.f32 	%f1873, 0fC3170000, 0fC2FE0000, %p382;
	shr.u32 	%r792, %r360, 23;
	cvt.rn.f32.u32 	%f1874, %r792;
	add.rn.f32 	%f1875, %f1873, %f1874;
	add.rn.f32 	%f1876, %f1875, 0f3F800000;
	selp.f32 	%f1877, %f1876, %f1875, %p383;
	mov.f32 	%f1878, 0f3F317200;
	mul.rn.f32 	%f1879, %f1877, %f1878;
	add.rn.f32 	%f1880, %f536, 0fBF800000;
	add.rn.f32 	%f1881, %f1880, %f1880;
	mul.rn.f32 	%f1882, %f1881, %f1860;
	mul.rn.f32 	%f1883, %f1882, %f1882;
	fma.rn.f32 	%f1884, %f1883, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1885, %f1884, %f1883, 0f3DAAAABD;
	mul.rn.f32 	%f1886, %f1885, %f1883;
	mul.rn.f32 	%f1887, %f1886, %f1882;
	add.rn.f32 	%f1888, %f1882, %f1887;
	sub.rn.f32 	%f1889, %f1882, %f1888;
	add.rn.f32 	%f1890, %f1887, %f1889;
	neg.f32 	%f1891, %f1882;
	sub.rn.f32 	%f1892, %f1880, %f1882;
	add.rn.f32 	%f1893, %f1892, %f1892;
	fma.rn.f32 	%f1894, %f1891, %f1880, %f1893;
	mul.rn.f32 	%f1895, %f1860, %f1894;
	add.rn.f32 	%f1896, %f1895, %f1890;
	add.rn.f32 	%f1897, %f1888, %f1896;
	add.rn.f32 	%f1898, %f1879, %f1897;
	sub.rn.f32 	%f1899, %f1879, %f1898;
	add.rn.f32 	%f1900, %f1897, %f1899;
	sub.rn.f32 	%f1901, %f1888, %f1897;
	add.rn.f32 	%f1902, %f1896, %f1901;
	add.rn.f32 	%f1903, %f1902, %f1900;
	mov.f32 	%f1904, 0f35BFBE8E;
	mul.rn.f32 	%f1905, %f1877, %f1904;
	add.rn.f32 	%f1906, %f1905, %f1903;
	add.rn.f32 	%f1907, %f1898, %f1906;
	mul.rn.f32 	%f1908, %f1872, %f1907;
	sub.rn.f32 	%f1909, %f1898, %f1907;
	add.rn.f32 	%f1910, %f1906, %f1909;
	neg.f32 	%f1911, %f1908;
	fma.rn.f32 	%f1912, %f1872, %f1907, %f1911;
	fma.rn.f32 	%f1913, %f1872, %f1910, %f1912;
	fma.rn.f32 	%f1914, %f1907, 0f00000000, %f1913;
	add.rn.f32 	%f1915, %f1908, %f1914;
	mov.b32 	%r793, %f1915;
	setp.eq.s32 	%p390, %r793, 1118925336;
	selp.f32 	%f1916, 0f42B17217, %f1915, %p390;
	neg.f32 	%f1917, %f1915;
	add.rn.f32 	%f1918, %f1908, %f1917;
	add.rn.f32 	%f1919, %f1918, %f1914;
	add.rn.f32 	%f1920, %f1919, 0f37000000;
	selp.f32 	%f1921, %f1920, %f1919, %p390;
	mov.f32 	%f1922, 0f3FB8AA3B;
	mul.rn.f32 	%f1923, %f1916, %f1922;
	cvt.rzi.f32.f32 	%f1924, %f1923;
	abs.f32 	%f1925, %f1924;
	setp.gt.f32 	%p391, %f1925, 0f42FC0000;
	mov.f32 	%f1926, 0f42FC0000;
	copysign.f32 	%f1927, %f1924, %f1926;
	selp.f32 	%f1928, %f1927, %f1924, %p391;
	fma.rn.f32 	%f1929, %f1928, 0fBF317218, %f1916;
	fma.rn.f32 	%f1930, %f1928, 0f3102E308, %f1929;
	mul.rn.f32 	%f1931, %f1930, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1932, %f1931;
	add.rn.f32 	%f1933, %f1928, 0f4B40007F;
	mov.b32 	%r794, %f1933;
	shl.b32 	%r795, %r794, 23;
	mov.b32 	%f1934, %r795;
	mul.rn.f32 	%f1935, %f1932, %f1934;
	setp.neu.f32 	%p392, %f1935, 0f7F800000;
	fma.rn.f32 	%f1936, %f1935, %f1921, %f1935;
	selp.f32 	%f1937, %f1936, 0f7F800000, %p392;
	neg.f32 	%f1938, %f1937;
	selp.f32 	%f1939, %f1938, %f1937, %p8;
	cvt.rzi.f32.f32 	%f1940, %f3663;
	setp.neu.f32 	%p393, %f3663, %f1940;
	selp.f32 	%f1942, 0f7FFFFFFF, %f1939, %p393;
	selp.f32 	%f3741, %f1942, %f1939, %p384;
$L__BB0_393:                            // %__internal_powf_corner_cases.exit.i913
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.eq.f32 	%p218, %f3656, 0f00000000;
	selp.f32 	%f1346, 0f3F800000, %f3727, %p218;
	setp.eq.f32 	%p245, %f3657, 0f00000000;
	selp.f32 	%f1432, 0f3F800000, %f3729, %p245;
	setp.eq.f32 	%p272, %f3658, 0f00000000;
	selp.f32 	%f1518, 0f3F800000, %f3731, %p272;
	setp.eq.f32 	%p299, %f3659, 0f00000000;
	selp.f32 	%f1604, 0f3F800000, %f3733, %p299;
	setp.eq.f32 	%p326, %f3660, 0f00000000;
	selp.f32 	%f1690, 0f3F800000, %f3735, %p326;
	setp.eq.f32 	%p353, %f3661, 0f00000000;
	selp.f32 	%f1776, 0f3F800000, %f3737, %p353;
	setp.eq.f32 	%p380, %f3662, 0f00000000;
	selp.f32 	%f1862, 0f3F800000, %f3739, %p380;
	add.rn.f32 	%f1944, %f534, %f538;
	mov.b32 	%r800, %f1944;
	setp.lt.s32 	%p396, %r800, 2139095040;
	@%p396 bra 	$L__BB0_400;
// %bb.394:                             // %__nv_isnanf.exit.i.i918
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.num.f32 	%p397, %f534, %f534;
	setp.num.f32 	%p398, %f538, %f538;
	and.pred  	%p399, %p397, %p398;
	@%p399 bra 	$L__BB0_396;
// %bb.395:                             //   in Loop: Header=BB0_3 Depth=1
	add.rn.f32 	%f3741, %f8, %f3663;
	bra.uni 	$L__BB0_400;
$L__BB0_396:                            // %__nv_isinff.exit8.i.i920
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p400, %f538, 0f7F800000;
	@%p400 bra 	$L__BB0_398;
// %bb.397:                             // %__nv_fabsf.exit5.i.i924
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.gt.f32 	%p403, %f534, 0f3F800000;
	selp.b32 	%r804, 2139095040, 0, %p403;
	setp.lt.f32 	%p404, %f3663, 0f00000000;
	xor.b32  	%r805, %r804, 2139095040;
	selp.b32 	%r806, %r805, %r804, %p404;
	setp.eq.f32 	%p405, %f8, 0fBF800000;
	mov.b32 	%f1945, %r806;
	selp.f32 	%f3741, 0f3F800000, %f1945, %p405;
	bra.uni 	$L__BB0_400;
$L__BB0_398:                            // %__nv_isinff.exit.i.i921
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.neu.f32 	%p401, %f534, 0f7F800000;
	@%p401 bra 	$L__BB0_400;
// %bb.399:                             //   in Loop: Header=BB0_3 Depth=1
	setp.ge.f32 	%p402, %f3663, 0f00000000;
	selp.b32 	%r801, 2139095040, 0, %p402;
	or.b32  	%r802, %r801, -2147483648;
	selp.b32 	%r803, %r802, %r801, %p8;
	mov.b32 	%f3741, %r803;
$L__BB0_400:                            // %__nv_powf.exit929
                                        //   in Loop: Header=BB0_3 Depth=1
	setp.eq.f32 	%p217, %f3648, 0f3F800000;
	selp.f32 	%f3648, 0f3F800000, %f1346, %p217;
	setp.eq.f32 	%p244, %f3649, 0f3F800000;
	selp.f32 	%f3649, 0f3F800000, %f1432, %p244;
	setp.eq.f32 	%p271, %f3650, 0f3F800000;
	selp.f32 	%f3650, 0f3F800000, %f1518, %p271;
	setp.eq.f32 	%p298, %f3651, 0f3F800000;
	selp.f32 	%f3651, 0f3F800000, %f1604, %p298;
	setp.eq.f32 	%p325, %f3652, 0f3F800000;
	selp.f32 	%f3652, 0f3F800000, %f1690, %p325;
	setp.eq.f32 	%p352, %f3653, 0f3F800000;
	selp.f32 	%f3653, 0f3F800000, %f1776, %p352;
	setp.eq.f32 	%p379, %f3654, 0f3F800000;
	selp.f32 	%f3654, 0f3F800000, %f1862, %p379;
	setp.eq.f32 	%p406, %f8, 0f3F800000;
	setp.eq.f32 	%p407, %f3663, 0f00000000;
	selp.f32 	%f1946, 0f3F800000, %f3741, %p407;
	selp.f32 	%f3655, 0f3F800000, %f1946, %p406;
	bra.uni 	$L__BB0_502;
$L__BB0_4:                              // %Halt
	ret;
$L__BB0_1:                              // %entry.if
	ld.param.u64 	%rd163, [geval_param_1];
	mul.wide.u32 	%rd188, %r1, 8;
	add.s64 	%rd189, %rd163, %rd188;
	ld.global.u64 	%rd190, [%rd189];
	mul.wide.u32 	%rd191, %r1, 16;
	add.s64 	%rd192, %rd163, %rd191;
	ld.global.v4.u32 	{%r11, %r420, %r421, %r422}, [%rd192+64];
	ld.global.v4.u32 	{%r423, %r424, %r425, %r426}, [%rd192+192];
	ld.global.v4.u32 	{%r15, %r431, %r432, %r433}, [%rd192+320];
	mul.wide.u32 	%rd193, %r1, 4;
	add.s64 	%rd194, %rd163, %rd193;
	ld.global.u32 	%r9, [%rd194+448];
	ld.global.u32 	%r434, [%rd194+480];
	ld.global.u32 	%r435, [%rd194+512];
	mov.u32 	%r436, %ctaid.x;
	add.s32 	%r437, %r423, 7;
	shr.u32 	%r438, %r437, 3;
	div.u32 	%r439, %r436, %r438;
	mul.lo.s32 	%r440, %r439, %r438;
	sub.s32 	%r441, %r436, %r440;
	shl.b32 	%r442, %r441, 3;
	sub.s32 	%r12, %r423, %r442;
	cvt.u64.u32 	%rd195, %r442;
	mul.wide.u32 	%rd196, %r435, %r11;
	mad.lo.s64 	%rd197, %rd196, %rd195, %rd190;
	div.u32 	%r443, %r439, %r424;
	mul.lo.s32 	%r444, %r443, %r424;
	sub.s32 	%r445, %r439, %r444;
	cvt.u64.u32 	%rd198, %r445;
	mul.wide.u32 	%rd199, %r435, %r420;
	mad.lo.s64 	%rd200, %rd199, %rd198, %rd197;
	div.u32 	%r446, %r443, %r425;
	mul.lo.s32 	%r447, %r446, %r425;
	sub.s32 	%r448, %r443, %r447;
	cvt.u64.u32 	%rd201, %r448;
	mul.wide.u32 	%rd202, %r435, %r421;
	mad.lo.s64 	%rd203, %rd202, %rd201, %rd200;
	rem.u32 	%r449, %r446, %r426;
	cvt.u64.u32 	%rd204, %r449;
	mul.wide.u32 	%rd205, %r435, %r422;
	mad.lo.s64 	%rd206, %rd205, %rd204, %rd203;
	mul.lo.s32 	%r450, %r442, %r15;
	mad.lo.s32 	%r451, %r445, %r431, %r450;
	mad.lo.s32 	%r452, %r448, %r432, %r451;
	mad.lo.s32 	%r453, %r449, %r433, %r452;
	sub.s32 	%r10, %r434, %r453;
	{ .reg .b32 tmp; mov.b64 {tmp, %r17}, %rd206; }
	cvt.u32.u64 	%r16, %rd206;
	bra.uni 	$L__BB0_2;
                                        // -- End function
}
	// .globl	__nv_rsqrtf             // -- Begin function __nv_rsqrtf
.visible .func  (.param .b32 func_retval0) __nv_rsqrtf(
	.param .b32 __nv_rsqrtf_param_0
)                                       // @__nv_rsqrtf
{
	.reg .f32 	%f<3>;

// %bb.0:
	ld.param.f32 	%f1, [__nv_rsqrtf_param_0];
	rsqrt.approx.f32 	%f2, %f1;
	st.param.f32 	[func_retval0], %f2;
	ret;
                                        // -- End function
}
	// .globl	__nv_exp2f              // -- Begin function __nv_exp2f
.visible .func  (.param .b32 func_retval0) __nv_exp2f(
	.param .b32 __nv_exp2f_param_0
)                                       // @__nv_exp2f
{
	.reg .f32 	%f<3>;

// %bb.0:                               // %__exp2f.exit
	ld.param.f32 	%f1, [__nv_exp2f_param_0];
	ex2.approx.f32 	%f2, %f1;
	st.param.f32 	[func_retval0], %f2;
	ret;
                                        // -- End function
}
	// .globl	__nv_sqrtf              // -- Begin function __nv_sqrtf
.visible .func  (.param .b32 func_retval0) __nv_sqrtf(
	.param .b32 __nv_sqrtf_param_0
)                                       // @__nv_sqrtf
{
	.reg .f32 	%f<3>;

// %bb.0:                               // %__nvvm_sqrt_f.exit
	ld.param.f32 	%f1, [__nv_sqrtf_param_0];
	sqrt.approx.f32 	%f2, %f1;
	st.param.f32 	[func_retval0], %f2;
	ret;
                                        // -- End function
}
	// .globl	__nv_sinf               // -- Begin function __nv_sinf
.visible .func  (.param .b32 func_retval0) __nv_sinf(
	.param .b32 __nv_sinf_param_0
)                                       // @__nv_sinf
{
	.local .align 4 .b8 	__local_depot4[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<44>;
	.reg .f32 	%f<28>;
	.reg .b64 	%rd<16>;
	.reg .f64 	%fd<3>;

// %bb.0:                               // %__nv_float2int_rn.exit.i.i
	mov.u64 	%SPL, __local_depot4;
	ld.param.f32 	%f6, [__nv_sinf_param_0];
	add.u64 	%rd1, %SPL, 0;
	mul.rn.f32 	%f7, %f6, 0f3F22F983;
	cvt.rni.s32.f32 	%r43, %f7;
	cvt.rn.f32.s32 	%f8, %r43;
	fma.rn.f32 	%f9, %f8, 0fBFC90FDA, %f6;
	fma.rn.f32 	%f10, %f8, 0fB3A22168, %f9;
	fma.rn.f32 	%f27, %f8, 0fA7C234C5, %f10;
	abs.f32 	%f2, %f6;
	setp.ltu.f32 	%p1, %f2, 0f47CE4780;
	@%p1 bra 	$L__BB4_8;
// %bb.1:                               // %__nv_isinff.exit.i.i
	setp.neu.f32 	%p2, %f2, 0f7F800000;
	@%p2 bra 	$L__BB4_3;
// %bb.2:                               // %__nv_fmul_rn.exit.i.i
	mov.f32 	%f13, 0f00000000;
	mul.rn.f32 	%f27, %f6, %f13;
	mov.b32 	%r43, 0;
	bra.uni 	$L__BB4_8;
$L__BB4_3:
	mov.b32 	%r2, %f6;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r15, %r3, 224;
	add.s32 	%r16, %r15, -128;
	shl.b32 	%r17, %r2, 8;
	or.b32  	%r21, %r17, -2147483648;
	shr.u32 	%r5, %r16, 5;
	mov.b32 	%r41, 0;
	mov.b64 	%rd15, 0;
	mov.u64 	%rd7, __cudart_i2opi_f;
$L__BB4_4:                              // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd8, %rd7, %rd15;
	ld.global.nc.u32 	%r20, [%rd8];
	// begin inline asm
	{
	mad.lo.cc.u32   %r18, %r20, %r21, %r41;
	madc.hi.u32     %r41, %r20, %r21,  0;
	}
	// end inline asm
	add.s64 	%rd9, %rd1, %rd15;
	st.local.u32 	[%rd9], %r18;
	add.s64 	%rd15, %rd15, 4;
	cvt.u32.u64 	%r23, %rd15;
	setp.ne.s32 	%p3, %r23, 24;
	@%p3 bra 	$L__BB4_4;
// %bb.5:
	st.local.u32 	[%rd1+24], %r41;
	mul.wide.u32 	%rd10, %r5, 4;
	sub.s64 	%rd4, %rd1, %rd10;
	ld.local.u32 	%r8, [%rd4+24];
	ld.local.u32 	%r9, [%rd4+20];
	and.b32  	%r25, %r2, 260046848;
	setp.eq.s32 	%p4, %r25, 0;
	mov.u32 	%r42, %r9;
	@%p4 bra 	$L__BB4_7;
// %bb.6:
	ld.local.u32 	%r26, [%rd4+16];
	shf.l.wrap.b32 	%r42, %r26, %r9, %r3;
$L__BB4_7:                              // %__internal_trig_reduction_slowpath.exit.i.i
	shf.l.wrap.b32 	%r27, %r9, %r8, %r3;
	shr.u32 	%r28, %r27, 30;
	shf.l.wrap.b32 	%r29, %r42, %r27, 2;
	shl.b32 	%r30, %r42, 2;
	shr.u32 	%r31, %r29, 31;
	add.s32 	%r32, %r31, %r28;
	neg.s32 	%r33, %r32;
	setp.lt.s32 	%p5, %r2, 0;
	selp.b32 	%r43, %r33, %r32, %p5;
	xor.b32  	%r34, %r29, %r2;
	shr.s32 	%r35, %r29, 31;
	xor.b32  	%r36, %r35, %r29;
	xor.b32  	%r37, %r35, %r30;
	cvt.u64.u32 	%rd11, %r36;
	shl.b64 	%rd12, %rd11, 32;
	cvt.u64.u32 	%rd13, %r37;
	or.b64  	%rd14, %rd12, %rd13;
	cvt.rn.f64.s64 	%fd1, %rd14;
	mul.rn.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f11, %fd2;
	neg.f32 	%f12, %f11;
	setp.lt.s32 	%p6, %r34, 0;
	selp.f32 	%f27, %f12, %f11, %p6;
$L__BB4_8:                              // %__internal_trig_reduction_kernel.exit.i
	mul.rn.f32 	%f14, %f27, %f27;
	and.b32  	%r39, %r43, 1;
	setp.eq.b32 	%p7, %r39, 1;
	selp.f32 	%f15, 0f3F800000, %f27, %p7;
	fma.rn.f32 	%f16, %f14, %f15, 0f00000000;
	fma.rn.f32 	%f17, %f14, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f18, %f17, 0fB94D4153, %p7;
	selp.f32 	%f19, 0f3D2AAABB, 0f3C0885E4, %p7;
	fma.rn.f32 	%f20, %f18, %f14, %f19;
	selp.f32 	%f21, 0fBEFFFFFF, 0fBE2AAAA8, %p7;
	fma.rn.f32 	%f22, %f20, %f14, %f21;
	fma.rn.f32 	%f23, %f22, %f16, %f15;
	and.b32  	%r40, %r43, 2;
	setp.eq.s32 	%p8, %r40, 0;
	mov.f32 	%f24, 0f00000000;
	sub.rn.f32 	%f25, %f24, %f23;
	selp.f32 	%f26, %f23, %f25, %p8;
	st.param.f32 	[func_retval0], %f26;
	ret;
                                        // -- End function
}
	// .globl	__nv_cosf               // -- Begin function __nv_cosf
.visible .func  (.param .b32 func_retval0) __nv_cosf(
	.param .b32 __nv_cosf_param_0
)                                       // @__nv_cosf
{
	.local .align 4 .b8 	__local_depot5[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<45>;
	.reg .f32 	%f<28>;
	.reg .b64 	%rd<16>;
	.reg .f64 	%fd<3>;

// %bb.0:                               // %__nv_float2int_rn.exit.i.i
	mov.u64 	%SPL, __local_depot5;
	ld.param.f32 	%f6, [__nv_cosf_param_0];
	add.u64 	%rd1, %SPL, 0;
	mul.rn.f32 	%f7, %f6, 0f3F22F983;
	cvt.rni.s32.f32 	%r44, %f7;
	cvt.rn.f32.s32 	%f8, %r44;
	fma.rn.f32 	%f9, %f8, 0fBFC90FDA, %f6;
	fma.rn.f32 	%f10, %f8, 0fB3A22168, %f9;
	fma.rn.f32 	%f27, %f8, 0fA7C234C5, %f10;
	abs.f32 	%f2, %f6;
	setp.ltu.f32 	%p1, %f2, 0f47CE4780;
	@%p1 bra 	$L__BB5_8;
// %bb.1:                               // %__nv_isinff.exit.i.i
	setp.neu.f32 	%p2, %f2, 0f7F800000;
	@%p2 bra 	$L__BB5_3;
// %bb.2:                               // %__nv_fmul_rn.exit.i.i
	mov.f32 	%f13, 0f00000000;
	mul.rn.f32 	%f27, %f6, %f13;
	mov.b32 	%r44, 0;
	bra.uni 	$L__BB5_8;
$L__BB5_3:
	mov.b32 	%r2, %f6;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r15, %r3, 224;
	add.s32 	%r16, %r15, -128;
	shl.b32 	%r17, %r2, 8;
	or.b32  	%r21, %r17, -2147483648;
	shr.u32 	%r5, %r16, 5;
	mov.b32 	%r42, 0;
	mov.b64 	%rd15, 0;
	mov.u64 	%rd7, __cudart_i2opi_f;
$L__BB5_4:                              // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd8, %rd7, %rd15;
	ld.global.nc.u32 	%r20, [%rd8];
	// begin inline asm
	{
	mad.lo.cc.u32   %r18, %r20, %r21, %r42;
	madc.hi.u32     %r42, %r20, %r21,  0;
	}
	// end inline asm
	add.s64 	%rd9, %rd1, %rd15;
	st.local.u32 	[%rd9], %r18;
	add.s64 	%rd15, %rd15, 4;
	cvt.u32.u64 	%r23, %rd15;
	setp.ne.s32 	%p3, %r23, 24;
	@%p3 bra 	$L__BB5_4;
// %bb.5:
	st.local.u32 	[%rd1+24], %r42;
	mul.wide.u32 	%rd10, %r5, 4;
	sub.s64 	%rd4, %rd1, %rd10;
	ld.local.u32 	%r8, [%rd4+24];
	ld.local.u32 	%r9, [%rd4+20];
	and.b32  	%r25, %r2, 260046848;
	setp.eq.s32 	%p4, %r25, 0;
	mov.u32 	%r43, %r9;
	@%p4 bra 	$L__BB5_7;
// %bb.6:
	ld.local.u32 	%r26, [%rd4+16];
	shf.l.wrap.b32 	%r43, %r26, %r9, %r3;
$L__BB5_7:                              // %__internal_trig_reduction_slowpath.exit.i.i
	shf.l.wrap.b32 	%r27, %r9, %r8, %r3;
	shr.u32 	%r28, %r27, 30;
	shf.l.wrap.b32 	%r29, %r43, %r27, 2;
	shl.b32 	%r30, %r43, 2;
	shr.u32 	%r31, %r29, 31;
	add.s32 	%r32, %r31, %r28;
	neg.s32 	%r33, %r32;
	setp.lt.s32 	%p5, %r2, 0;
	selp.b32 	%r44, %r33, %r32, %p5;
	xor.b32  	%r34, %r29, %r2;
	shr.s32 	%r35, %r29, 31;
	xor.b32  	%r36, %r35, %r29;
	xor.b32  	%r37, %r35, %r30;
	cvt.u64.u32 	%rd11, %r36;
	shl.b64 	%rd12, %rd11, 32;
	cvt.u64.u32 	%rd13, %r37;
	or.b64  	%rd14, %rd12, %rd13;
	cvt.rn.f64.s64 	%fd1, %rd14;
	mul.rn.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f11, %fd2;
	neg.f32 	%f12, %f11;
	setp.lt.s32 	%p6, %r34, 0;
	selp.f32 	%f27, %f12, %f11, %p6;
$L__BB5_8:                              // %__internal_trig_reduction_kernel.exit.i
	add.s32 	%r39, %r44, 1;
	mul.rn.f32 	%f14, %f27, %f27;
	and.b32  	%r40, %r44, 1;
	setp.eq.b32 	%p7, %r40, 1;
	selp.f32 	%f15, %f27, 0f3F800000, %p7;
	fma.rn.f32 	%f16, %f14, %f15, 0f00000000;
	fma.rn.f32 	%f17, %f14, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f18, 0fB94D4153, %f17, %p7;
	selp.f32 	%f19, 0f3C0885E4, 0f3D2AAABB, %p7;
	fma.rn.f32 	%f20, %f18, %f14, %f19;
	selp.f32 	%f21, 0fBE2AAAA8, 0fBEFFFFFF, %p7;
	fma.rn.f32 	%f22, %f20, %f14, %f21;
	fma.rn.f32 	%f23, %f22, %f16, %f15;
	and.b32  	%r41, %r39, 2;
	setp.eq.s32 	%p8, %r41, 0;
	mov.f32 	%f24, 0f00000000;
	sub.rn.f32 	%f25, %f24, %f23;
	selp.f32 	%f26, %f23, %f25, %p8;
	st.param.f32 	[func_retval0], %f26;
	ret;
                                        // -- End function
}
	// .globl	__nv_tanf               // -- Begin function __nv_tanf
.visible .func  (.param .b32 func_retval0) __nv_tanf(
	.param .b32 __nv_tanf_param_0
)                                       // @__nv_tanf
{
	.local .align 4 .b8 	__local_depot6[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<43>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<16>;
	.reg .f64 	%fd<3>;

// %bb.0:                               // %__nv_float2int_rn.exit.i
	mov.u64 	%SPL, __local_depot6;
	ld.param.f32 	%f10, [__nv_tanf_param_0];
	add.u64 	%rd1, %SPL, 0;
	mul.rn.f32 	%f11, %f10, 0f3F22F983;
	cvt.rni.s32.f32 	%r42, %f11;
	cvt.rn.f32.s32 	%f12, %r42;
	fma.rn.f32 	%f13, %f12, 0fBFC90FDA, %f10;
	fma.rn.f32 	%f14, %f12, 0fB3A22168, %f13;
	fma.rn.f32 	%f29, %f12, 0fA7C234C5, %f14;
	abs.f32 	%f2, %f10;
	setp.ltu.f32 	%p1, %f2, 0f47CE4780;
	@%p1 bra 	$L__BB6_8;
// %bb.1:                               // %__nv_isinff.exit.i
	setp.neu.f32 	%p2, %f2, 0f7F800000;
	@%p2 bra 	$L__BB6_3;
// %bb.2:                               // %__nv_fmul_rn.exit.i
	mov.f32 	%f17, 0f00000000;
	mul.rn.f32 	%f29, %f10, %f17;
	mov.b32 	%r42, 0;
	bra.uni 	$L__BB6_8;
$L__BB6_3:
	mov.b32 	%r2, %f10;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r15, %r3, 224;
	add.s32 	%r16, %r15, -128;
	shl.b32 	%r17, %r2, 8;
	or.b32  	%r21, %r17, -2147483648;
	shr.u32 	%r5, %r16, 5;
	mov.b32 	%r40, 0;
	mov.b64 	%rd15, 0;
	mov.u64 	%rd7, __cudart_i2opi_f;
$L__BB6_4:                              // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd8, %rd7, %rd15;
	ld.global.nc.u32 	%r20, [%rd8];
	// begin inline asm
	{
	mad.lo.cc.u32   %r18, %r20, %r21, %r40;
	madc.hi.u32     %r40, %r20, %r21,  0;
	}
	// end inline asm
	add.s64 	%rd9, %rd1, %rd15;
	st.local.u32 	[%rd9], %r18;
	add.s64 	%rd15, %rd15, 4;
	cvt.u32.u64 	%r23, %rd15;
	setp.ne.s32 	%p3, %r23, 24;
	@%p3 bra 	$L__BB6_4;
// %bb.5:
	st.local.u32 	[%rd1+24], %r40;
	mul.wide.u32 	%rd10, %r5, 4;
	sub.s64 	%rd4, %rd1, %rd10;
	ld.local.u32 	%r8, [%rd4+24];
	ld.local.u32 	%r9, [%rd4+20];
	and.b32  	%r25, %r2, 260046848;
	setp.eq.s32 	%p4, %r25, 0;
	mov.u32 	%r41, %r9;
	@%p4 bra 	$L__BB6_7;
// %bb.6:
	ld.local.u32 	%r26, [%rd4+16];
	shf.l.wrap.b32 	%r41, %r26, %r9, %r3;
$L__BB6_7:                              // %__internal_trig_reduction_slowpath.exit.i
	shf.l.wrap.b32 	%r27, %r9, %r8, %r3;
	shr.u32 	%r28, %r27, 30;
	shf.l.wrap.b32 	%r29, %r41, %r27, 2;
	shl.b32 	%r30, %r41, 2;
	shr.u32 	%r31, %r29, 31;
	add.s32 	%r32, %r31, %r28;
	neg.s32 	%r33, %r32;
	setp.lt.s32 	%p5, %r2, 0;
	selp.b32 	%r42, %r33, %r32, %p5;
	xor.b32  	%r34, %r29, %r2;
	shr.s32 	%r35, %r29, 31;
	xor.b32  	%r36, %r35, %r29;
	xor.b32  	%r37, %r35, %r30;
	cvt.u64.u32 	%rd11, %r36;
	shl.b64 	%rd12, %rd11, 32;
	cvt.u64.u32 	%rd13, %r37;
	or.b64  	%rd14, %rd12, %rd13;
	cvt.rn.f64.s64 	%fd1, %rd14;
	mul.rn.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f15, %fd2;
	neg.f32 	%f16, %f15;
	setp.lt.s32 	%p6, %r34, 0;
	selp.f32 	%f29, %f16, %f15, %p6;
$L__BB6_8:                              // %__internal_trig_reduction_kernel.exit
	mul.rn.f32 	%f18, %f29, %f29;
	fma.rn.f32 	%f19, %f18, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f20, %f19, %f18, 0f3CC70000;
	fma.rn.f32 	%f21, %f20, %f18, 0f3D5B0000;
	fma.rn.f32 	%f22, %f21, %f18, 0f3E089438;
	fma.rn.f32 	%f23, %f22, %f18, 0f3EAAAA88;
	mul.rn.f32 	%f24, %f18, %f29;
	fma.rn.f32 	%f25, %f23, %f24, %f29;
	abs.f32 	%f26, %f29;
	setp.eq.f32 	%p7, %f26, 0f3A00B43C;
	selp.f32 	%f30, %f29, %f25, %p7;
	and.b32  	%r39, %r42, 1;
	setp.eq.b32 	%p8, %r39, 1;
	not.pred 	%p9, %p8;
	@%p9 bra 	$L__BB6_10;
// %bb.9:
	neg.f32 	%f28, %f30;
	// begin inline asm
	rcp.approx.ftz.f32 %f30,%f28;
	// end inline asm
$L__BB6_10:
	st.param.f32 	[func_retval0], %f30;
	ret;
                                        // -- End function
}
	// .globl	__nv_log2f              // -- Begin function __nv_log2f
.visible .func  (.param .b32 func_retval0) __nv_log2f(
	.param .b32 __nv_log2f_param_0
)                                       // @__nv_log2f
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<5>;
	.reg .f32 	%f<25>;

// %bb.0:                               // %__nv_fmaf_rn.exit10.i
	ld.param.f32 	%f1, [__nv_log2f_param_0];
	setp.lt.f32 	%p1, %f1, 0f00800000;
	mul.rn.f32 	%f2, %f1, 0f4B000000;
	selp.f32 	%f3, %f2, %f1, %p1;
	selp.f32 	%f4, 0fC1B80000, 0f00000000, %p1;
	mov.b32 	%r1, %f3;
	add.s32 	%r2, %r1, -1060439283;
	and.b32  	%r3, %r2, -8388608;
	sub.s32 	%r4, %r1, %r3;
	mov.b32 	%f5, %r4;
	cvt.rn.f32.s32 	%f6, %r3;
	fma.rn.f32 	%f7, %f6, 0f34000000, %f4;
	add.rn.f32 	%f8, %f5, 0fBF800000;
	fma.rn.f32 	%f9, %f8, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f10, %f9, %f8, 0f3E2FCF2A;
	fma.rn.f32 	%f11, %f10, %f8, 0fBE374E43;
	fma.rn.f32 	%f12, %f11, %f8, 0f3E520BF4;
	fma.rn.f32 	%f13, %f12, %f8, 0fBE763C8B;
	fma.rn.f32 	%f14, %f13, %f8, 0f3E93BF99;
	fma.rn.f32 	%f15, %f14, %f8, 0fBEB8AA49;
	fma.rn.f32 	%f16, %f15, %f8, 0f3EF6384A;
	fma.rn.f32 	%f17, %f16, %f8, 0fBF38AA3B;
	mul.rn.f32 	%f18, %f8, %f17;
	mul.rn.f32 	%f19, %f8, %f18;
	fma.rn.f32 	%f20, %f8, 0f3FB8AA3B, %f19;
	add.rn.f32 	%f21, %f7, %f20;
	setp.gt.u32 	%p2, %r1, 2139095039;
	fma.rn.f32 	%f22, %f3, 0f7F800000, 0f7F800000;
	selp.f32 	%f23, %f22, %f21, %p2;
	setp.eq.f32 	%p3, %f3, 0f00000000;
	selp.f32 	%f24, 0fFF800000, %f23, %p3;
	st.param.f32 	[func_retval0], %f24;
	ret;
                                        // -- End function
}
	// .globl	__nv_expf               // -- Begin function __nv_expf
.visible .func  (.param .b32 func_retval0) __nv_expf(
	.param .b32 __nv_expf_param_0
)                                       // @__nv_expf
{
	.reg .b32 	%r<3>;
	.reg .f32 	%f<14>;

// %bb.0:                               // %__nv_fmaf_rn.exit.i.i
	ld.param.f32 	%f1, [__nv_expf_param_0];
	fma.rn.f32 	%f2, %f1, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f3, %f2;
	mov.f32 	%f4, 0f4B400001;
	mov.f32 	%f5, 0f437C0000;
	fma.rm.f32 	%f6, %f3, %f5, %f4;
	add.rn.f32 	%f7, %f6, 0fCB40007F;
	neg.f32 	%f8, %f7;
	fma.rn.f32 	%f9, %f1, 0f3FB8AA3B, %f8;
	fma.rn.f32 	%f10, %f1, 0f32A57060, %f9;
	mov.b32 	%r1, %f6;
	shl.b32 	%r2, %r1, 23;
	mov.b32 	%f11, %r2;
	ex2.approx.ftz.f32 	%f12, %f10;
	mul.rn.f32 	%f13, %f12, %f11;
	st.param.f32 	[func_retval0], %f13;
	ret;
                                        // -- End function
}
	// .globl	__nv_atan2f             // -- Begin function __nv_atan2f
.visible .func  (.param .b32 func_retval0) __nv_atan2f(
	.param .b32 __nv_atan2f_param_0,
	.param .b32 __nv_atan2f_param_1
)                                       // @__nv_atan2f
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<11>;
	.reg .f32 	%f<34>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f8, [__nv_atan2f_param_1];
	ld.param.f32 	%f7, [__nv_atan2f_param_0];
	abs.f32 	%f1, %f8;
	abs.f32 	%f9, %f7;
	setp.neu.f32 	%p1, %f1, 0f00000000;
	setp.neu.f32 	%p2, %f9, 0f00000000;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB9_2;
// %bb.1:
	mov.b32 	%r8, %f8;
	shr.s32 	%r9, %r8, 31;
	and.b32  	%r10, %r9, 1078530011;
	mov.b32 	%f32, %r10;
	copysign.f32 	%f33, %f7, %f32;
	bra.uni 	$L__BB9_5;
$L__BB9_2:
	setp.neu.f32 	%p4, %f1, 0f7F800000;
	setp.neu.f32 	%p5, %f9, 0f7F800000;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB9_4;
// %bb.3:
	mov.b32 	%r6, %f8;
	setp.lt.s32 	%p10, %r6, 0;
	selp.b32 	%r7, 1075235812, 1061752795, %p10;
	mov.b32 	%f31, %r7;
	copysign.f32 	%f33, %f7, %f31;
	bra.uni 	$L__BB9_5;
$L__BB9_4:                              // %__nv_fmaxf.exit
	max.f32 	%f10, %f9, %f1;
	min.f32 	%f11, %f9, %f1;
	div.rn.f32 	%f12, %f11, %f10;
	mul.rn.f32 	%f13, %f12, %f12;
	fma.rn.f32 	%f14, %f13, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f15, %f14, %f13, 0fC0D21907;
	mul.rn.f32 	%f16, %f13, %f15;
	mul.rn.f32 	%f17, %f12, %f16;
	add.rn.f32 	%f18, %f13, 0f41355DC0;
	fma.rn.f32 	%f19, %f18, %f13, 0f41E6BD60;
	fma.rn.f32 	%f20, %f19, %f13, 0f419D92C8;
	rcp.rn.f32 	%f21, %f20;
	fma.rn.f32 	%f22, %f17, %f21, %f12;
	setp.gt.f32 	%p7, %f9, %f1;
	mov.f32 	%f23, 0f3FC90FDB;
	sub.rn.f32 	%f24, %f23, %f22;
	selp.f32 	%f25, %f24, %f22, %p7;
	mov.b32 	%r1, %f8;
	setp.lt.s32 	%p8, %r1, 0;
	mov.f32 	%f26, 0f40490FDB;
	sub.rn.f32 	%f27, %f26, %f25;
	selp.f32 	%f28, %f27, %f25, %p8;
	mov.b32 	%r2, %f28;
	mov.b32 	%r3, %f7;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	%f29, %r5;
	add.rn.f32 	%f30, %f9, %f1;
	setp.num.f32 	%p9, %f30, %f30;
	selp.f32 	%f33, %f29, %f30, %p9;
$L__BB9_5:
	st.param.f32 	[func_retval0], %f33;
	ret;
                                        // -- End function
}
	// .globl	__nv_atanf              // -- Begin function __nv_atanf
.visible .func  (.param .b32 func_retval0) __nv_atanf(
	.param .b32 __nv_atanf_param_0
)                                       // @__nv_atanf
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<5>;
	.reg .f32 	%f<20>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f1, [__nv_atanf_param_0];
	abs.f32 	%f2, %f1;
	setp.gt.f32 	%p1, %f2, 0f3F800000;
	rcp.rn.f32 	%f3, %f2;
	selp.f32 	%f4, %f3, %f2, %p1;
	mul.rn.f32 	%f5, %f4, %f4;
	fma.rn.f32 	%f6, %f5, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f7, %f6, %f5, 0fC0D21907;
	mul.rn.f32 	%f8, %f5, %f7;
	mul.rn.f32 	%f9, %f4, %f8;
	add.rn.f32 	%f10, %f5, 0f41355DC0;
	fma.rn.f32 	%f11, %f10, %f5, 0f41E6BD60;
	fma.rn.f32 	%f12, %f11, %f5, 0f419D92C8;
	rcp.rn.f32 	%f13, %f12;
	fma.rn.f32 	%f14, %f9, %f13, %f4;
	mov.f32 	%f15, 0f3FC90FDB;
	sub.rn.f32 	%f16, %f15, %f14;
	selp.f32 	%f17, %f16, %f14, %p1;
	setp.num.f32 	%p2, %f2, %f2;
	mov.b32 	%r1, %f17;
	mov.b32 	%r2, %f1;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r3, %r1;
	mov.b32 	%f18, %r4;
	selp.f32 	%f19, %f18, %f17, %p2;
	st.param.f32 	[func_retval0], %f19;
	ret;
                                        // -- End function
}
	// .globl	__nv_asinf              // -- Begin function __nv_asinf
.visible .func  (.param .b32 func_retval0) __nv_asinf(
	.param .b32 __nv_asinf_param_0
)                                       // @__nv_asinf
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<5>;
	.reg .f32 	%f<19>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f1, [__nv_asinf_param_0];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.rn.f32 	%f4, %f3, %f2;
	mul.rn.f32 	%f5, %f4, 0f3F000000;
	sqrt.approx.f32 	%f6, %f5;
	setp.gt.f32 	%p1, %f2, 0f3F11EB85;
	selp.f32 	%f7, %f6, %f2, %p1;
	mul.rn.f32 	%f8, %f7, %f7;
	fma.rn.f32 	%f9, %f8, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f10, %f9, %f8, 0f3D3F841F;
	fma.rn.f32 	%f11, %f10, %f8, 0f3D994929;
	fma.rn.f32 	%f12, %f11, %f8, 0f3E2AAB94;
	mul.rn.f32 	%f13, %f8, %f12;
	fma.rn.f32 	%f14, %f13, %f7, %f7;
	fma.rn.f32 	%f15, %f14, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f16, %f15, %f14, %p1;
	setp.num.f32 	%p2, %f16, %f16;
	mov.b32 	%r1, %f16;
	mov.b32 	%r2, %f1;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r3, %r1;
	mov.b32 	%f17, %r4;
	selp.f32 	%f18, %f17, %f16, %p2;
	st.param.f32 	[func_retval0], %f18;
	ret;
                                        // -- End function
}
	// .globl	__nv_acosf              // -- Begin function __nv_acosf
.visible .func  (.param .b32 func_retval0) __nv_acosf(
	.param .b32 __nv_acosf_param_0
)                                       // @__nv_acosf
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<22>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f1, [__nv_acosf_param_0];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.rn.f32 	%f4, %f3, %f2;
	mul.rn.f32 	%f5, %f4, 0f3F000000;
	sqrt.approx.f32 	%f6, %f5;
	setp.gt.f32 	%p1, %f2, 0f3F11EB85;
	selp.f32 	%f7, %f6, %f2, %p1;
	mul.rn.f32 	%f8, %f7, %f7;
	fma.rn.f32 	%f9, %f8, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f10, %f9, %f8, 0f3D3F841F;
	fma.rn.f32 	%f11, %f10, %f8, 0f3D994929;
	fma.rn.f32 	%f12, %f11, %f8, 0f3E2AAB94;
	mul.rn.f32 	%f13, %f8, %f12;
	fma.rn.f32 	%f14, %f13, %f7, %f7;
	add.rn.f32 	%f15, %f14, %f14;
	mov.f32 	%f16, 0f3FC90FDB;
	sub.rn.f32 	%f17, %f16, %f14;
	selp.f32 	%f18, %f15, %f17, %p1;
	setp.lt.f32 	%p2, %f1, 0f00000000;
	mov.f32 	%f19, 0f40490FDB;
	sub.rn.f32 	%f20, %f19, %f18;
	selp.f32 	%f21, %f20, %f18, %p2;
	st.param.f32 	[func_retval0], %f21;
	ret;
                                        // -- End function
}
	// .globl	__nv_logf               // -- Begin function __nv_logf
.visible .func  (.param .b32 func_retval0) __nv_logf(
	.param .b32 __nv_logf_param_0
)                                       // @__nv_logf
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<5>;
	.reg .f32 	%f<23>;

// %bb.0:                               // %__nv_fmaf_rn.exit10.i
	ld.param.f32 	%f1, [__nv_logf_param_0];
	setp.lt.f32 	%p1, %f1, 0f00800000;
	mul.rn.f32 	%f2, %f1, 0f4B000000;
	selp.f32 	%f3, %f2, %f1, %p1;
	selp.f32 	%f4, 0fC1B80000, 0f00000000, %p1;
	mov.b32 	%r1, %f3;
	add.s32 	%r2, %r1, -1059760811;
	and.b32  	%r3, %r2, -8388608;
	sub.s32 	%r4, %r1, %r3;
	mov.b32 	%f5, %r4;
	cvt.rn.f32.s32 	%f6, %r3;
	fma.rn.f32 	%f7, %f6, 0f34000000, %f4;
	add.rn.f32 	%f8, %f5, 0fBF800000;
	fma.rn.f32 	%f9, %f8, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f10, %f9, %f8, 0fBDF8CDCC;
	fma.rn.f32 	%f11, %f10, %f8, 0f3E0F2955;
	fma.rn.f32 	%f12, %f11, %f8, 0fBE2AD8B9;
	fma.rn.f32 	%f13, %f12, %f8, 0f3E4CED0B;
	fma.rn.f32 	%f14, %f13, %f8, 0fBE7FFF22;
	fma.rn.f32 	%f15, %f14, %f8, 0f3EAAAA78;
	fma.rn.f32 	%f16, %f15, %f8, 0fBF000000;
	mul.rn.f32 	%f17, %f8, %f16;
	fma.rn.f32 	%f18, %f17, %f8, %f8;
	fma.rn.f32 	%f19, %f7, 0f3F317218, %f18;
	setp.gt.u32 	%p2, %r1, 2139095039;
	fma.rn.f32 	%f20, %f3, 0f7F800000, 0f7F800000;
	selp.f32 	%f21, %f20, %f19, %p2;
	setp.eq.f32 	%p3, %f3, 0f00000000;
	selp.f32 	%f22, 0fFF800000, %f21, %p3;
	st.param.f32 	[func_retval0], %f22;
	ret;
                                        // -- End function
}
	// .globl	__nv_erff               // -- Begin function __nv_erff
.visible .func  (.param .b32 func_retval0) __nv_erff(
	.param .b32 __nv_erff_param_0
)                                       // @__nv_erff
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<5>;
	.reg .f32 	%f<27>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f4, [__nv_erff_param_0];
	abs.f32 	%f5, %f4;
	setp.ltu.f32 	%p1, %f5, 0f3F8060FE;
	setp.ge.f32 	%p2, %f5, 0f3F8060FE;
	mul.rn.f32 	%f6, %f4, %f4;
	selp.f32 	%f7, %f5, %f6, %p2;
	selp.f32 	%f8, 0f3789CA3C, 0f38B1E96A, %p2;
	selp.f32 	%f9, 0fB9F560B9, 0fBA574D20, %p2;
	fma.rn.f32 	%f10, %f8, %f7, %f9;
	selp.f32 	%f11, 0f3BAC840B, 0f3BAAD5EA, %p2;
	fma.rn.f32 	%f12, %f10, %f7, %f11;
	selp.f32 	%f13, 0fBD0C8162, 0fBCDC1BE7, %p2;
	fma.rn.f32 	%f14, %f12, %f7, %f13;
	selp.f32 	%f15, 0f3E1CF906, 0f3DE718AF, %p2;
	fma.rn.f32 	%f16, %f14, %f7, %f15;
	selp.f32 	%f17, 0f3F6A937E, 0fBEC093AC, %p2;
	fma.rn.f32 	%f18, %f16, %f7, %f17;
	selp.f32 	%f19, 0f3F20D842, 0f3E0375D3, %p2;
	fma.rn.f32 	%f20, %f18, %f7, %f19;
	neg.f32 	%f21, %f7;
	selp.f32 	%f22, %f21, %f4, %p2;
	fma.rn.f32 	%f26, %f20, %f22, %f22;
	@%p1 bra 	$L__BB14_2;
// %bb.1:
	ex2.approx.ftz.f32 	%f23, %f26;
	mov.f32 	%f24, 0f3F800000;
	sub.rn.f32 	%f25, %f24, %f23;
	mov.b32 	%r1, %f25;
	mov.b32 	%r2, %f4;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r3, %r1;
	mov.b32 	%f26, %r4;
$L__BB14_2:
	st.param.f32 	[func_retval0], %f26;
	ret;
                                        // -- End function
}
	// .globl	__nv_powf               // -- Begin function __nv_powf
.visible .func  (.param .b32 func_retval0) __nv_powf(
	.param .b32 __nv_powf_param_0,
	.param .b32 __nv_powf_param_1
)                                       // @__nv_powf
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<19>;
	.reg .f32 	%f<105>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f15, [__nv_powf_param_1];
	ld.param.f32 	%f14, [__nv_powf_param_0];
	mul.rn.f32 	%f18, %f15, 0f3F000000;
	cvt.rzi.f32.f32 	%f19, %f18;
	add.rn.f32 	%f20, %f19, %f19;
	sub.rn.f32 	%f21, %f15, %f20;
	abs.f32 	%f22, %f21;
	setp.eq.f32 	%p2, %f22, 0f3F800000;
	abs.f32 	%f2, %f14;
	abs.f32 	%f6, %f15;
	setp.lt.f32 	%p5, %f14, 0f00000000;
	and.pred  	%p1, %p5, %p2;
	setp.neu.f32 	%p6, %f14, 0f00000000;
	@%p6 bra 	$L__BB15_2;
// %bb.1:
	add.rn.f32 	%f98, %f14, %f14;
	mov.b32 	%r8, %f98;
	selp.b32 	%r9, %r8, 0, %p2;
	setp.lt.f32 	%p16, %f15, 0f00000000;
	or.b32  	%r10, %r9, 2139095040;
	selp.b32 	%r11, %r10, %r9, %p16;
	mov.b32 	%f104, %r11;
	bra.uni 	$L__BB15_3;
$L__BB15_2:
	setp.lt.f32 	%p3, %f2, 0f00800000;
	mul.rn.f32 	%f23, %f2, 0f4B800000;
	selp.f32 	%f24, %f23, %f2, %p3;
	mov.b32 	%r1, %f24;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	%f3, %r3;
	setp.gt.f32 	%p4, %f3, 0f3FB504F3;
	mul.rn.f32 	%f25, %f3, 0f3F000000;
	selp.f32 	%f4, %f25, %f3, %p4;
	add.rn.f32 	%f17, %f4, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// end inline asm
	setp.gt.f32 	%p10, %f6, 0f77F684DF;
	mul.rn.f32 	%f26, %f15, 0f39000000;
	selp.f32 	%f27, %f26, %f15, %p10;
	selp.f32 	%f28, 0fC3170000, 0fC2FE0000, %p3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32 	%f29, %r4;
	add.rn.f32 	%f30, %f28, %f29;
	add.rn.f32 	%f31, %f30, 0f3F800000;
	selp.f32 	%f32, %f31, %f30, %p4;
	mov.f32 	%f33, 0f3F317200;
	mul.rn.f32 	%f34, %f32, %f33;
	add.rn.f32 	%f35, %f4, 0fBF800000;
	add.rn.f32 	%f36, %f35, %f35;
	mul.rn.f32 	%f37, %f36, %f16;
	mul.rn.f32 	%f38, %f37, %f37;
	fma.rn.f32 	%f39, %f38, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f40, %f39, %f38, 0f3DAAAABD;
	mul.rn.f32 	%f41, %f40, %f38;
	mul.rn.f32 	%f42, %f41, %f37;
	add.rn.f32 	%f43, %f37, %f42;
	sub.rn.f32 	%f44, %f37, %f43;
	add.rn.f32 	%f45, %f42, %f44;
	neg.f32 	%f46, %f37;
	sub.rn.f32 	%f47, %f35, %f37;
	add.rn.f32 	%f48, %f47, %f47;
	fma.rn.f32 	%f49, %f46, %f35, %f48;
	mul.rn.f32 	%f50, %f16, %f49;
	add.rn.f32 	%f51, %f50, %f45;
	add.rn.f32 	%f52, %f43, %f51;
	add.rn.f32 	%f53, %f34, %f52;
	sub.rn.f32 	%f54, %f34, %f53;
	add.rn.f32 	%f55, %f52, %f54;
	sub.rn.f32 	%f56, %f43, %f52;
	add.rn.f32 	%f57, %f51, %f56;
	add.rn.f32 	%f58, %f57, %f55;
	mov.f32 	%f59, 0f35BFBE8E;
	mul.rn.f32 	%f60, %f32, %f59;
	add.rn.f32 	%f61, %f60, %f58;
	add.rn.f32 	%f62, %f53, %f61;
	mul.rn.f32 	%f63, %f27, %f62;
	sub.rn.f32 	%f64, %f53, %f62;
	add.rn.f32 	%f65, %f61, %f64;
	neg.f32 	%f66, %f63;
	fma.rn.f32 	%f67, %f27, %f62, %f66;
	fma.rn.f32 	%f68, %f27, %f65, %f67;
	fma.rn.f32 	%f69, %f62, 0f00000000, %f68;
	add.rn.f32 	%f70, %f63, %f69;
	mov.b32 	%r5, %f70;
	setp.eq.s32 	%p11, %r5, 1118925336;
	selp.f32 	%f71, 0f42B17217, %f70, %p11;
	neg.f32 	%f72, %f70;
	add.rn.f32 	%f73, %f63, %f72;
	add.rn.f32 	%f74, %f73, %f69;
	add.rn.f32 	%f75, %f74, 0f37000000;
	selp.f32 	%f76, %f75, %f74, %p11;
	mov.f32 	%f77, 0f3FB8AA3B;
	mul.rn.f32 	%f78, %f71, %f77;
	cvt.rzi.f32.f32 	%f79, %f78;
	abs.f32 	%f80, %f79;
	setp.gt.f32 	%p12, %f80, 0f42FC0000;
	mov.f32 	%f81, 0f42FC0000;
	copysign.f32 	%f82, %f79, %f81;
	selp.f32 	%f83, %f82, %f79, %p12;
	fma.rn.f32 	%f84, %f83, 0fBF317218, %f71;
	fma.rn.f32 	%f85, %f83, 0f3102E308, %f84;
	mul.rn.f32 	%f86, %f85, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f87, %f86;
	add.rn.f32 	%f88, %f83, 0f4B40007F;
	mov.b32 	%r6, %f88;
	shl.b32 	%r7, %r6, 23;
	mov.b32 	%f89, %r7;
	mul.rn.f32 	%f90, %f87, %f89;
	setp.neu.f32 	%p13, %f90, 0f7F800000;
	fma.rn.f32 	%f91, %f90, %f76, %f90;
	selp.f32 	%f92, %f91, 0f7F800000, %p13;
	neg.f32 	%f93, %f92;
	selp.f32 	%f94, %f93, %f92, %p1;
	cvt.rzi.f32.f32 	%f95, %f15;
	setp.neu.f32 	%p14, %f15, %f95;
	selp.f32 	%f97, 0f7FFFFFFF, %f94, %p14;
	selp.f32 	%f104, %f97, %f94, %p5;
$L__BB15_3:                             // %__internal_powf_corner_cases.exit
	add.rn.f32 	%f99, %f2, %f6;
	mov.b32 	%r12, %f99;
	setp.lt.s32 	%p17, %r12, 2139095040;
	@%p17 bra 	$L__BB15_10;
// %bb.4:                               // %__nv_isnanf.exit.i
	setp.num.f32 	%p18, %f2, %f2;
	setp.num.f32 	%p19, %f6, %f6;
	and.pred  	%p20, %p18, %p19;
	@%p20 bra 	$L__BB15_6;
// %bb.5:
	add.rn.f32 	%f104, %f14, %f15;
	bra.uni 	$L__BB15_10;
$L__BB15_6:                             // %__nv_isinff.exit8.i
	setp.neu.f32 	%p21, %f6, 0f7F800000;
	@%p21 bra 	$L__BB15_8;
// %bb.7:                               // %__nv_fabsf.exit5.i
	setp.gt.f32 	%p24, %f2, 0f3F800000;
	selp.b32 	%r16, 2139095040, 0, %p24;
	setp.lt.f32 	%p25, %f15, 0f00000000;
	xor.b32  	%r17, %r16, 2139095040;
	selp.b32 	%r18, %r17, %r16, %p25;
	setp.eq.f32 	%p26, %f14, 0fBF800000;
	mov.b32 	%f100, %r18;
	selp.f32 	%f104, 0f3F800000, %f100, %p26;
	bra.uni 	$L__BB15_10;
$L__BB15_8:                             // %__nv_isinff.exit.i
	setp.neu.f32 	%p22, %f2, 0f7F800000;
	@%p22 bra 	$L__BB15_10;
// %bb.9:
	setp.ge.f32 	%p23, %f15, 0f00000000;
	selp.b32 	%r13, 2139095040, 0, %p23;
	or.b32  	%r14, %r13, -2147483648;
	selp.b32 	%r15, %r14, %r13, %p1;
	mov.b32 	%f104, %r15;
$L__BB15_10:                            // %__internal_powf_infinite_cases.exit
	setp.eq.f32 	%p27, %f14, 0f3F800000;
	setp.eq.f32 	%p28, %f15, 0f00000000;
	selp.f32 	%f101, 0f3F800000, %f104, %p28;
	selp.f32 	%f102, 0f3F800000, %f101, %p27;
	st.param.f32 	[func_retval0], %f102;
	ret;
                                        // -- End function
}
