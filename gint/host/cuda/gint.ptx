//
// Generated by LLVM NVPTX Back-End
//

.version 8.5
.target sm_70
.address_size 64

	// .globl	geval                   // -- Begin function geval
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
                                        // @geval
.visible .entry geval(
	.param .u64 .ptr .global .align 1 geval_param_0,
	.param .u64 .ptr .global .align 1 geval_param_1,
	.param .u32 geval_param_2
)
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<1108>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<1882>;
	.reg .f32 	%f<3769>;
	.reg .b64 	%rd<537>;
	.reg .f64 	%fd<49>;

// %bb.0:                               // %entry
	mov.u64 	%SPL, __local_depot0;
	ld.param.u32 	%r424, [geval_param_2];
	ld.param.u64 	%rd170, [geval_param_0];
	ld.param.u64 	%rd172, [geval_param_1];
	add.u64 	%rd1, %SPL, 0;
	add.u64 	%rd2, %SPL, 0;
	add.u64 	%rd3, %SPL, 0;
	add.u64 	%rd4, %SPL, 0;
	add.u64 	%rd5, %SPL, 0;
	add.u64 	%rd6, %SPL, 0;
	add.u64 	%rd7, %SPL, 0;
	add.u64 	%rd8, %SPL, 0;
	add.u64 	%rd9, %SPL, 0;
	add.u64 	%rd10, %SPL, 0;
	add.u64 	%rd11, %SPL, 0;
	add.u64 	%rd12, %SPL, 0;
	add.u64 	%rd13, %SPL, 0;
	add.u64 	%rd14, %SPL, 0;
	add.u64 	%rd15, %SPL, 0;
	add.u64 	%rd16, %SPL, 0;
	add.u64 	%rd17, %SPL, 0;
	add.u64 	%rd18, %SPL, 0;
	add.u64 	%rd19, %SPL, 0;
	add.u64 	%rd20, %SPL, 0;
	add.u64 	%rd21, %SPL, 0;
	add.u64 	%rd22, %SPL, 0;
	add.u64 	%rd23, %SPL, 0;
	add.u64 	%rd24, %SPL, 0;
	ld.global.v2.u32 	{%r1802, %r1803}, [%rd170];
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %laneid;
	mul.wide.u32 	%rd197, %r4, 8;
	add.s64 	%rd25, %rd172, %rd197;
	mul.wide.u32 	%rd198, %r4, 16;
	add.s64 	%rd199, %rd172, %rd198;
	add.s64 	%rd26, %rd199, 64;
	add.s64 	%rd27, %rd199, 192;
	add.s64 	%rd28, %rd199, 320;
	mul.wide.u32 	%rd200, %r4, 4;
	add.s64 	%rd201, %rd172, %rd200;
	add.s64 	%rd29, %rd201, 448;
	add.s64 	%rd30, %rd201, 480;
	add.s64 	%rd31, %rd201, 512;
	mov.b32 	%r1804, 1;
	mov.b64 	%rd512, 0;
	mov.b32 	%r1805, 0;
	mov.f32 	%f3647, 0f00000000;
	mov.u32 	%r5, %ctaid.x;
	mov.f32 	%f3648, %f3647;
	mov.f32 	%f3649, %f3647;
	mov.f32 	%f3650, %f3647;
	mov.f32 	%f3651, %f3647;
	mov.f32 	%f3652, %f3647;
	mov.f32 	%f3653, %f3647;
	mov.f32 	%f3654, %f3647;
	mov.f32 	%f3655, %f3647;
	mov.f32 	%f3656, %f3647;
	mov.f32 	%f3657, %f3647;
	mov.f32 	%f3658, %f3647;
	mov.f32 	%f3659, %f3647;
	mov.f32 	%f3660, %f3647;
	mov.f32 	%f3661, %f3647;
	mov.f32 	%f3662, %f3647;
	mov.f32 	%f3663, %f3647;
	mov.f32 	%f3664, %f3647;
	mov.f32 	%f3665, %f3647;
	mov.f32 	%f3666, %f3647;
	mov.f32 	%f3667, %f3647;
	mov.f32 	%f3668, %f3647;
	mov.f32 	%f3669, %f3647;
	mov.f32 	%f3670, %f3647;
	mov.f32 	%f3671, %f3647;
	mov.f32 	%f3672, %f3647;
	mov.f32 	%f3673, %f3647;
	mov.f32 	%f3674, %f3647;
	mov.f32 	%f3675, %f3647;
	mov.f32 	%f3676, %f3647;
	mov.f32 	%f3677, %f3647;
	mov.f32 	%f3678, %f3647;
	mov.u32 	%r1806, %r1805;
	mov.u32 	%r1807, %r1805;
	mov.u32 	%r1808, %r1805;
	mov.u32 	%r1809, %r1805;
	bra.uni 	$L__BB0_1;
$L__BB0_395:                            //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f3740, %f8, %f16;
$L__BB0_400:                            // %__nv_powf.exit931
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.eq.f32 	%p216, %f3647, 0f3F800000;
	selp.f32 	%f3647, 0f3F800000, %f1345, %p216;
	setp.eq.f32 	%p243, %f3648, 0f3F800000;
	selp.f32 	%f3648, 0f3F800000, %f1431, %p243;
	setp.eq.f32 	%p270, %f3649, 0f3F800000;
	selp.f32 	%f3649, 0f3F800000, %f1517, %p270;
	setp.eq.f32 	%p297, %f3650, 0f3F800000;
	selp.f32 	%f3650, 0f3F800000, %f1603, %p297;
	setp.eq.f32 	%p324, %f3651, 0f3F800000;
	selp.f32 	%f3651, 0f3F800000, %f1689, %p324;
	setp.eq.f32 	%p351, %f3652, 0f3F800000;
	selp.f32 	%f3652, 0f3F800000, %f1775, %p351;
	setp.eq.f32 	%p378, %f3653, 0f3F800000;
	selp.f32 	%f3653, 0f3F800000, %f1861, %p378;
	setp.eq.f32 	%p405, %f8, 0f3F800000;
	setp.eq.f32 	%p406, %f16, 0f00000000;
	selp.f32 	%f1945, 0f3F800000, %f3740, %p406;
	selp.f32 	%f3654, 0f3F800000, %f1945, %p405;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
$L__BB0_502:                            // %back
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r1804, %r1804, 1;
$L__BB0_1:                              // %dispatch
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_200 Depth 2
                                        //     Child Loop BB0_210 Depth 2
                                        //     Child Loop BB0_220 Depth 2
                                        //     Child Loop BB0_230 Depth 2
                                        //     Child Loop BB0_240 Depth 2
                                        //     Child Loop BB0_250 Depth 2
                                        //     Child Loop BB0_260 Depth 2
                                        //     Child Loop BB0_270 Depth 2
                                        //     Child Loop BB0_135 Depth 2
                                        //     Child Loop BB0_143 Depth 2
                                        //     Child Loop BB0_151 Depth 2
                                        //     Child Loop BB0_159 Depth 2
                                        //     Child Loop BB0_167 Depth 2
                                        //     Child Loop BB0_175 Depth 2
                                        //     Child Loop BB0_183 Depth 2
                                        //     Child Loop BB0_191 Depth 2
                                        //     Child Loop BB0_70 Depth 2
                                        //     Child Loop BB0_78 Depth 2
                                        //     Child Loop BB0_86 Depth 2
                                        //     Child Loop BB0_94 Depth 2
                                        //     Child Loop BB0_102 Depth 2
                                        //     Child Loop BB0_110 Depth 2
                                        //     Child Loop BB0_118 Depth 2
                                        //     Child Loop BB0_126 Depth 2
	mov.u32 	%r12, %r1803;
	mov.u32 	%r427, %r1802;
	mov.f32 	%f16, %f3662;
	mov.f32 	%f15, %f3661;
	mov.f32 	%f14, %f3660;
	mov.f32 	%f13, %f3659;
	mov.f32 	%f12, %f3658;
	mov.f32 	%f11, %f3657;
	mov.f32 	%f10, %f3656;
	mov.f32 	%f9, %f3655;
	mov.f32 	%f8, %f3654;
	mul.wide.s32 	%rd202, %r1804, 8;
	add.s64 	%rd203, %rd170, %rd202;
	ld.global.v2.u32 	{%r1802, %r1803}, [%rd203];
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f3647;
	mov.f32 	%f3656, %f3648;
	mov.f32 	%f3657, %f3649;
	mov.f32 	%f3658, %f3650;
	mov.f32 	%f3659, %f3651;
	mov.f32 	%f3660, %f3652;
	mov.f32 	%f3661, %f3653;
	mov.f32 	%f3662, %f8;
	$L_brx_0: .branchtargets
		$L__BB0_2,
		$L__BB0_3,
		$L__BB0_5,
		$L__BB0_21,
		$L__BB0_37,
		$L__BB0_502,
		$L__BB0_38,
		$L__BB0_39,
		$L__BB0_40,
		$L__BB0_41,
		$L__BB0_42,
		$L__BB0_43,
		$L__BB0_44,
		$L__BB0_45,
		$L__BB0_46,
		$L__BB0_47,
		$L__BB0_48,
		$L__BB0_49,
		$L__BB0_50,
		$L__BB0_51,
		$L__BB0_52,
		$L__BB0_53,
		$L__BB0_54,
		$L__BB0_55,
		$L__BB0_56,
		$L__BB0_57,
		$L__BB0_58,
		$L__BB0_59,
		$L__BB0_60,
		$L__BB0_61,
		$L__BB0_62,
		$L__BB0_63,
		$L__BB0_64,
		$L__BB0_65,
		$L__BB0_66,
		$L__BB0_131,
		$L__BB0_196,
		$L__BB0_277,
		$L__BB0_278,
		$L__BB0_279,
		$L__BB0_280,
		$L__BB0_320,
		$L__BB0_401,
		$L__BB0_402,
		$L__BB0_403,
		$L__BB0_404,
		$L__BB0_405,
		$L__BB0_406,
		$L__BB0_422,
		$L__BB0_438,
		$L__BB0_454,
		$L__BB0_470,
		$L__BB0_486;
	brx.idx 	%r427, $L_brx_0;
$L__BB0_3:                              // %LoadTensorInfos
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.ge.s32 	%p1107, %r4, %r424;
	mov.b64 	%rd512, 0;
	mov.b32 	%r1805, 0;
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	mov.u32 	%r1806, %r1805;
	mov.u32 	%r1807, %r1805;
	mov.u32 	%r1808, %r1805;
	mov.u32 	%r1809, %r1805;
	@%p1107 bra 	$L__BB0_502;
// %bb.4:                               // %LoadTensorInfos.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u64 	%rd498, [%rd25];
	ld.global.v4.u32 	{%r1805, %r1756, %r1757, %r1758}, [%rd26];
	ld.global.v4.u32 	{%r1759, %r1760, %r1761, %r1762}, [%rd27];
	ld.global.v4.u32 	{%r1809, %r1767, %r1768, %r1769}, [%rd28];
	ld.global.u32 	%r1807, [%rd29];
	ld.global.u32 	%r1770, [%rd30];
	ld.global.u32 	%r1771, [%rd31];
	add.s32 	%r1772, %r1759, 7;
	shr.u32 	%r1773, %r1772, 3;
	div.u32 	%r1774, %r5, %r1773;
	mul.lo.s32 	%r1775, %r1774, %r1773;
	sub.s32 	%r1776, %r5, %r1775;
	shl.b32 	%r1777, %r1776, 3;
	sub.s32 	%r1806, %r1759, %r1777;
	cvt.u64.u32 	%rd499, %r1777;
	mul.wide.u32 	%rd500, %r1771, %r1805;
	mad.lo.s64 	%rd501, %rd500, %rd499, %rd498;
	div.u32 	%r1778, %r1774, %r1760;
	mul.lo.s32 	%r1779, %r1778, %r1760;
	sub.s32 	%r1780, %r1774, %r1779;
	cvt.u64.u32 	%rd502, %r1780;
	mul.wide.u32 	%rd503, %r1771, %r1756;
	mad.lo.s64 	%rd504, %rd503, %rd502, %rd501;
	div.u32 	%r1781, %r1778, %r1761;
	mul.lo.s32 	%r1782, %r1781, %r1761;
	sub.s32 	%r1783, %r1778, %r1782;
	cvt.u64.u32 	%rd505, %r1783;
	mul.wide.u32 	%rd506, %r1771, %r1757;
	mad.lo.s64 	%rd507, %rd506, %rd505, %rd504;
	rem.u32 	%r1784, %r1781, %r1762;
	cvt.u64.u32 	%rd508, %r1784;
	mul.wide.u32 	%rd509, %r1771, %r1758;
	mad.lo.s64 	%rd512, %rd509, %rd508, %rd507;
	mul.lo.s32 	%r1785, %r1777, %r1809;
	mad.lo.s32 	%r1786, %r1780, %r1767, %r1785;
	mad.lo.s32 	%r1787, %r1783, %r1768, %r1786;
	mad.lo.s32 	%r1788, %r1784, %r1769, %r1787;
	sub.s32 	%r1808, %r1770, %r1788;
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_320:                            // %FPow
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f1260, %f9, 0f3F000000;
	cvt.rzi.f32.f32 	%f1261, %f1260;
	add.rn.f32 	%f1262, %f1261, %f1261;
	sub.rn.f32 	%f1263, %f9, %f1262;
	abs.f32 	%f1264, %f1263;
	setp.eq.f32 	%p191, %f1264, 0f3F800000;
	abs.f32 	%f436, %f3647;
	abs.f32 	%f440, %f9;
	setp.lt.f32 	%p194, %f3647, 0f00000000;
	and.pred  	%p1, %p194, %p191;
	setp.neu.f32 	%p195, %f3647, 0f00000000;
	@%p195 bra 	$L__BB0_322;
// %bb.321:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1340, %f3647, %f3647;
	mov.b32 	%r655, %f1340;
	selp.b32 	%r656, %r655, 0, %p191;
	setp.lt.f32 	%p205, %f9, 0f00000000;
	or.b32  	%r657, %r656, 2139095040;
	selp.b32 	%r658, %r657, %r656, %p205;
	mov.b32 	%f3726, %r658;
	bra.uni 	$L__BB0_323;
$L__BB0_196:                            // %FTan
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2519, %f3647, 0f3F22F983;
	cvt.rni.s32.f32 	%r1860, %f2519;
	cvt.rn.f32.s32 	%f2520, %r1860;
	fma.rn.f32 	%f2521, %f2520, 0fBFC90FDA, %f3647;
	fma.rn.f32 	%f2522, %f2520, 0fB3A22168, %f2521;
	fma.rn.f32 	%f3702, %f2520, 0fA7C234C5, %f2522;
	abs.f32 	%f293, %f3647;
	setp.ltu.f32 	%p535, %f293, 0f47CE4780;
	mov.u64 	%rd510, __cudart_i2opi_f;
	@%p535 bra 	$L__BB0_204;
// %bb.197:                             // %__nv_isinff.exit.i.i
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p536, %f293, 0f7F800000;
	@%p536 bra 	$L__BB0_199;
// %bb.198:                             // %__nv_fmul_rn.exit.i.i
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2525, 0f00000000;
	mul.rn.f32 	%f3702, %f3647, %f2525;
	mov.b32 	%r1860, 0;
	bra.uni 	$L__BB0_204;
$L__BB0_55:                             // %FNeg
                                        //   in Loop: Header=BB0_1 Depth=1
	neg.f32 	%f3647, %f3647;
	neg.f32 	%f3648, %f3648;
	neg.f32 	%f3649, %f3649;
	neg.f32 	%f3650, %f3650;
	neg.f32 	%f3651, %f3651;
	neg.f32 	%f3652, %f3652;
	neg.f32 	%f3653, %f3653;
	neg.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_402:                            // %FExp2
                                        //   in Loop: Header=BB0_1 Depth=1
	ex2.approx.f32 	%f3647, %f3647;
	ex2.approx.f32 	%f3648, %f3648;
	ex2.approx.f32 	%f3649, %f3649;
	ex2.approx.f32 	%f3650, %f3650;
	ex2.approx.f32 	%f3651, %f3651;
	ex2.approx.f32 	%f3652, %f3652;
	ex2.approx.f32 	%f3653, %f3653;
	ex2.approx.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_51:                             // %FSub
                                        //   in Loop: Header=BB0_1 Depth=1
	sub.rn.f32 	%f3647, %f3647, %f9;
	sub.rn.f32 	%f3648, %f3648, %f10;
	sub.rn.f32 	%f3649, %f3649, %f11;
	sub.rn.f32 	%f3650, %f3650, %f12;
	sub.rn.f32 	%f3651, %f3651, %f13;
	sub.rn.f32 	%f3652, %f3652, %f14;
	sub.rn.f32 	%f3653, %f3653, %f15;
	sub.rn.f32 	%f3654, %f8, %f16;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_278:                            // %FArcCos
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f2267, %f3647;
	mov.f32 	%f2268, 0f3F800000;
	sub.rn.f32 	%f2269, %f2268, %f2267;
	mul.rn.f32 	%f2270, %f2269, 0f3F000000;
	sqrt.approx.f32 	%f2271, %f2270;
	setp.gt.f32 	%p503, %f2267, 0f3F11EB85;
	selp.f32 	%f2272, %f2271, %f2267, %p503;
	mul.rn.f32 	%f2273, %f2272, %f2272;
	fma.rn.f32 	%f2274, %f2273, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2275, %f2274, %f2273, 0f3D3F841F;
	fma.rn.f32 	%f2276, %f2275, %f2273, 0f3D994929;
	fma.rn.f32 	%f2277, %f2276, %f2273, 0f3E2AAB94;
	mul.rn.f32 	%f2278, %f2273, %f2277;
	fma.rn.f32 	%f2279, %f2278, %f2272, %f2272;
	add.rn.f32 	%f2280, %f2279, %f2279;
	mov.f32 	%f2281, 0f3FC90FDB;
	sub.rn.f32 	%f2282, %f2281, %f2279;
	selp.f32 	%f2283, %f2280, %f2282, %p503;
	setp.lt.f32 	%p504, %f3647, 0f00000000;
	mov.f32 	%f2284, 0f40490FDB;
	sub.rn.f32 	%f2285, %f2284, %f2283;
	selp.f32 	%f3647, %f2285, %f2283, %p504;
	abs.f32 	%f2286, %f3648;
	sub.rn.f32 	%f2287, %f2268, %f2286;
	mul.rn.f32 	%f2288, %f2287, 0f3F000000;
	sqrt.approx.f32 	%f2289, %f2288;
	setp.gt.f32 	%p505, %f2286, 0f3F11EB85;
	selp.f32 	%f2290, %f2289, %f2286, %p505;
	mul.rn.f32 	%f2291, %f2290, %f2290;
	fma.rn.f32 	%f2292, %f2291, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2293, %f2292, %f2291, 0f3D3F841F;
	fma.rn.f32 	%f2294, %f2293, %f2291, 0f3D994929;
	fma.rn.f32 	%f2295, %f2294, %f2291, 0f3E2AAB94;
	mul.rn.f32 	%f2296, %f2291, %f2295;
	fma.rn.f32 	%f2297, %f2296, %f2290, %f2290;
	add.rn.f32 	%f2298, %f2297, %f2297;
	sub.rn.f32 	%f2299, %f2281, %f2297;
	selp.f32 	%f2300, %f2298, %f2299, %p505;
	setp.lt.f32 	%p506, %f3648, 0f00000000;
	sub.rn.f32 	%f2301, %f2284, %f2300;
	selp.f32 	%f3648, %f2301, %f2300, %p506;
	abs.f32 	%f2302, %f3649;
	sub.rn.f32 	%f2303, %f2268, %f2302;
	mul.rn.f32 	%f2304, %f2303, 0f3F000000;
	sqrt.approx.f32 	%f2305, %f2304;
	setp.gt.f32 	%p507, %f2302, 0f3F11EB85;
	selp.f32 	%f2306, %f2305, %f2302, %p507;
	mul.rn.f32 	%f2307, %f2306, %f2306;
	fma.rn.f32 	%f2308, %f2307, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2309, %f2308, %f2307, 0f3D3F841F;
	fma.rn.f32 	%f2310, %f2309, %f2307, 0f3D994929;
	fma.rn.f32 	%f2311, %f2310, %f2307, 0f3E2AAB94;
	mul.rn.f32 	%f2312, %f2307, %f2311;
	fma.rn.f32 	%f2313, %f2312, %f2306, %f2306;
	add.rn.f32 	%f2314, %f2313, %f2313;
	sub.rn.f32 	%f2315, %f2281, %f2313;
	selp.f32 	%f2316, %f2314, %f2315, %p507;
	setp.lt.f32 	%p508, %f3649, 0f00000000;
	sub.rn.f32 	%f2317, %f2284, %f2316;
	selp.f32 	%f3649, %f2317, %f2316, %p508;
	abs.f32 	%f2318, %f3650;
	sub.rn.f32 	%f2319, %f2268, %f2318;
	mul.rn.f32 	%f2320, %f2319, 0f3F000000;
	sqrt.approx.f32 	%f2321, %f2320;
	setp.gt.f32 	%p509, %f2318, 0f3F11EB85;
	selp.f32 	%f2322, %f2321, %f2318, %p509;
	mul.rn.f32 	%f2323, %f2322, %f2322;
	fma.rn.f32 	%f2324, %f2323, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2325, %f2324, %f2323, 0f3D3F841F;
	fma.rn.f32 	%f2326, %f2325, %f2323, 0f3D994929;
	fma.rn.f32 	%f2327, %f2326, %f2323, 0f3E2AAB94;
	mul.rn.f32 	%f2328, %f2323, %f2327;
	fma.rn.f32 	%f2329, %f2328, %f2322, %f2322;
	add.rn.f32 	%f2330, %f2329, %f2329;
	sub.rn.f32 	%f2331, %f2281, %f2329;
	selp.f32 	%f2332, %f2330, %f2331, %p509;
	setp.lt.f32 	%p510, %f3650, 0f00000000;
	sub.rn.f32 	%f2333, %f2284, %f2332;
	selp.f32 	%f3650, %f2333, %f2332, %p510;
	abs.f32 	%f2334, %f3651;
	sub.rn.f32 	%f2335, %f2268, %f2334;
	mul.rn.f32 	%f2336, %f2335, 0f3F000000;
	sqrt.approx.f32 	%f2337, %f2336;
	setp.gt.f32 	%p511, %f2334, 0f3F11EB85;
	selp.f32 	%f2338, %f2337, %f2334, %p511;
	mul.rn.f32 	%f2339, %f2338, %f2338;
	fma.rn.f32 	%f2340, %f2339, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2341, %f2340, %f2339, 0f3D3F841F;
	fma.rn.f32 	%f2342, %f2341, %f2339, 0f3D994929;
	fma.rn.f32 	%f2343, %f2342, %f2339, 0f3E2AAB94;
	mul.rn.f32 	%f2344, %f2339, %f2343;
	fma.rn.f32 	%f2345, %f2344, %f2338, %f2338;
	add.rn.f32 	%f2346, %f2345, %f2345;
	sub.rn.f32 	%f2347, %f2281, %f2345;
	selp.f32 	%f2348, %f2346, %f2347, %p511;
	setp.lt.f32 	%p512, %f3651, 0f00000000;
	sub.rn.f32 	%f2349, %f2284, %f2348;
	selp.f32 	%f3651, %f2349, %f2348, %p512;
	abs.f32 	%f2350, %f3652;
	sub.rn.f32 	%f2351, %f2268, %f2350;
	mul.rn.f32 	%f2352, %f2351, 0f3F000000;
	sqrt.approx.f32 	%f2353, %f2352;
	setp.gt.f32 	%p513, %f2350, 0f3F11EB85;
	selp.f32 	%f2354, %f2353, %f2350, %p513;
	mul.rn.f32 	%f2355, %f2354, %f2354;
	fma.rn.f32 	%f2356, %f2355, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2357, %f2356, %f2355, 0f3D3F841F;
	fma.rn.f32 	%f2358, %f2357, %f2355, 0f3D994929;
	fma.rn.f32 	%f2359, %f2358, %f2355, 0f3E2AAB94;
	mul.rn.f32 	%f2360, %f2355, %f2359;
	fma.rn.f32 	%f2361, %f2360, %f2354, %f2354;
	add.rn.f32 	%f2362, %f2361, %f2361;
	sub.rn.f32 	%f2363, %f2281, %f2361;
	selp.f32 	%f2364, %f2362, %f2363, %p513;
	setp.lt.f32 	%p514, %f3652, 0f00000000;
	sub.rn.f32 	%f2365, %f2284, %f2364;
	selp.f32 	%f3652, %f2365, %f2364, %p514;
	abs.f32 	%f2366, %f3653;
	sub.rn.f32 	%f2367, %f2268, %f2366;
	mul.rn.f32 	%f2368, %f2367, 0f3F000000;
	sqrt.approx.f32 	%f2369, %f2368;
	setp.gt.f32 	%p515, %f2366, 0f3F11EB85;
	selp.f32 	%f2370, %f2369, %f2366, %p515;
	mul.rn.f32 	%f2371, %f2370, %f2370;
	fma.rn.f32 	%f2372, %f2371, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2373, %f2372, %f2371, 0f3D3F841F;
	fma.rn.f32 	%f2374, %f2373, %f2371, 0f3D994929;
	fma.rn.f32 	%f2375, %f2374, %f2371, 0f3E2AAB94;
	mul.rn.f32 	%f2376, %f2371, %f2375;
	fma.rn.f32 	%f2377, %f2376, %f2370, %f2370;
	add.rn.f32 	%f2378, %f2377, %f2377;
	sub.rn.f32 	%f2379, %f2281, %f2377;
	selp.f32 	%f2380, %f2378, %f2379, %p515;
	setp.lt.f32 	%p516, %f3653, 0f00000000;
	sub.rn.f32 	%f2381, %f2284, %f2380;
	selp.f32 	%f3653, %f2381, %f2380, %p516;
	abs.f32 	%f2382, %f8;
	sub.rn.f32 	%f2383, %f2268, %f2382;
	mul.rn.f32 	%f2384, %f2383, 0f3F000000;
	sqrt.approx.f32 	%f2385, %f2384;
	setp.gt.f32 	%p517, %f2382, 0f3F11EB85;
	selp.f32 	%f2386, %f2385, %f2382, %p517;
	mul.rn.f32 	%f2387, %f2386, %f2386;
	fma.rn.f32 	%f2388, %f2387, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2389, %f2388, %f2387, 0f3D3F841F;
	fma.rn.f32 	%f2390, %f2389, %f2387, 0f3D994929;
	fma.rn.f32 	%f2391, %f2390, %f2387, 0f3E2AAB94;
	mul.rn.f32 	%f2392, %f2387, %f2391;
	fma.rn.f32 	%f2393, %f2392, %f2386, %f2386;
	add.rn.f32 	%f2394, %f2393, %f2393;
	sub.rn.f32 	%f2395, %f2281, %f2393;
	selp.f32 	%f2396, %f2394, %f2395, %p517;
	setp.lt.f32 	%p518, %f8, 0f00000000;
	sub.rn.f32 	%f2397, %f2284, %f2396;
	selp.f32 	%f3654, %f2397, %f2396, %p518;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_131:                            // %FCos
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2663, %f3647, 0f3F22F983;
	cvt.rni.s32.f32 	%r1836, %f2663;
	cvt.rn.f32.s32 	%f2664, %r1836;
	fma.rn.f32 	%f2665, %f2664, 0fBFC90FDA, %f3647;
	fma.rn.f32 	%f2666, %f2664, 0fB3A22168, %f2665;
	fma.rn.f32 	%f3694, %f2664, 0fA7C234C5, %f2666;
	abs.f32 	%f245, %f3647;
	setp.ltu.f32 	%p607, %f245, 0f47CE4780;
	@%p607 bra 	$L__BB0_139;
// %bb.132:                             // %__nv_isinff.exit.i.i.i173
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p608, %f245, 0f7F800000;
	@%p608 bra 	$L__BB0_134;
// %bb.133:                             // %__nv_fmul_rn.exit.i.i.i192
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2669, 0f00000000;
	mul.rn.f32 	%f3694, %f3647, %f2669;
	mov.b32 	%r1836, 0;
	bra.uni 	$L__BB0_139;
$L__BB0_46:                             // %MovF0F3
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3647, %f3671;
	mov.f32 	%f3648, %f3672;
	mov.f32 	%f3649, %f3673;
	mov.f32 	%f3650, %f3674;
	mov.f32 	%f3651, %f3675;
	mov.f32 	%f3652, %f3676;
	mov.f32 	%f3653, %f3677;
	mov.f32 	%f3654, %f3678;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_470:                            // %StoreGlobalBF16
                                        //   in Loop: Header=BB0_1 Depth=1
	and.b32  	%r437, %r12, 15;
	shr.u32 	%r438, %r12, 4;
	cvt.u32.u64 	%r439, %rd512;
	{ .reg .b32 tmp; mov.b64 {tmp, %r440}, %rd512; }
	shfl.sync.idx.b32	%r441, %r439, %r437, 31, -1;
	shfl.sync.idx.b32	%r442, %r440, %r437, 31, -1;
	cvt.u64.u32 	%rd209, %r441;
	cvt.u64.u32 	%rd210, %r442;
	shl.b64 	%rd211, %rd210, 32;
	or.b64  	%rd212, %rd209, %rd211;
	add.s32 	%r402, %r438, %r3;
	shfl.sync.idx.b32	%r403, %r1808, %r437, 31, -1;
	shfl.sync.idx.b32	%r443, %r1807, %r437, 31, -1;
	shfl.sync.idx.b32	%r404, %r1805, %r437, 31, -1;
	shfl.sync.idx.b32	%r405, %r1806, %r437, 31, -1;
	shfl.sync.idx.b32	%r406, %r1809, %r437, 31, -1;
	mul.lo.s32 	%r444, %r443, %r402;
	mul.wide.s32 	%rd213, %r444, 2;
	add.s64 	%rd152, %rd212, %rd213;
	setp.ge.u32 	%p31, %r402, %r403;
	@%p31 bra 	$L__BB0_472;
// %bb.471:                             // %StoreGlobalBF16.if
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r445, %f3647;
	bfe.u32 	%r446, %r445, 16, 1;
	add.s32 	%r447, %r446, %r445;
	add.s32 	%r448, %r447, 32767;
	setp.nan.f32 	%p32, %f3647, %f3647;
	or.b32  	%r449, %r445, 4194304;
	selp.b32 	%r450, %r449, %r448, %p32;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs9}, %r450; }
	st.global.b16 	[%rd152], %rs9;
$L__BB0_472:                            // %StoreGlobalBF16.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r407, %r406, %r402;
	cvt.s64.s32 	%rd153, %r404;
	mul.wide.s32 	%rd214, %r404, 2;
	add.s64 	%rd154, %rd152, %rd214;
	setp.ge.u32 	%p33, %r407, %r403;
	setp.lt.u32 	%p34, %r405, 2;
	or.pred  	%p36, %p34, %p33;
	@%p36 bra 	$L__BB0_474;
// %bb.473:                             // %StoreGlobalBF16.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r451, %f3648;
	bfe.u32 	%r452, %r451, 16, 1;
	add.s32 	%r453, %r452, %r451;
	add.s32 	%r454, %r453, 32767;
	setp.nan.f32 	%p35, %f3648, %f3648;
	or.b32  	%r455, %r451, 4194304;
	selp.b32 	%r456, %r455, %r454, %p35;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs10}, %r456; }
	st.global.b16 	[%rd154], %rs10;
$L__BB0_474:                            // %StoreGlobalBF16.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r408, %r407, %r406;
	shl.b64 	%rd215, %rd153, 1;
	add.s64 	%rd155, %rd154, %rd215;
	setp.ge.u32 	%p37, %r408, %r403;
	setp.lt.u32 	%p38, %r405, 3;
	or.pred  	%p40, %p38, %p37;
	@%p40 bra 	$L__BB0_476;
// %bb.475:                             // %StoreGlobalBF16.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r457, %f3649;
	bfe.u32 	%r458, %r457, 16, 1;
	add.s32 	%r459, %r458, %r457;
	add.s32 	%r460, %r459, 32767;
	setp.nan.f32 	%p39, %f3649, %f3649;
	or.b32  	%r461, %r457, 4194304;
	selp.b32 	%r462, %r461, %r460, %p39;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs11}, %r462; }
	st.global.b16 	[%rd155], %rs11;
$L__BB0_476:                            // %StoreGlobalBF16.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r409, %r408, %r406;
	add.s64 	%rd156, %rd155, %rd215;
	setp.ge.u32 	%p41, %r409, %r403;
	setp.lt.u32 	%p42, %r405, 4;
	or.pred  	%p44, %p42, %p41;
	@%p44 bra 	$L__BB0_478;
// %bb.477:                             // %StoreGlobalBF16.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r463, %f3650;
	bfe.u32 	%r464, %r463, 16, 1;
	add.s32 	%r465, %r464, %r463;
	add.s32 	%r466, %r465, 32767;
	setp.nan.f32 	%p43, %f3650, %f3650;
	or.b32  	%r467, %r463, 4194304;
	selp.b32 	%r468, %r467, %r466, %p43;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs12}, %r468; }
	st.global.b16 	[%rd156], %rs12;
$L__BB0_478:                            // %StoreGlobalBF16.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r410, %r409, %r406;
	add.s64 	%rd157, %rd156, %rd215;
	setp.ge.u32 	%p45, %r410, %r403;
	setp.lt.u32 	%p46, %r405, 5;
	or.pred  	%p48, %p46, %p45;
	@%p48 bra 	$L__BB0_480;
// %bb.479:                             // %StoreGlobalBF16.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r469, %f3651;
	bfe.u32 	%r470, %r469, 16, 1;
	add.s32 	%r471, %r470, %r469;
	add.s32 	%r472, %r471, 32767;
	setp.nan.f32 	%p47, %f3651, %f3651;
	or.b32  	%r473, %r469, 4194304;
	selp.b32 	%r474, %r473, %r472, %p47;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs13}, %r474; }
	st.global.b16 	[%rd157], %rs13;
$L__BB0_480:                            // %StoreGlobalBF16.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r411, %r410, %r406;
	add.s64 	%rd158, %rd157, %rd215;
	setp.ge.u32 	%p49, %r411, %r403;
	setp.lt.u32 	%p50, %r405, 6;
	or.pred  	%p52, %p50, %p49;
	@%p52 bra 	$L__BB0_482;
// %bb.481:                             // %StoreGlobalBF16.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r475, %f3652;
	bfe.u32 	%r476, %r475, 16, 1;
	add.s32 	%r477, %r476, %r475;
	add.s32 	%r478, %r477, 32767;
	setp.nan.f32 	%p51, %f3652, %f3652;
	or.b32  	%r479, %r475, 4194304;
	selp.b32 	%r480, %r479, %r478, %p51;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs14}, %r480; }
	st.global.b16 	[%rd158], %rs14;
$L__BB0_482:                            // %StoreGlobalBF16.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r412, %r411, %r406;
	add.s64 	%rd159, %rd158, %rd215;
	setp.ge.u32 	%p53, %r412, %r403;
	setp.lt.u32 	%p54, %r405, 7;
	or.pred  	%p56, %p54, %p53;
	@%p56 bra 	$L__BB0_484;
// %bb.483:                             // %StoreGlobalBF16.endif.end...if
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r481, %f3653;
	bfe.u32 	%r482, %r481, 16, 1;
	add.s32 	%r483, %r482, %r481;
	add.s32 	%r484, %r483, 32767;
	setp.nan.f32 	%p55, %f3653, %f3653;
	or.b32  	%r485, %r481, 4194304;
	selp.b32 	%r486, %r485, %r484, %p55;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs15}, %r486; }
	st.global.b16 	[%rd159], %rs15;
$L__BB0_484:                            // %StoreGlobalBF16.endif.end...endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r487, %r412, %r406;
	setp.ge.u32 	%p57, %r487, %r403;
	setp.lt.u32 	%p58, %r405, 8;
	or.pred  	%p60, %p58, %p57;
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	@%p60 bra 	$L__BB0_502;
// %bb.485:                             // %StoreGlobalBF16.endif.end...endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r488, %f8;
	bfe.u32 	%r489, %r488, 16, 1;
	add.s32 	%r490, %r489, %r488;
	add.s32 	%r491, %r490, 32767;
	setp.nan.f32 	%p59, %f8, %f8;
	or.b32  	%r492, %r488, 4194304;
	selp.b32 	%r493, %r492, %r491, %p59;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs16}, %r493; }
	add.s64 	%rd160, %rd159, %rd215;
	st.global.b16 	[%rd160], %rs16;
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_438:                            // %StoreGlobalF16
                                        //   in Loop: Header=BB0_1 Depth=1
	and.b32  	%r519, %r12, 15;
	shr.u32 	%r520, %r12, 4;
	cvt.u32.u64 	%r521, %rd512;
	{ .reg .b32 tmp; mov.b64 {tmp, %r522}, %rd512; }
	shfl.sync.idx.b32	%r523, %r521, %r519, 31, -1;
	shfl.sync.idx.b32	%r524, %r522, %r519, 31, -1;
	cvt.u64.u32 	%rd233, %r523;
	cvt.u64.u32 	%rd234, %r524;
	shl.b64 	%rd235, %rd234, 32;
	or.b64  	%rd236, %rd233, %rd235;
	add.s32 	%r380, %r520, %r3;
	shfl.sync.idx.b32	%r381, %r1808, %r519, 31, -1;
	shfl.sync.idx.b32	%r525, %r1807, %r519, 31, -1;
	shfl.sync.idx.b32	%r382, %r1805, %r519, 31, -1;
	shfl.sync.idx.b32	%r383, %r1806, %r519, 31, -1;
	shfl.sync.idx.b32	%r384, %r1809, %r519, 31, -1;
	mul.lo.s32 	%r526, %r525, %r380;
	mul.wide.s32 	%rd237, %r526, 2;
	add.s64 	%rd134, %rd236, %rd237;
	setp.ge.u32 	%p83, %r380, %r381;
	@%p83 bra 	$L__BB0_440;
// %bb.439:                             // %StoreGlobalF16.if
                                        //   in Loop: Header=BB0_1 Depth=1
	cvt.rn.f16.f32 	%rs1, %f3647;
	st.global.b16 	[%rd134], %rs1;
$L__BB0_440:                            // %StoreGlobalF16.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r385, %r384, %r380;
	cvt.s64.s32 	%rd135, %r382;
	mul.wide.s32 	%rd238, %r382, 2;
	add.s64 	%rd136, %rd134, %rd238;
	setp.ge.u32 	%p84, %r385, %r381;
	setp.lt.u32 	%p85, %r383, 2;
	or.pred  	%p86, %p85, %p84;
	@%p86 bra 	$L__BB0_442;
// %bb.441:                             // %StoreGlobalF16.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	cvt.rn.f16.f32 	%rs2, %f3648;
	st.global.b16 	[%rd136], %rs2;
$L__BB0_442:                            // %StoreGlobalF16.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r386, %r385, %r384;
	shl.b64 	%rd239, %rd135, 1;
	add.s64 	%rd137, %rd136, %rd239;
	setp.ge.u32 	%p87, %r386, %r381;
	setp.lt.u32 	%p88, %r383, 3;
	or.pred  	%p89, %p88, %p87;
	@%p89 bra 	$L__BB0_444;
// %bb.443:                             // %StoreGlobalF16.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	cvt.rn.f16.f32 	%rs3, %f3649;
	st.global.b16 	[%rd137], %rs3;
$L__BB0_444:                            // %StoreGlobalF16.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r387, %r386, %r384;
	add.s64 	%rd138, %rd137, %rd239;
	setp.ge.u32 	%p90, %r387, %r381;
	setp.lt.u32 	%p91, %r383, 4;
	or.pred  	%p92, %p91, %p90;
	@%p92 bra 	$L__BB0_446;
// %bb.445:                             // %StoreGlobalF16.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	cvt.rn.f16.f32 	%rs4, %f3650;
	st.global.b16 	[%rd138], %rs4;
$L__BB0_446:                            // %StoreGlobalF16.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r388, %r387, %r384;
	add.s64 	%rd139, %rd138, %rd239;
	setp.ge.u32 	%p93, %r388, %r381;
	setp.lt.u32 	%p94, %r383, 5;
	or.pred  	%p95, %p94, %p93;
	@%p95 bra 	$L__BB0_448;
// %bb.447:                             // %StoreGlobalF16.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	cvt.rn.f16.f32 	%rs5, %f3651;
	st.global.b16 	[%rd139], %rs5;
$L__BB0_448:                            // %StoreGlobalF16.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r389, %r388, %r384;
	add.s64 	%rd140, %rd139, %rd239;
	setp.ge.u32 	%p96, %r389, %r381;
	setp.lt.u32 	%p97, %r383, 6;
	or.pred  	%p98, %p97, %p96;
	@%p98 bra 	$L__BB0_450;
// %bb.449:                             // %StoreGlobalF16.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	cvt.rn.f16.f32 	%rs6, %f3652;
	st.global.b16 	[%rd140], %rs6;
$L__BB0_450:                            // %StoreGlobalF16.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r390, %r389, %r384;
	add.s64 	%rd141, %rd140, %rd239;
	setp.ge.u32 	%p99, %r390, %r381;
	setp.lt.u32 	%p100, %r383, 7;
	or.pred  	%p101, %p100, %p99;
	@%p101 bra 	$L__BB0_452;
// %bb.451:                             // %StoreGlobalF16.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	cvt.rn.f16.f32 	%rs7, %f3653;
	st.global.b16 	[%rd141], %rs7;
$L__BB0_452:                            // %StoreGlobalF16.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r527, %r390, %r384;
	setp.ge.u32 	%p102, %r527, %r381;
	setp.lt.u32 	%p103, %r383, 8;
	or.pred  	%p104, %p103, %p102;
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	@%p104 bra 	$L__BB0_502;
// %bb.453:                             // %StoreGlobalF16.endif.endi...if
                                        //   in Loop: Header=BB0_1 Depth=1
	cvt.rn.f16.f32 	%rs8, %f8;
	add.s64 	%rd142, %rd141, %rd239;
	st.global.b16 	[%rd142], %rs8;
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_43:                             // %MovF0F2
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3647, %f3663;
	mov.f32 	%f3648, %f3664;
	mov.f32 	%f3649, %f3665;
	mov.f32 	%f3650, %f3666;
	mov.f32 	%f3651, %f3667;
	mov.f32 	%f3652, %f3668;
	mov.f32 	%f3653, %f3669;
	mov.f32 	%f3654, %f3670;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_403:                            // %FLog
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.lt.f32 	%p167, %f3647, 0f00800000;
	mul.rn.f32 	%f1024, %f3647, 0f4B000000;
	selp.f32 	%f1025, %f1024, %f3647, %p167;
	selp.f32 	%f1026, 0fC1B80000, 0f00000000, %p167;
	mov.b32 	%r601, %f1025;
	add.s32 	%r602, %r601, -1059760811;
	and.b32  	%r603, %r602, -8388608;
	sub.s32 	%r604, %r601, %r603;
	mov.b32 	%f1027, %r604;
	cvt.rn.f32.s32 	%f1028, %r603;
	fma.rn.f32 	%f1029, %f1028, 0f34000000, %f1026;
	add.rn.f32 	%f1030, %f1027, 0fBF800000;
	fma.rn.f32 	%f1031, %f1030, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1032, %f1031, %f1030, 0fBDF8CDCC;
	fma.rn.f32 	%f1033, %f1032, %f1030, 0f3E0F2955;
	fma.rn.f32 	%f1034, %f1033, %f1030, 0fBE2AD8B9;
	fma.rn.f32 	%f1035, %f1034, %f1030, 0f3E4CED0B;
	fma.rn.f32 	%f1036, %f1035, %f1030, 0fBE7FFF22;
	fma.rn.f32 	%f1037, %f1036, %f1030, 0f3EAAAA78;
	fma.rn.f32 	%f1038, %f1037, %f1030, 0fBF000000;
	mul.rn.f32 	%f1039, %f1030, %f1038;
	fma.rn.f32 	%f1040, %f1039, %f1030, %f1030;
	fma.rn.f32 	%f1041, %f1029, 0f3F317218, %f1040;
	setp.gt.u32 	%p168, %r601, 2139095039;
	fma.rn.f32 	%f1042, %f1025, 0f7F800000, 0f7F800000;
	selp.f32 	%f1043, %f1042, %f1041, %p168;
	setp.eq.f32 	%p169, %f1025, 0f00000000;
	selp.f32 	%f3647, 0fFF800000, %f1043, %p169;
	setp.lt.f32 	%p170, %f3648, 0f00800000;
	mul.rn.f32 	%f1044, %f3648, 0f4B000000;
	selp.f32 	%f1045, %f1044, %f3648, %p170;
	selp.f32 	%f1046, 0fC1B80000, 0f00000000, %p170;
	mov.b32 	%r605, %f1045;
	add.s32 	%r606, %r605, -1059760811;
	and.b32  	%r607, %r606, -8388608;
	sub.s32 	%r608, %r605, %r607;
	mov.b32 	%f1047, %r608;
	cvt.rn.f32.s32 	%f1048, %r607;
	fma.rn.f32 	%f1049, %f1048, 0f34000000, %f1046;
	add.rn.f32 	%f1050, %f1047, 0fBF800000;
	fma.rn.f32 	%f1051, %f1050, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1052, %f1051, %f1050, 0fBDF8CDCC;
	fma.rn.f32 	%f1053, %f1052, %f1050, 0f3E0F2955;
	fma.rn.f32 	%f1054, %f1053, %f1050, 0fBE2AD8B9;
	fma.rn.f32 	%f1055, %f1054, %f1050, 0f3E4CED0B;
	fma.rn.f32 	%f1056, %f1055, %f1050, 0fBE7FFF22;
	fma.rn.f32 	%f1057, %f1056, %f1050, 0f3EAAAA78;
	fma.rn.f32 	%f1058, %f1057, %f1050, 0fBF000000;
	mul.rn.f32 	%f1059, %f1050, %f1058;
	fma.rn.f32 	%f1060, %f1059, %f1050, %f1050;
	fma.rn.f32 	%f1061, %f1049, 0f3F317218, %f1060;
	setp.gt.u32 	%p171, %r605, 2139095039;
	fma.rn.f32 	%f1062, %f1045, 0f7F800000, 0f7F800000;
	selp.f32 	%f1063, %f1062, %f1061, %p171;
	setp.eq.f32 	%p172, %f1045, 0f00000000;
	selp.f32 	%f3648, 0fFF800000, %f1063, %p172;
	setp.lt.f32 	%p173, %f3649, 0f00800000;
	mul.rn.f32 	%f1064, %f3649, 0f4B000000;
	selp.f32 	%f1065, %f1064, %f3649, %p173;
	selp.f32 	%f1066, 0fC1B80000, 0f00000000, %p173;
	mov.b32 	%r609, %f1065;
	add.s32 	%r610, %r609, -1059760811;
	and.b32  	%r611, %r610, -8388608;
	sub.s32 	%r612, %r609, %r611;
	mov.b32 	%f1067, %r612;
	cvt.rn.f32.s32 	%f1068, %r611;
	fma.rn.f32 	%f1069, %f1068, 0f34000000, %f1066;
	add.rn.f32 	%f1070, %f1067, 0fBF800000;
	fma.rn.f32 	%f1071, %f1070, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1072, %f1071, %f1070, 0fBDF8CDCC;
	fma.rn.f32 	%f1073, %f1072, %f1070, 0f3E0F2955;
	fma.rn.f32 	%f1074, %f1073, %f1070, 0fBE2AD8B9;
	fma.rn.f32 	%f1075, %f1074, %f1070, 0f3E4CED0B;
	fma.rn.f32 	%f1076, %f1075, %f1070, 0fBE7FFF22;
	fma.rn.f32 	%f1077, %f1076, %f1070, 0f3EAAAA78;
	fma.rn.f32 	%f1078, %f1077, %f1070, 0fBF000000;
	mul.rn.f32 	%f1079, %f1070, %f1078;
	fma.rn.f32 	%f1080, %f1079, %f1070, %f1070;
	fma.rn.f32 	%f1081, %f1069, 0f3F317218, %f1080;
	setp.gt.u32 	%p174, %r609, 2139095039;
	fma.rn.f32 	%f1082, %f1065, 0f7F800000, 0f7F800000;
	selp.f32 	%f1083, %f1082, %f1081, %p174;
	setp.eq.f32 	%p175, %f1065, 0f00000000;
	selp.f32 	%f3649, 0fFF800000, %f1083, %p175;
	setp.lt.f32 	%p176, %f3650, 0f00800000;
	mul.rn.f32 	%f1084, %f3650, 0f4B000000;
	selp.f32 	%f1085, %f1084, %f3650, %p176;
	selp.f32 	%f1086, 0fC1B80000, 0f00000000, %p176;
	mov.b32 	%r613, %f1085;
	add.s32 	%r614, %r613, -1059760811;
	and.b32  	%r615, %r614, -8388608;
	sub.s32 	%r616, %r613, %r615;
	mov.b32 	%f1087, %r616;
	cvt.rn.f32.s32 	%f1088, %r615;
	fma.rn.f32 	%f1089, %f1088, 0f34000000, %f1086;
	add.rn.f32 	%f1090, %f1087, 0fBF800000;
	fma.rn.f32 	%f1091, %f1090, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1092, %f1091, %f1090, 0fBDF8CDCC;
	fma.rn.f32 	%f1093, %f1092, %f1090, 0f3E0F2955;
	fma.rn.f32 	%f1094, %f1093, %f1090, 0fBE2AD8B9;
	fma.rn.f32 	%f1095, %f1094, %f1090, 0f3E4CED0B;
	fma.rn.f32 	%f1096, %f1095, %f1090, 0fBE7FFF22;
	fma.rn.f32 	%f1097, %f1096, %f1090, 0f3EAAAA78;
	fma.rn.f32 	%f1098, %f1097, %f1090, 0fBF000000;
	mul.rn.f32 	%f1099, %f1090, %f1098;
	fma.rn.f32 	%f1100, %f1099, %f1090, %f1090;
	fma.rn.f32 	%f1101, %f1089, 0f3F317218, %f1100;
	setp.gt.u32 	%p177, %r613, 2139095039;
	fma.rn.f32 	%f1102, %f1085, 0f7F800000, 0f7F800000;
	selp.f32 	%f1103, %f1102, %f1101, %p177;
	setp.eq.f32 	%p178, %f1085, 0f00000000;
	selp.f32 	%f3650, 0fFF800000, %f1103, %p178;
	setp.lt.f32 	%p179, %f3651, 0f00800000;
	mul.rn.f32 	%f1104, %f3651, 0f4B000000;
	selp.f32 	%f1105, %f1104, %f3651, %p179;
	selp.f32 	%f1106, 0fC1B80000, 0f00000000, %p179;
	mov.b32 	%r617, %f1105;
	add.s32 	%r618, %r617, -1059760811;
	and.b32  	%r619, %r618, -8388608;
	sub.s32 	%r620, %r617, %r619;
	mov.b32 	%f1107, %r620;
	cvt.rn.f32.s32 	%f1108, %r619;
	fma.rn.f32 	%f1109, %f1108, 0f34000000, %f1106;
	add.rn.f32 	%f1110, %f1107, 0fBF800000;
	fma.rn.f32 	%f1111, %f1110, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1112, %f1111, %f1110, 0fBDF8CDCC;
	fma.rn.f32 	%f1113, %f1112, %f1110, 0f3E0F2955;
	fma.rn.f32 	%f1114, %f1113, %f1110, 0fBE2AD8B9;
	fma.rn.f32 	%f1115, %f1114, %f1110, 0f3E4CED0B;
	fma.rn.f32 	%f1116, %f1115, %f1110, 0fBE7FFF22;
	fma.rn.f32 	%f1117, %f1116, %f1110, 0f3EAAAA78;
	fma.rn.f32 	%f1118, %f1117, %f1110, 0fBF000000;
	mul.rn.f32 	%f1119, %f1110, %f1118;
	fma.rn.f32 	%f1120, %f1119, %f1110, %f1110;
	fma.rn.f32 	%f1121, %f1109, 0f3F317218, %f1120;
	setp.gt.u32 	%p180, %r617, 2139095039;
	fma.rn.f32 	%f1122, %f1105, 0f7F800000, 0f7F800000;
	selp.f32 	%f1123, %f1122, %f1121, %p180;
	setp.eq.f32 	%p181, %f1105, 0f00000000;
	selp.f32 	%f3651, 0fFF800000, %f1123, %p181;
	setp.lt.f32 	%p182, %f3652, 0f00800000;
	mul.rn.f32 	%f1124, %f3652, 0f4B000000;
	selp.f32 	%f1125, %f1124, %f3652, %p182;
	selp.f32 	%f1126, 0fC1B80000, 0f00000000, %p182;
	mov.b32 	%r621, %f1125;
	add.s32 	%r622, %r621, -1059760811;
	and.b32  	%r623, %r622, -8388608;
	sub.s32 	%r624, %r621, %r623;
	mov.b32 	%f1127, %r624;
	cvt.rn.f32.s32 	%f1128, %r623;
	fma.rn.f32 	%f1129, %f1128, 0f34000000, %f1126;
	add.rn.f32 	%f1130, %f1127, 0fBF800000;
	fma.rn.f32 	%f1131, %f1130, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1132, %f1131, %f1130, 0fBDF8CDCC;
	fma.rn.f32 	%f1133, %f1132, %f1130, 0f3E0F2955;
	fma.rn.f32 	%f1134, %f1133, %f1130, 0fBE2AD8B9;
	fma.rn.f32 	%f1135, %f1134, %f1130, 0f3E4CED0B;
	fma.rn.f32 	%f1136, %f1135, %f1130, 0fBE7FFF22;
	fma.rn.f32 	%f1137, %f1136, %f1130, 0f3EAAAA78;
	fma.rn.f32 	%f1138, %f1137, %f1130, 0fBF000000;
	mul.rn.f32 	%f1139, %f1130, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1130, %f1130;
	fma.rn.f32 	%f1141, %f1129, 0f3F317218, %f1140;
	setp.gt.u32 	%p183, %r621, 2139095039;
	fma.rn.f32 	%f1142, %f1125, 0f7F800000, 0f7F800000;
	selp.f32 	%f1143, %f1142, %f1141, %p183;
	setp.eq.f32 	%p184, %f1125, 0f00000000;
	selp.f32 	%f3652, 0fFF800000, %f1143, %p184;
	setp.lt.f32 	%p185, %f3653, 0f00800000;
	mul.rn.f32 	%f1144, %f3653, 0f4B000000;
	selp.f32 	%f1145, %f1144, %f3653, %p185;
	selp.f32 	%f1146, 0fC1B80000, 0f00000000, %p185;
	mov.b32 	%r625, %f1145;
	add.s32 	%r626, %r625, -1059760811;
	and.b32  	%r627, %r626, -8388608;
	sub.s32 	%r628, %r625, %r627;
	mov.b32 	%f1147, %r628;
	cvt.rn.f32.s32 	%f1148, %r627;
	fma.rn.f32 	%f1149, %f1148, 0f34000000, %f1146;
	add.rn.f32 	%f1150, %f1147, 0fBF800000;
	fma.rn.f32 	%f1151, %f1150, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1152, %f1151, %f1150, 0fBDF8CDCC;
	fma.rn.f32 	%f1153, %f1152, %f1150, 0f3E0F2955;
	fma.rn.f32 	%f1154, %f1153, %f1150, 0fBE2AD8B9;
	fma.rn.f32 	%f1155, %f1154, %f1150, 0f3E4CED0B;
	fma.rn.f32 	%f1156, %f1155, %f1150, 0fBE7FFF22;
	fma.rn.f32 	%f1157, %f1156, %f1150, 0f3EAAAA78;
	fma.rn.f32 	%f1158, %f1157, %f1150, 0fBF000000;
	mul.rn.f32 	%f1159, %f1150, %f1158;
	fma.rn.f32 	%f1160, %f1159, %f1150, %f1150;
	fma.rn.f32 	%f1161, %f1149, 0f3F317218, %f1160;
	setp.gt.u32 	%p186, %r625, 2139095039;
	fma.rn.f32 	%f1162, %f1145, 0f7F800000, 0f7F800000;
	selp.f32 	%f1163, %f1162, %f1161, %p186;
	setp.eq.f32 	%p187, %f1145, 0f00000000;
	selp.f32 	%f3653, 0fFF800000, %f1163, %p187;
	setp.lt.f32 	%p188, %f8, 0f00800000;
	mul.rn.f32 	%f1164, %f8, 0f4B000000;
	selp.f32 	%f1165, %f1164, %f8, %p188;
	selp.f32 	%f1166, 0fC1B80000, 0f00000000, %p188;
	mov.b32 	%r629, %f1165;
	add.s32 	%r630, %r629, -1059760811;
	and.b32  	%r631, %r630, -8388608;
	sub.s32 	%r632, %r629, %r631;
	mov.b32 	%f1167, %r632;
	cvt.rn.f32.s32 	%f1168, %r631;
	fma.rn.f32 	%f1169, %f1168, 0f34000000, %f1166;
	add.rn.f32 	%f1170, %f1167, 0fBF800000;
	fma.rn.f32 	%f1171, %f1170, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f1172, %f1171, %f1170, 0fBDF8CDCC;
	fma.rn.f32 	%f1173, %f1172, %f1170, 0f3E0F2955;
	fma.rn.f32 	%f1174, %f1173, %f1170, 0fBE2AD8B9;
	fma.rn.f32 	%f1175, %f1174, %f1170, 0f3E4CED0B;
	fma.rn.f32 	%f1176, %f1175, %f1170, 0fBE7FFF22;
	fma.rn.f32 	%f1177, %f1176, %f1170, 0f3EAAAA78;
	fma.rn.f32 	%f1178, %f1177, %f1170, 0fBF000000;
	mul.rn.f32 	%f1179, %f1170, %f1178;
	fma.rn.f32 	%f1180, %f1179, %f1170, %f1170;
	fma.rn.f32 	%f1181, %f1169, 0f3F317218, %f1180;
	setp.gt.u32 	%p189, %r629, 2139095039;
	fma.rn.f32 	%f1182, %f1165, 0f7F800000, 0f7F800000;
	selp.f32 	%f1183, %f1182, %f1181, %p189;
	setp.eq.f32 	%p190, %f1165, 0f00000000;
	selp.f32 	%f3654, 0fFF800000, %f1183, %p190;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_42:                             // %MovF3F1
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	mov.f32 	%f3671, %f9;
	mov.f32 	%f3672, %f10;
	mov.f32 	%f3673, %f11;
	mov.f32 	%f3674, %f12;
	mov.f32 	%f3675, %f13;
	mov.f32 	%f3676, %f14;
	mov.f32 	%f3677, %f15;
	mov.f32 	%f3678, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_57:                             // %LoadF1Imm
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%f3655, %r12;
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3656, %f3655;
	mov.f32 	%f3657, %f3655;
	mov.f32 	%f3658, %f3655;
	mov.f32 	%f3659, %f3655;
	mov.f32 	%f3660, %f3655;
	mov.f32 	%f3661, %f3655;
	mov.f32 	%f3662, %f3655;
	bra.uni 	$L__BB0_502;
$L__BB0_53:                             // %FDiv
                                        //   in Loop: Header=BB0_1 Depth=1
	div.rn.f32 	%f3647, %f3647, %f9;
	div.rn.f32 	%f3648, %f3648, %f10;
	div.rn.f32 	%f3649, %f3649, %f11;
	div.rn.f32 	%f3650, %f3650, %f12;
	div.rn.f32 	%f3651, %f3651, %f13;
	div.rn.f32 	%f3652, %f3652, %f14;
	div.rn.f32 	%f3653, %f3653, %f15;
	div.rn.f32 	%f3654, %f8, %f16;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_21:                             // %StoreGlobalF32
                                        //   in Loop: Header=BB0_1 Depth=1
	and.b32  	%r1737, %r12, 15;
	shr.u32 	%r1738, %r12, 4;
	cvt.u32.u64 	%r1739, %rd512;
	{ .reg .b32 tmp; mov.b64 {tmp, %r1740}, %rd512; }
	shfl.sync.idx.b32	%r1741, %r1739, %r1737, 31, -1;
	shfl.sync.idx.b32	%r1742, %r1740, %r1737, 31, -1;
	cvt.u64.u32 	%rd473, %r1741;
	cvt.u64.u32 	%rd474, %r1742;
	shl.b64 	%rd475, %rd474, 32;
	or.b64  	%rd476, %rd473, %rd475;
	add.s32 	%r38, %r1738, %r3;
	shfl.sync.idx.b32	%r39, %r1808, %r1737, 31, -1;
	shfl.sync.idx.b32	%r1743, %r1807, %r1737, 31, -1;
	shfl.sync.idx.b32	%r40, %r1805, %r1737, 31, -1;
	shfl.sync.idx.b32	%r41, %r1806, %r1737, 31, -1;
	shfl.sync.idx.b32	%r42, %r1809, %r1737, 31, -1;
	mul.lo.s32 	%r1744, %r1743, %r38;
	mul.wide.s32 	%rd477, %r1744, 4;
	add.s64 	%rd44, %rd476, %rd477;
	setp.ge.u32 	%p1063, %r38, %r39;
	@%p1063 bra 	$L__BB0_23;
// %bb.22:                              // %StoreGlobalF32.if
                                        //   in Loop: Header=BB0_1 Depth=1
	st.global.f32 	[%rd44], %f3647;
$L__BB0_23:                             // %StoreGlobalF32.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r43, %r42, %r38;
	cvt.s64.s32 	%rd45, %r40;
	mul.wide.s32 	%rd478, %r40, 4;
	add.s64 	%rd46, %rd44, %rd478;
	setp.ge.u32 	%p1064, %r43, %r39;
	setp.lt.u32 	%p1065, %r41, 2;
	or.pred  	%p1066, %p1065, %p1064;
	@%p1066 bra 	$L__BB0_25;
// %bb.24:                              // %StoreGlobalF32.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	st.global.f32 	[%rd46], %f3648;
$L__BB0_25:                             // %StoreGlobalF32.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r44, %r43, %r42;
	shl.b64 	%rd479, %rd45, 2;
	add.s64 	%rd47, %rd46, %rd479;
	setp.ge.u32 	%p1067, %r44, %r39;
	setp.lt.u32 	%p1068, %r41, 3;
	or.pred  	%p1069, %p1068, %p1067;
	@%p1069 bra 	$L__BB0_27;
// %bb.26:                              // %StoreGlobalF32.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	st.global.f32 	[%rd47], %f3649;
$L__BB0_27:                             // %StoreGlobalF32.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r45, %r44, %r42;
	add.s64 	%rd48, %rd47, %rd479;
	setp.ge.u32 	%p1070, %r45, %r39;
	setp.lt.u32 	%p1071, %r41, 4;
	or.pred  	%p1072, %p1071, %p1070;
	@%p1072 bra 	$L__BB0_29;
// %bb.28:                              // %StoreGlobalF32.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	st.global.f32 	[%rd48], %f3650;
$L__BB0_29:                             // %StoreGlobalF32.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r46, %r45, %r42;
	add.s64 	%rd49, %rd48, %rd479;
	setp.ge.u32 	%p1073, %r46, %r39;
	setp.lt.u32 	%p1074, %r41, 5;
	or.pred  	%p1075, %p1074, %p1073;
	@%p1075 bra 	$L__BB0_31;
// %bb.30:                              // %StoreGlobalF32.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	st.global.f32 	[%rd49], %f3651;
$L__BB0_31:                             // %StoreGlobalF32.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r47, %r46, %r42;
	add.s64 	%rd50, %rd49, %rd479;
	setp.ge.u32 	%p1076, %r47, %r39;
	setp.lt.u32 	%p1077, %r41, 6;
	or.pred  	%p1078, %p1077, %p1076;
	@%p1078 bra 	$L__BB0_33;
// %bb.32:                              // %StoreGlobalF32.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	st.global.f32 	[%rd50], %f3652;
$L__BB0_33:                             // %StoreGlobalF32.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r48, %r47, %r42;
	add.s64 	%rd51, %rd50, %rd479;
	setp.ge.u32 	%p1079, %r48, %r39;
	setp.lt.u32 	%p1080, %r41, 7;
	or.pred  	%p1081, %p1080, %p1079;
	@%p1081 bra 	$L__BB0_35;
// %bb.34:                              // %StoreGlobalF32.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	st.global.f32 	[%rd51], %f3653;
$L__BB0_35:                             // %StoreGlobalF32.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r1745, %r48, %r42;
	setp.ge.u32 	%p1082, %r1745, %r39;
	setp.lt.u32 	%p1083, %r41, 8;
	or.pred  	%p1084, %p1083, %p1082;
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	@%p1084 bra 	$L__BB0_502;
// %bb.36:                              // %StoreGlobalF32.endif.endi...if
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s64 	%rd52, %rd51, %rd479;
	st.global.f32 	[%rd52], %f8;
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_56:                             // %LoadF0Imm
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%f3647, %r12;
	mov.f32 	%f3648, %f3647;
	mov.f32 	%f3649, %f3647;
	mov.f32 	%f3650, %f3647;
	mov.f32 	%f3651, %f3647;
	mov.f32 	%f3652, %f3647;
	mov.f32 	%f3653, %f3647;
	mov.f32 	%f3654, %f3647;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_60:                             // %WarpAllReduceSum
                                        //   in Loop: Header=BB0_1 Depth=1
	shfl.sync.bfly.b32	%f3535, %f3647, 16, 31, -1;
	add.rn.f32 	%f3536, %f3647, %f3535;
	shfl.sync.bfly.b32	%f3537, %f3536, 8, 31, -1;
	add.rn.f32 	%f3538, %f3536, %f3537;
	shfl.sync.bfly.b32	%f3539, %f3538, 4, 31, -1;
	add.rn.f32 	%f3540, %f3538, %f3539;
	shfl.sync.bfly.b32	%f3541, %f3540, 2, 31, -1;
	add.rn.f32 	%f3542, %f3540, %f3541;
	shfl.sync.bfly.b32	%f3543, %f3542, 1, 31, -1;
	add.rn.f32 	%f3647, %f3542, %f3543;
	shfl.sync.bfly.b32	%f3544, %f3648, 16, 31, -1;
	add.rn.f32 	%f3545, %f3648, %f3544;
	shfl.sync.bfly.b32	%f3546, %f3545, 8, 31, -1;
	add.rn.f32 	%f3547, %f3545, %f3546;
	shfl.sync.bfly.b32	%f3548, %f3547, 4, 31, -1;
	add.rn.f32 	%f3549, %f3547, %f3548;
	shfl.sync.bfly.b32	%f3550, %f3549, 2, 31, -1;
	add.rn.f32 	%f3551, %f3549, %f3550;
	shfl.sync.bfly.b32	%f3552, %f3551, 1, 31, -1;
	add.rn.f32 	%f3648, %f3551, %f3552;
	shfl.sync.bfly.b32	%f3553, %f3649, 16, 31, -1;
	add.rn.f32 	%f3554, %f3649, %f3553;
	shfl.sync.bfly.b32	%f3555, %f3554, 8, 31, -1;
	add.rn.f32 	%f3556, %f3554, %f3555;
	shfl.sync.bfly.b32	%f3557, %f3556, 4, 31, -1;
	add.rn.f32 	%f3558, %f3556, %f3557;
	shfl.sync.bfly.b32	%f3559, %f3558, 2, 31, -1;
	add.rn.f32 	%f3560, %f3558, %f3559;
	shfl.sync.bfly.b32	%f3561, %f3560, 1, 31, -1;
	add.rn.f32 	%f3649, %f3560, %f3561;
	shfl.sync.bfly.b32	%f3562, %f3650, 16, 31, -1;
	add.rn.f32 	%f3563, %f3650, %f3562;
	shfl.sync.bfly.b32	%f3564, %f3563, 8, 31, -1;
	add.rn.f32 	%f3565, %f3563, %f3564;
	shfl.sync.bfly.b32	%f3566, %f3565, 4, 31, -1;
	add.rn.f32 	%f3567, %f3565, %f3566;
	shfl.sync.bfly.b32	%f3568, %f3567, 2, 31, -1;
	add.rn.f32 	%f3569, %f3567, %f3568;
	shfl.sync.bfly.b32	%f3570, %f3569, 1, 31, -1;
	add.rn.f32 	%f3650, %f3569, %f3570;
	shfl.sync.bfly.b32	%f3571, %f3651, 16, 31, -1;
	add.rn.f32 	%f3572, %f3651, %f3571;
	shfl.sync.bfly.b32	%f3573, %f3572, 8, 31, -1;
	add.rn.f32 	%f3574, %f3572, %f3573;
	shfl.sync.bfly.b32	%f3575, %f3574, 4, 31, -1;
	add.rn.f32 	%f3576, %f3574, %f3575;
	shfl.sync.bfly.b32	%f3577, %f3576, 2, 31, -1;
	add.rn.f32 	%f3578, %f3576, %f3577;
	shfl.sync.bfly.b32	%f3579, %f3578, 1, 31, -1;
	add.rn.f32 	%f3651, %f3578, %f3579;
	shfl.sync.bfly.b32	%f3580, %f3652, 16, 31, -1;
	add.rn.f32 	%f3581, %f3652, %f3580;
	shfl.sync.bfly.b32	%f3582, %f3581, 8, 31, -1;
	add.rn.f32 	%f3583, %f3581, %f3582;
	shfl.sync.bfly.b32	%f3584, %f3583, 4, 31, -1;
	add.rn.f32 	%f3585, %f3583, %f3584;
	shfl.sync.bfly.b32	%f3586, %f3585, 2, 31, -1;
	add.rn.f32 	%f3587, %f3585, %f3586;
	shfl.sync.bfly.b32	%f3588, %f3587, 1, 31, -1;
	add.rn.f32 	%f3652, %f3587, %f3588;
	shfl.sync.bfly.b32	%f3589, %f3653, 16, 31, -1;
	add.rn.f32 	%f3590, %f3653, %f3589;
	shfl.sync.bfly.b32	%f3591, %f3590, 8, 31, -1;
	add.rn.f32 	%f3592, %f3590, %f3591;
	shfl.sync.bfly.b32	%f3593, %f3592, 4, 31, -1;
	add.rn.f32 	%f3594, %f3592, %f3593;
	shfl.sync.bfly.b32	%f3595, %f3594, 2, 31, -1;
	add.rn.f32 	%f3596, %f3594, %f3595;
	shfl.sync.bfly.b32	%f3597, %f3596, 1, 31, -1;
	add.rn.f32 	%f3653, %f3596, %f3597;
	shfl.sync.bfly.b32	%f3598, %f8, 16, 31, -1;
	add.rn.f32 	%f3599, %f8, %f3598;
	shfl.sync.bfly.b32	%f3600, %f3599, 8, 31, -1;
	add.rn.f32 	%f3601, %f3599, %f3600;
	shfl.sync.bfly.b32	%f3602, %f3601, 4, 31, -1;
	add.rn.f32 	%f3603, %f3601, %f3602;
	shfl.sync.bfly.b32	%f3604, %f3603, 2, 31, -1;
	add.rn.f32 	%f3605, %f3603, %f3604;
	shfl.sync.bfly.b32	%f3606, %f3605, 1, 31, -1;
	add.rn.f32 	%f3654, %f3605, %f3606;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_50:                             // %FMA
                                        //   in Loop: Header=BB0_1 Depth=1
	fma.rn.f32 	%f3647, %f9, %f3663, %f3647;
	fma.rn.f32 	%f3648, %f10, %f3664, %f3648;
	fma.rn.f32 	%f3649, %f11, %f3665, %f3649;
	fma.rn.f32 	%f3650, %f12, %f3666, %f3650;
	fma.rn.f32 	%f3651, %f13, %f3667, %f3651;
	fma.rn.f32 	%f3652, %f14, %f3668, %f3652;
	fma.rn.f32 	%f3653, %f15, %f3669, %f3653;
	fma.rn.f32 	%f3654, %f16, %f3670, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_40:                             // %MovF0F1
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3647, %f9;
	mov.f32 	%f3648, %f10;
	mov.f32 	%f3649, %f11;
	mov.f32 	%f3650, %f12;
	mov.f32 	%f3651, %f13;
	mov.f32 	%f3652, %f14;
	mov.f32 	%f3653, %f15;
	mov.f32 	%f3654, %f16;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_65:                             // %FSqrt
                                        //   in Loop: Header=BB0_1 Depth=1
	sqrt.approx.f32 	%f3647, %f3647;
	sqrt.approx.f32 	%f3648, %f3648;
	sqrt.approx.f32 	%f3649, %f3649;
	sqrt.approx.f32 	%f3650, %f3650;
	sqrt.approx.f32 	%f3651, %f3651;
	sqrt.approx.f32 	%f3652, %f3652;
	sqrt.approx.f32 	%f3653, %f3653;
	sqrt.approx.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_277:                            // %FArcSin
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f2398, %f3647;
	mov.f32 	%f2399, 0f3F800000;
	sub.rn.f32 	%f2400, %f2399, %f2398;
	mul.rn.f32 	%f2401, %f2400, 0f3F000000;
	sqrt.approx.f32 	%f2402, %f2401;
	setp.gt.f32 	%p519, %f2398, 0f3F11EB85;
	selp.f32 	%f2403, %f2402, %f2398, %p519;
	mul.rn.f32 	%f2404, %f2403, %f2403;
	fma.rn.f32 	%f2405, %f2404, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2406, %f2405, %f2404, 0f3D3F841F;
	fma.rn.f32 	%f2407, %f2406, %f2404, 0f3D994929;
	fma.rn.f32 	%f2408, %f2407, %f2404, 0f3E2AAB94;
	mul.rn.f32 	%f2409, %f2404, %f2408;
	fma.rn.f32 	%f2410, %f2409, %f2403, %f2403;
	fma.rn.f32 	%f2411, %f2410, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2412, %f2411, %f2410, %p519;
	setp.num.f32 	%p520, %f2412, %f2412;
	mov.b32 	%r897, %f2412;
	mov.b32 	%r898, %f3647;
	and.b32  	%r899, %r898, -2147483648;
	or.b32  	%r900, %r899, %r897;
	mov.b32 	%f2413, %r900;
	selp.f32 	%f3647, %f2413, %f2412, %p520;
	abs.f32 	%f2414, %f3648;
	sub.rn.f32 	%f2415, %f2399, %f2414;
	mul.rn.f32 	%f2416, %f2415, 0f3F000000;
	sqrt.approx.f32 	%f2417, %f2416;
	setp.gt.f32 	%p521, %f2414, 0f3F11EB85;
	selp.f32 	%f2418, %f2417, %f2414, %p521;
	mul.rn.f32 	%f2419, %f2418, %f2418;
	fma.rn.f32 	%f2420, %f2419, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2421, %f2420, %f2419, 0f3D3F841F;
	fma.rn.f32 	%f2422, %f2421, %f2419, 0f3D994929;
	fma.rn.f32 	%f2423, %f2422, %f2419, 0f3E2AAB94;
	mul.rn.f32 	%f2424, %f2419, %f2423;
	fma.rn.f32 	%f2425, %f2424, %f2418, %f2418;
	fma.rn.f32 	%f2426, %f2425, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2427, %f2426, %f2425, %p521;
	setp.num.f32 	%p522, %f2427, %f2427;
	mov.b32 	%r901, %f2427;
	mov.b32 	%r902, %f3648;
	and.b32  	%r903, %r902, -2147483648;
	or.b32  	%r904, %r903, %r901;
	mov.b32 	%f2428, %r904;
	selp.f32 	%f3648, %f2428, %f2427, %p522;
	abs.f32 	%f2429, %f3649;
	sub.rn.f32 	%f2430, %f2399, %f2429;
	mul.rn.f32 	%f2431, %f2430, 0f3F000000;
	sqrt.approx.f32 	%f2432, %f2431;
	setp.gt.f32 	%p523, %f2429, 0f3F11EB85;
	selp.f32 	%f2433, %f2432, %f2429, %p523;
	mul.rn.f32 	%f2434, %f2433, %f2433;
	fma.rn.f32 	%f2435, %f2434, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2436, %f2435, %f2434, 0f3D3F841F;
	fma.rn.f32 	%f2437, %f2436, %f2434, 0f3D994929;
	fma.rn.f32 	%f2438, %f2437, %f2434, 0f3E2AAB94;
	mul.rn.f32 	%f2439, %f2434, %f2438;
	fma.rn.f32 	%f2440, %f2439, %f2433, %f2433;
	fma.rn.f32 	%f2441, %f2440, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2442, %f2441, %f2440, %p523;
	setp.num.f32 	%p524, %f2442, %f2442;
	mov.b32 	%r905, %f2442;
	mov.b32 	%r906, %f3649;
	and.b32  	%r907, %r906, -2147483648;
	or.b32  	%r908, %r907, %r905;
	mov.b32 	%f2443, %r908;
	selp.f32 	%f3649, %f2443, %f2442, %p524;
	abs.f32 	%f2444, %f3650;
	sub.rn.f32 	%f2445, %f2399, %f2444;
	mul.rn.f32 	%f2446, %f2445, 0f3F000000;
	sqrt.approx.f32 	%f2447, %f2446;
	setp.gt.f32 	%p525, %f2444, 0f3F11EB85;
	selp.f32 	%f2448, %f2447, %f2444, %p525;
	mul.rn.f32 	%f2449, %f2448, %f2448;
	fma.rn.f32 	%f2450, %f2449, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2451, %f2450, %f2449, 0f3D3F841F;
	fma.rn.f32 	%f2452, %f2451, %f2449, 0f3D994929;
	fma.rn.f32 	%f2453, %f2452, %f2449, 0f3E2AAB94;
	mul.rn.f32 	%f2454, %f2449, %f2453;
	fma.rn.f32 	%f2455, %f2454, %f2448, %f2448;
	fma.rn.f32 	%f2456, %f2455, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2457, %f2456, %f2455, %p525;
	setp.num.f32 	%p526, %f2457, %f2457;
	mov.b32 	%r909, %f2457;
	mov.b32 	%r910, %f3650;
	and.b32  	%r911, %r910, -2147483648;
	or.b32  	%r912, %r911, %r909;
	mov.b32 	%f2458, %r912;
	selp.f32 	%f3650, %f2458, %f2457, %p526;
	abs.f32 	%f2459, %f3651;
	sub.rn.f32 	%f2460, %f2399, %f2459;
	mul.rn.f32 	%f2461, %f2460, 0f3F000000;
	sqrt.approx.f32 	%f2462, %f2461;
	setp.gt.f32 	%p527, %f2459, 0f3F11EB85;
	selp.f32 	%f2463, %f2462, %f2459, %p527;
	mul.rn.f32 	%f2464, %f2463, %f2463;
	fma.rn.f32 	%f2465, %f2464, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2466, %f2465, %f2464, 0f3D3F841F;
	fma.rn.f32 	%f2467, %f2466, %f2464, 0f3D994929;
	fma.rn.f32 	%f2468, %f2467, %f2464, 0f3E2AAB94;
	mul.rn.f32 	%f2469, %f2464, %f2468;
	fma.rn.f32 	%f2470, %f2469, %f2463, %f2463;
	fma.rn.f32 	%f2471, %f2470, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2472, %f2471, %f2470, %p527;
	setp.num.f32 	%p528, %f2472, %f2472;
	mov.b32 	%r913, %f2472;
	mov.b32 	%r914, %f3651;
	and.b32  	%r915, %r914, -2147483648;
	or.b32  	%r916, %r915, %r913;
	mov.b32 	%f2473, %r916;
	selp.f32 	%f3651, %f2473, %f2472, %p528;
	abs.f32 	%f2474, %f3652;
	sub.rn.f32 	%f2475, %f2399, %f2474;
	mul.rn.f32 	%f2476, %f2475, 0f3F000000;
	sqrt.approx.f32 	%f2477, %f2476;
	setp.gt.f32 	%p529, %f2474, 0f3F11EB85;
	selp.f32 	%f2478, %f2477, %f2474, %p529;
	mul.rn.f32 	%f2479, %f2478, %f2478;
	fma.rn.f32 	%f2480, %f2479, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2481, %f2480, %f2479, 0f3D3F841F;
	fma.rn.f32 	%f2482, %f2481, %f2479, 0f3D994929;
	fma.rn.f32 	%f2483, %f2482, %f2479, 0f3E2AAB94;
	mul.rn.f32 	%f2484, %f2479, %f2483;
	fma.rn.f32 	%f2485, %f2484, %f2478, %f2478;
	fma.rn.f32 	%f2486, %f2485, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2487, %f2486, %f2485, %p529;
	setp.num.f32 	%p530, %f2487, %f2487;
	mov.b32 	%r917, %f2487;
	mov.b32 	%r918, %f3652;
	and.b32  	%r919, %r918, -2147483648;
	or.b32  	%r920, %r919, %r917;
	mov.b32 	%f2488, %r920;
	selp.f32 	%f3652, %f2488, %f2487, %p530;
	abs.f32 	%f2489, %f3653;
	sub.rn.f32 	%f2490, %f2399, %f2489;
	mul.rn.f32 	%f2491, %f2490, 0f3F000000;
	sqrt.approx.f32 	%f2492, %f2491;
	setp.gt.f32 	%p531, %f2489, 0f3F11EB85;
	selp.f32 	%f2493, %f2492, %f2489, %p531;
	mul.rn.f32 	%f2494, %f2493, %f2493;
	fma.rn.f32 	%f2495, %f2494, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2496, %f2495, %f2494, 0f3D3F841F;
	fma.rn.f32 	%f2497, %f2496, %f2494, 0f3D994929;
	fma.rn.f32 	%f2498, %f2497, %f2494, 0f3E2AAB94;
	mul.rn.f32 	%f2499, %f2494, %f2498;
	fma.rn.f32 	%f2500, %f2499, %f2493, %f2493;
	fma.rn.f32 	%f2501, %f2500, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2502, %f2501, %f2500, %p531;
	setp.num.f32 	%p532, %f2502, %f2502;
	mov.b32 	%r921, %f2502;
	mov.b32 	%r922, %f3653;
	and.b32  	%r923, %r922, -2147483648;
	or.b32  	%r924, %r923, %r921;
	mov.b32 	%f2503, %r924;
	selp.f32 	%f3653, %f2503, %f2502, %p532;
	abs.f32 	%f2504, %f8;
	sub.rn.f32 	%f2505, %f2399, %f2504;
	mul.rn.f32 	%f2506, %f2505, 0f3F000000;
	sqrt.approx.f32 	%f2507, %f2506;
	setp.gt.f32 	%p533, %f2504, 0f3F11EB85;
	selp.f32 	%f2508, %f2507, %f2504, %p533;
	mul.rn.f32 	%f2509, %f2508, %f2508;
	fma.rn.f32 	%f2510, %f2509, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f2511, %f2510, %f2509, 0f3D3F841F;
	fma.rn.f32 	%f2512, %f2511, %f2509, 0f3D994929;
	fma.rn.f32 	%f2513, %f2512, %f2509, 0f3E2AAB94;
	mul.rn.f32 	%f2514, %f2509, %f2513;
	fma.rn.f32 	%f2515, %f2514, %f2508, %f2508;
	fma.rn.f32 	%f2516, %f2515, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f2517, %f2516, %f2515, %p533;
	setp.num.f32 	%p534, %f2517, %f2517;
	mov.b32 	%r925, %f2517;
	mov.b32 	%r926, %f8;
	and.b32  	%r927, %r926, -2147483648;
	or.b32  	%r928, %r927, %r925;
	mov.b32 	%f2518, %r928;
	selp.f32 	%f3654, %f2518, %f2517, %p534;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_38:                             // %MovF2F0
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	mov.f32 	%f3663, %f3647;
	mov.f32 	%f3664, %f3648;
	mov.f32 	%f3665, %f3649;
	mov.f32 	%f3666, %f3650;
	mov.f32 	%f3667, %f3651;
	mov.f32 	%f3668, %f3652;
	mov.f32 	%f3669, %f3653;
	mov.f32 	%f3670, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_63:                             // %WarpAllReduceProd
                                        //   in Loop: Header=BB0_1 Depth=1
	shfl.sync.bfly.b32	%f2999, %f3647, 16, 31, -1;
	mul.rn.f32 	%f3000, %f3647, %f2999;
	shfl.sync.bfly.b32	%f3001, %f3000, 8, 31, -1;
	mul.rn.f32 	%f3002, %f3000, %f3001;
	shfl.sync.bfly.b32	%f3003, %f3002, 4, 31, -1;
	mul.rn.f32 	%f3004, %f3002, %f3003;
	shfl.sync.bfly.b32	%f3005, %f3004, 2, 31, -1;
	mul.rn.f32 	%f3006, %f3004, %f3005;
	shfl.sync.bfly.b32	%f3007, %f3006, 1, 31, -1;
	mul.rn.f32 	%f3647, %f3006, %f3007;
	shfl.sync.bfly.b32	%f3008, %f3648, 16, 31, -1;
	mul.rn.f32 	%f3009, %f3648, %f3008;
	shfl.sync.bfly.b32	%f3010, %f3009, 8, 31, -1;
	mul.rn.f32 	%f3011, %f3009, %f3010;
	shfl.sync.bfly.b32	%f3012, %f3011, 4, 31, -1;
	mul.rn.f32 	%f3013, %f3011, %f3012;
	shfl.sync.bfly.b32	%f3014, %f3013, 2, 31, -1;
	mul.rn.f32 	%f3015, %f3013, %f3014;
	shfl.sync.bfly.b32	%f3016, %f3015, 1, 31, -1;
	mul.rn.f32 	%f3648, %f3015, %f3016;
	shfl.sync.bfly.b32	%f3017, %f3649, 16, 31, -1;
	mul.rn.f32 	%f3018, %f3649, %f3017;
	shfl.sync.bfly.b32	%f3019, %f3018, 8, 31, -1;
	mul.rn.f32 	%f3020, %f3018, %f3019;
	shfl.sync.bfly.b32	%f3021, %f3020, 4, 31, -1;
	mul.rn.f32 	%f3022, %f3020, %f3021;
	shfl.sync.bfly.b32	%f3023, %f3022, 2, 31, -1;
	mul.rn.f32 	%f3024, %f3022, %f3023;
	shfl.sync.bfly.b32	%f3025, %f3024, 1, 31, -1;
	mul.rn.f32 	%f3649, %f3024, %f3025;
	shfl.sync.bfly.b32	%f3026, %f3650, 16, 31, -1;
	mul.rn.f32 	%f3027, %f3650, %f3026;
	shfl.sync.bfly.b32	%f3028, %f3027, 8, 31, -1;
	mul.rn.f32 	%f3029, %f3027, %f3028;
	shfl.sync.bfly.b32	%f3030, %f3029, 4, 31, -1;
	mul.rn.f32 	%f3031, %f3029, %f3030;
	shfl.sync.bfly.b32	%f3032, %f3031, 2, 31, -1;
	mul.rn.f32 	%f3033, %f3031, %f3032;
	shfl.sync.bfly.b32	%f3034, %f3033, 1, 31, -1;
	mul.rn.f32 	%f3650, %f3033, %f3034;
	shfl.sync.bfly.b32	%f3035, %f3651, 16, 31, -1;
	mul.rn.f32 	%f3036, %f3651, %f3035;
	shfl.sync.bfly.b32	%f3037, %f3036, 8, 31, -1;
	mul.rn.f32 	%f3038, %f3036, %f3037;
	shfl.sync.bfly.b32	%f3039, %f3038, 4, 31, -1;
	mul.rn.f32 	%f3040, %f3038, %f3039;
	shfl.sync.bfly.b32	%f3041, %f3040, 2, 31, -1;
	mul.rn.f32 	%f3042, %f3040, %f3041;
	shfl.sync.bfly.b32	%f3043, %f3042, 1, 31, -1;
	mul.rn.f32 	%f3651, %f3042, %f3043;
	shfl.sync.bfly.b32	%f3044, %f3652, 16, 31, -1;
	mul.rn.f32 	%f3045, %f3652, %f3044;
	shfl.sync.bfly.b32	%f3046, %f3045, 8, 31, -1;
	mul.rn.f32 	%f3047, %f3045, %f3046;
	shfl.sync.bfly.b32	%f3048, %f3047, 4, 31, -1;
	mul.rn.f32 	%f3049, %f3047, %f3048;
	shfl.sync.bfly.b32	%f3050, %f3049, 2, 31, -1;
	mul.rn.f32 	%f3051, %f3049, %f3050;
	shfl.sync.bfly.b32	%f3052, %f3051, 1, 31, -1;
	mul.rn.f32 	%f3652, %f3051, %f3052;
	shfl.sync.bfly.b32	%f3053, %f3653, 16, 31, -1;
	mul.rn.f32 	%f3054, %f3653, %f3053;
	shfl.sync.bfly.b32	%f3055, %f3054, 8, 31, -1;
	mul.rn.f32 	%f3056, %f3054, %f3055;
	shfl.sync.bfly.b32	%f3057, %f3056, 4, 31, -1;
	mul.rn.f32 	%f3058, %f3056, %f3057;
	shfl.sync.bfly.b32	%f3059, %f3058, 2, 31, -1;
	mul.rn.f32 	%f3060, %f3058, %f3059;
	shfl.sync.bfly.b32	%f3061, %f3060, 1, 31, -1;
	mul.rn.f32 	%f3653, %f3060, %f3061;
	shfl.sync.bfly.b32	%f3062, %f8, 16, 31, -1;
	mul.rn.f32 	%f3063, %f8, %f3062;
	shfl.sync.bfly.b32	%f3064, %f3063, 8, 31, -1;
	mul.rn.f32 	%f3065, %f3063, %f3064;
	shfl.sync.bfly.b32	%f3066, %f3065, 4, 31, -1;
	mul.rn.f32 	%f3067, %f3065, %f3066;
	shfl.sync.bfly.b32	%f3068, %f3067, 2, 31, -1;
	mul.rn.f32 	%f3069, %f3067, %f3068;
	shfl.sync.bfly.b32	%f3070, %f3069, 1, 31, -1;
	mul.rn.f32 	%f3654, %f3069, %f3070;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_39:                             // %MovF3F0
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	mov.f32 	%f3671, %f3647;
	mov.f32 	%f3672, %f3648;
	mov.f32 	%f3673, %f3649;
	mov.f32 	%f3674, %f3650;
	mov.f32 	%f3675, %f3651;
	mov.f32 	%f3676, %f3652;
	mov.f32 	%f3677, %f3653;
	mov.f32 	%f3678, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_58:                             // %LoadF2Imm
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%f3663, %r12;
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	mov.f32 	%f3664, %f3663;
	mov.f32 	%f3665, %f3663;
	mov.f32 	%f3666, %f3663;
	mov.f32 	%f3667, %f3663;
	mov.f32 	%f3668, %f3663;
	mov.f32 	%f3669, %f3663;
	mov.f32 	%f3670, %f3663;
	bra.uni 	$L__BB0_502;
$L__BB0_5:                              // %LoadGlobalF32
                                        //   in Loop: Header=BB0_1 Depth=1
	and.b32  	%r1746, %r12, 15;
	shr.u32 	%r1747, %r12, 4;
	cvt.u32.u64 	%r1748, %rd512;
	{ .reg .b32 tmp; mov.b64 {tmp, %r1749}, %rd512; }
	shfl.sync.idx.b32	%r1750, %r1748, %r1746, 31, -1;
	shfl.sync.idx.b32	%r1751, %r1749, %r1746, 31, -1;
	cvt.u64.u32 	%rd485, %r1750;
	cvt.u64.u32 	%rd486, %r1751;
	shl.b64 	%rd487, %rd486, 32;
	or.b64  	%rd488, %rd485, %rd487;
	add.s32 	%r27, %r1747, %r3;
	shfl.sync.idx.b32	%r28, %r1808, %r1746, 31, -1;
	shfl.sync.idx.b32	%r1752, %r1807, %r1746, 31, -1;
	shfl.sync.idx.b32	%r29, %r1805, %r1746, 31, -1;
	shfl.sync.idx.b32	%r30, %r1806, %r1746, 31, -1;
	shfl.sync.idx.b32	%r31, %r1809, %r1746, 31, -1;
	mul.lo.s32 	%r1753, %r1752, %r27;
	mul.wide.s32 	%rd489, %r1753, 4;
	add.s64 	%rd35, %rd488, %rd489;
	setp.ge.u32 	%p1085, %r27, %r28;
	mov.f32 	%f3656, 0f00000000;
	mov.f32 	%f3655, %f3656;
	@%p1085 bra 	$L__BB0_7;
// %bb.6:                               // %LoadGlobalF32.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.f32 	%f3655, [%rd35];
$L__BB0_7:                              // %LoadGlobalF32.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r32, %r31, %r27;
	cvt.s64.s32 	%rd36, %r29;
	mul.wide.s32 	%rd490, %r29, 4;
	add.s64 	%rd37, %rd35, %rd490;
	setp.ge.u32 	%p1086, %r32, %r28;
	setp.lt.u32 	%p1087, %r30, 2;
	or.pred  	%p1088, %p1087, %p1086;
	@%p1088 bra 	$L__BB0_9;
// %bb.8:                               // %LoadGlobalF32.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.f32 	%f3656, [%rd37];
$L__BB0_9:                              // %LoadGlobalF32.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r33, %r32, %r31;
	shl.b64 	%rd491, %rd36, 2;
	add.s64 	%rd38, %rd37, %rd491;
	setp.ge.u32 	%p1089, %r33, %r28;
	setp.lt.u32 	%p1090, %r30, 3;
	mov.f32 	%f3658, 0f00000000;
	or.pred  	%p1091, %p1090, %p1089;
	mov.f32 	%f3657, %f3658;
	@%p1091 bra 	$L__BB0_11;
// %bb.10:                              // %LoadGlobalF32.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.f32 	%f3657, [%rd38];
$L__BB0_11:                             // %LoadGlobalF32.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r34, %r33, %r31;
	add.s64 	%rd39, %rd38, %rd491;
	setp.ge.u32 	%p1092, %r34, %r28;
	setp.lt.u32 	%p1093, %r30, 4;
	or.pred  	%p1094, %p1093, %p1092;
	@%p1094 bra 	$L__BB0_13;
// %bb.12:                              // %LoadGlobalF32.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.f32 	%f3658, [%rd39];
$L__BB0_13:                             // %LoadGlobalF32.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r35, %r34, %r31;
	add.s64 	%rd40, %rd39, %rd491;
	setp.ge.u32 	%p1095, %r35, %r28;
	setp.lt.u32 	%p1096, %r30, 5;
	mov.f32 	%f3660, 0f00000000;
	or.pred  	%p1097, %p1096, %p1095;
	mov.f32 	%f3659, %f3660;
	@%p1097 bra 	$L__BB0_15;
// %bb.14:                              // %LoadGlobalF32.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.f32 	%f3659, [%rd40];
$L__BB0_15:                             // %LoadGlobalF32.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r36, %r35, %r31;
	add.s64 	%rd41, %rd40, %rd491;
	setp.ge.u32 	%p1098, %r36, %r28;
	setp.lt.u32 	%p1099, %r30, 6;
	or.pred  	%p1100, %p1099, %p1098;
	@%p1100 bra 	$L__BB0_17;
// %bb.16:                              // %LoadGlobalF32.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.f32 	%f3660, [%rd41];
$L__BB0_17:                             // %LoadGlobalF32.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r37, %r36, %r31;
	add.s64 	%rd42, %rd41, %rd491;
	setp.ge.u32 	%p1101, %r37, %r28;
	setp.lt.u32 	%p1102, %r30, 7;
	mov.f32 	%f3662, 0f00000000;
	or.pred  	%p1103, %p1102, %p1101;
	mov.f32 	%f3661, %f3662;
	@%p1103 bra 	$L__BB0_19;
// %bb.18:                              // %LoadGlobalF32.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.f32 	%f3661, [%rd42];
$L__BB0_19:                             // %LoadGlobalF32.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r1754, %r37, %r31;
	setp.ge.u32 	%p1104, %r1754, %r28;
	setp.lt.u32 	%p1105, %r30, 8;
	or.pred  	%p1106, %p1105, %p1104;
	mov.f32 	%f3654, %f8;
	@%p1106 bra 	$L__BB0_502;
// %bb.20:                              // %LoadGlobalF32.endif.endif...if
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s64 	%rd43, %rd42, %rd491;
	ld.global.f32 	%f3662, [%rd43];
	mov.f32 	%f3654, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_45:                             // %MovF3F2
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	mov.f32 	%f3671, %f3663;
	mov.f32 	%f3672, %f3664;
	mov.f32 	%f3673, %f3665;
	mov.f32 	%f3674, %f3666;
	mov.f32 	%f3675, %f3667;
	mov.f32 	%f3676, %f3668;
	mov.f32 	%f3677, %f3669;
	mov.f32 	%f3678, %f3670;
	bra.uni 	$L__BB0_502;
$L__BB0_280:                            // %FArcTan2
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f388, %f9;
	abs.f32 	%f1946, %f3647;
	setp.neu.f32 	%p407, %f388, 0f00000000;
	setp.neu.f32 	%p408, %f1946, 0f00000000;
	or.pred  	%p409, %p407, %p408;
	@%p409 bra 	$L__BB0_282;
// %bb.281:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r792, %f9;
	shr.s32 	%r793, %r792, 31;
	and.b32  	%r794, %r793, 1078530011;
	mov.b32 	%f1969, %r794;
	copysign.f32 	%f3647, %f3647, %f1969;
	bra.uni 	$L__BB0_285;
$L__BB0_405:                            // %FRSqrt
                                        //   in Loop: Header=BB0_1 Depth=1
	rsqrt.approx.f32 	%f3647, %f3647;
	rsqrt.approx.f32 	%f3648, %f3648;
	rsqrt.approx.f32 	%f3649, %f3649;
	rsqrt.approx.f32 	%f3650, %f3650;
	rsqrt.approx.f32 	%f3651, %f3651;
	rsqrt.approx.f32 	%f3652, %f3652;
	rsqrt.approx.f32 	%f3653, %f3653;
	rsqrt.approx.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_41:                             // %MovF2F1
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	mov.f32 	%f3663, %f9;
	mov.f32 	%f3664, %f10;
	mov.f32 	%f3665, %f11;
	mov.f32 	%f3666, %f12;
	mov.f32 	%f3667, %f13;
	mov.f32 	%f3668, %f14;
	mov.f32 	%f3669, %f15;
	mov.f32 	%f3670, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_52:                             // %FRSub
                                        //   in Loop: Header=BB0_1 Depth=1
	sub.rn.f32 	%f3647, %f9, %f3647;
	sub.rn.f32 	%f3648, %f10, %f3648;
	sub.rn.f32 	%f3649, %f11, %f3649;
	sub.rn.f32 	%f3650, %f12, %f3650;
	sub.rn.f32 	%f3651, %f13, %f3651;
	sub.rn.f32 	%f3652, %f14, %f3652;
	sub.rn.f32 	%f3653, %f15, %f3653;
	sub.rn.f32 	%f3654, %f16, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_64:                             // %FRem
                                        //   in Loop: Header=BB0_1 Depth=1
	div.rn.f32 	%f2967, %f3647, %f9;
	cvt.rzi.f32.f32 	%f2968, %f2967;
	mul.f32 	%f2969, %f2968, %f9;
	sub.f32 	%f2970, %f3647, %f2969;
	testp.infinite.f32 	%p735, %f9;
	selp.f32 	%f3647, %f3647, %f2970, %p735;
	div.rn.f32 	%f2971, %f3648, %f10;
	cvt.rzi.f32.f32 	%f2972, %f2971;
	mul.f32 	%f2973, %f2972, %f10;
	sub.f32 	%f2974, %f3648, %f2973;
	testp.infinite.f32 	%p736, %f10;
	selp.f32 	%f3648, %f3648, %f2974, %p736;
	div.rn.f32 	%f2975, %f3649, %f11;
	cvt.rzi.f32.f32 	%f2976, %f2975;
	mul.f32 	%f2977, %f2976, %f11;
	sub.f32 	%f2978, %f3649, %f2977;
	testp.infinite.f32 	%p737, %f11;
	selp.f32 	%f3649, %f3649, %f2978, %p737;
	div.rn.f32 	%f2979, %f3650, %f12;
	cvt.rzi.f32.f32 	%f2980, %f2979;
	mul.f32 	%f2981, %f2980, %f12;
	sub.f32 	%f2982, %f3650, %f2981;
	testp.infinite.f32 	%p738, %f12;
	selp.f32 	%f3650, %f3650, %f2982, %p738;
	div.rn.f32 	%f2983, %f3651, %f13;
	cvt.rzi.f32.f32 	%f2984, %f2983;
	mul.f32 	%f2985, %f2984, %f13;
	sub.f32 	%f2986, %f3651, %f2985;
	testp.infinite.f32 	%p739, %f13;
	selp.f32 	%f3651, %f3651, %f2986, %p739;
	div.rn.f32 	%f2987, %f3652, %f14;
	cvt.rzi.f32.f32 	%f2988, %f2987;
	mul.f32 	%f2989, %f2988, %f14;
	sub.f32 	%f2990, %f3652, %f2989;
	testp.infinite.f32 	%p740, %f14;
	selp.f32 	%f3652, %f3652, %f2990, %p740;
	div.rn.f32 	%f2991, %f3653, %f15;
	cvt.rzi.f32.f32 	%f2992, %f2991;
	mul.f32 	%f2993, %f2992, %f15;
	sub.f32 	%f2994, %f3653, %f2993;
	testp.infinite.f32 	%p741, %f15;
	selp.f32 	%f3653, %f3653, %f2994, %p741;
	div.rn.f32 	%f2995, %f8, %f16;
	cvt.rzi.f32.f32 	%f2996, %f2995;
	mul.f32 	%f2997, %f2996, %f16;
	sub.f32 	%f2998, %f8, %f2997;
	testp.infinite.f32 	%p742, %f16;
	selp.f32 	%f3654, %f8, %f2998, %p742;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_37:                             // %FAdd
                                        //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f3647, %f3647, %f9;
	add.rn.f32 	%f3648, %f3648, %f10;
	add.rn.f32 	%f3649, %f3649, %f11;
	add.rn.f32 	%f3650, %f3650, %f12;
	add.rn.f32 	%f3651, %f3651, %f13;
	add.rn.f32 	%f3652, %f3652, %f14;
	add.rn.f32 	%f3653, %f3653, %f15;
	add.rn.f32 	%f3654, %f8, %f16;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_44:                             // %MovF1F2
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f3663;
	mov.f32 	%f3656, %f3664;
	mov.f32 	%f3657, %f3665;
	mov.f32 	%f3658, %f3666;
	mov.f32 	%f3659, %f3667;
	mov.f32 	%f3660, %f3668;
	mov.f32 	%f3661, %f3669;
	mov.f32 	%f3662, %f3670;
	bra.uni 	$L__BB0_502;
$L__BB0_48:                             // %MovF2F3
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	mov.f32 	%f3663, %f3671;
	mov.f32 	%f3664, %f3672;
	mov.f32 	%f3665, %f3673;
	mov.f32 	%f3666, %f3674;
	mov.f32 	%f3667, %f3675;
	mov.f32 	%f3668, %f3676;
	mov.f32 	%f3669, %f3677;
	mov.f32 	%f3670, %f3678;
	bra.uni 	$L__BB0_502;
$L__BB0_47:                             // %MovF1F3
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f3671;
	mov.f32 	%f3656, %f3672;
	mov.f32 	%f3657, %f3673;
	mov.f32 	%f3658, %f3674;
	mov.f32 	%f3659, %f3675;
	mov.f32 	%f3660, %f3676;
	mov.f32 	%f3661, %f3677;
	mov.f32 	%f3662, %f3678;
	bra.uni 	$L__BB0_502;
$L__BB0_279:                            // %FArcTan
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f2138, %f3647;
	setp.gt.f32 	%p487, %f2138, 0f3F800000;
	rcp.rn.f32 	%f2139, %f2138;
	selp.f32 	%f2140, %f2139, %f2138, %p487;
	mul.rn.f32 	%f2141, %f2140, %f2140;
	fma.rn.f32 	%f2142, %f2141, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2143, %f2142, %f2141, 0fC0D21907;
	mul.rn.f32 	%f2144, %f2141, %f2143;
	mul.rn.f32 	%f2145, %f2140, %f2144;
	add.rn.f32 	%f2146, %f2141, 0f41355DC0;
	fma.rn.f32 	%f2147, %f2146, %f2141, 0f41E6BD60;
	fma.rn.f32 	%f2148, %f2147, %f2141, 0f419D92C8;
	rcp.rn.f32 	%f2149, %f2148;
	fma.rn.f32 	%f2150, %f2145, %f2149, %f2140;
	mov.f32 	%f2151, 0f3FC90FDB;
	sub.rn.f32 	%f2152, %f2151, %f2150;
	selp.f32 	%f2153, %f2152, %f2150, %p487;
	setp.num.f32 	%p488, %f2138, %f2138;
	mov.b32 	%r865, %f2153;
	mov.b32 	%r866, %f3647;
	and.b32  	%r867, %r866, -2147483648;
	or.b32  	%r868, %r867, %r865;
	mov.b32 	%f2154, %r868;
	selp.f32 	%f3647, %f2154, %f2153, %p488;
	abs.f32 	%f2155, %f3648;
	setp.gt.f32 	%p489, %f2155, 0f3F800000;
	rcp.rn.f32 	%f2156, %f2155;
	selp.f32 	%f2157, %f2156, %f2155, %p489;
	mul.rn.f32 	%f2158, %f2157, %f2157;
	fma.rn.f32 	%f2159, %f2158, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2160, %f2159, %f2158, 0fC0D21907;
	mul.rn.f32 	%f2161, %f2158, %f2160;
	mul.rn.f32 	%f2162, %f2157, %f2161;
	add.rn.f32 	%f2163, %f2158, 0f41355DC0;
	fma.rn.f32 	%f2164, %f2163, %f2158, 0f41E6BD60;
	fma.rn.f32 	%f2165, %f2164, %f2158, 0f419D92C8;
	rcp.rn.f32 	%f2166, %f2165;
	fma.rn.f32 	%f2167, %f2162, %f2166, %f2157;
	sub.rn.f32 	%f2168, %f2151, %f2167;
	selp.f32 	%f2169, %f2168, %f2167, %p489;
	setp.num.f32 	%p490, %f2155, %f2155;
	mov.b32 	%r869, %f2169;
	mov.b32 	%r870, %f3648;
	and.b32  	%r871, %r870, -2147483648;
	or.b32  	%r872, %r871, %r869;
	mov.b32 	%f2170, %r872;
	selp.f32 	%f3648, %f2170, %f2169, %p490;
	abs.f32 	%f2171, %f3649;
	setp.gt.f32 	%p491, %f2171, 0f3F800000;
	rcp.rn.f32 	%f2172, %f2171;
	selp.f32 	%f2173, %f2172, %f2171, %p491;
	mul.rn.f32 	%f2174, %f2173, %f2173;
	fma.rn.f32 	%f2175, %f2174, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2176, %f2175, %f2174, 0fC0D21907;
	mul.rn.f32 	%f2177, %f2174, %f2176;
	mul.rn.f32 	%f2178, %f2173, %f2177;
	add.rn.f32 	%f2179, %f2174, 0f41355DC0;
	fma.rn.f32 	%f2180, %f2179, %f2174, 0f41E6BD60;
	fma.rn.f32 	%f2181, %f2180, %f2174, 0f419D92C8;
	rcp.rn.f32 	%f2182, %f2181;
	fma.rn.f32 	%f2183, %f2178, %f2182, %f2173;
	sub.rn.f32 	%f2184, %f2151, %f2183;
	selp.f32 	%f2185, %f2184, %f2183, %p491;
	setp.num.f32 	%p492, %f2171, %f2171;
	mov.b32 	%r873, %f2185;
	mov.b32 	%r874, %f3649;
	and.b32  	%r875, %r874, -2147483648;
	or.b32  	%r876, %r875, %r873;
	mov.b32 	%f2186, %r876;
	selp.f32 	%f3649, %f2186, %f2185, %p492;
	abs.f32 	%f2187, %f3650;
	setp.gt.f32 	%p493, %f2187, 0f3F800000;
	rcp.rn.f32 	%f2188, %f2187;
	selp.f32 	%f2189, %f2188, %f2187, %p493;
	mul.rn.f32 	%f2190, %f2189, %f2189;
	fma.rn.f32 	%f2191, %f2190, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2192, %f2191, %f2190, 0fC0D21907;
	mul.rn.f32 	%f2193, %f2190, %f2192;
	mul.rn.f32 	%f2194, %f2189, %f2193;
	add.rn.f32 	%f2195, %f2190, 0f41355DC0;
	fma.rn.f32 	%f2196, %f2195, %f2190, 0f41E6BD60;
	fma.rn.f32 	%f2197, %f2196, %f2190, 0f419D92C8;
	rcp.rn.f32 	%f2198, %f2197;
	fma.rn.f32 	%f2199, %f2194, %f2198, %f2189;
	sub.rn.f32 	%f2200, %f2151, %f2199;
	selp.f32 	%f2201, %f2200, %f2199, %p493;
	setp.num.f32 	%p494, %f2187, %f2187;
	mov.b32 	%r877, %f2201;
	mov.b32 	%r878, %f3650;
	and.b32  	%r879, %r878, -2147483648;
	or.b32  	%r880, %r879, %r877;
	mov.b32 	%f2202, %r880;
	selp.f32 	%f3650, %f2202, %f2201, %p494;
	abs.f32 	%f2203, %f3651;
	setp.gt.f32 	%p495, %f2203, 0f3F800000;
	rcp.rn.f32 	%f2204, %f2203;
	selp.f32 	%f2205, %f2204, %f2203, %p495;
	mul.rn.f32 	%f2206, %f2205, %f2205;
	fma.rn.f32 	%f2207, %f2206, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2208, %f2207, %f2206, 0fC0D21907;
	mul.rn.f32 	%f2209, %f2206, %f2208;
	mul.rn.f32 	%f2210, %f2205, %f2209;
	add.rn.f32 	%f2211, %f2206, 0f41355DC0;
	fma.rn.f32 	%f2212, %f2211, %f2206, 0f41E6BD60;
	fma.rn.f32 	%f2213, %f2212, %f2206, 0f419D92C8;
	rcp.rn.f32 	%f2214, %f2213;
	fma.rn.f32 	%f2215, %f2210, %f2214, %f2205;
	sub.rn.f32 	%f2216, %f2151, %f2215;
	selp.f32 	%f2217, %f2216, %f2215, %p495;
	setp.num.f32 	%p496, %f2203, %f2203;
	mov.b32 	%r881, %f2217;
	mov.b32 	%r882, %f3651;
	and.b32  	%r883, %r882, -2147483648;
	or.b32  	%r884, %r883, %r881;
	mov.b32 	%f2218, %r884;
	selp.f32 	%f3651, %f2218, %f2217, %p496;
	abs.f32 	%f2219, %f3652;
	setp.gt.f32 	%p497, %f2219, 0f3F800000;
	rcp.rn.f32 	%f2220, %f2219;
	selp.f32 	%f2221, %f2220, %f2219, %p497;
	mul.rn.f32 	%f2222, %f2221, %f2221;
	fma.rn.f32 	%f2223, %f2222, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2224, %f2223, %f2222, 0fC0D21907;
	mul.rn.f32 	%f2225, %f2222, %f2224;
	mul.rn.f32 	%f2226, %f2221, %f2225;
	add.rn.f32 	%f2227, %f2222, 0f41355DC0;
	fma.rn.f32 	%f2228, %f2227, %f2222, 0f41E6BD60;
	fma.rn.f32 	%f2229, %f2228, %f2222, 0f419D92C8;
	rcp.rn.f32 	%f2230, %f2229;
	fma.rn.f32 	%f2231, %f2226, %f2230, %f2221;
	sub.rn.f32 	%f2232, %f2151, %f2231;
	selp.f32 	%f2233, %f2232, %f2231, %p497;
	setp.num.f32 	%p498, %f2219, %f2219;
	mov.b32 	%r885, %f2233;
	mov.b32 	%r886, %f3652;
	and.b32  	%r887, %r886, -2147483648;
	or.b32  	%r888, %r887, %r885;
	mov.b32 	%f2234, %r888;
	selp.f32 	%f3652, %f2234, %f2233, %p498;
	abs.f32 	%f2235, %f3653;
	setp.gt.f32 	%p499, %f2235, 0f3F800000;
	rcp.rn.f32 	%f2236, %f2235;
	selp.f32 	%f2237, %f2236, %f2235, %p499;
	mul.rn.f32 	%f2238, %f2237, %f2237;
	fma.rn.f32 	%f2239, %f2238, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2240, %f2239, %f2238, 0fC0D21907;
	mul.rn.f32 	%f2241, %f2238, %f2240;
	mul.rn.f32 	%f2242, %f2237, %f2241;
	add.rn.f32 	%f2243, %f2238, 0f41355DC0;
	fma.rn.f32 	%f2244, %f2243, %f2238, 0f41E6BD60;
	fma.rn.f32 	%f2245, %f2244, %f2238, 0f419D92C8;
	rcp.rn.f32 	%f2246, %f2245;
	fma.rn.f32 	%f2247, %f2242, %f2246, %f2237;
	sub.rn.f32 	%f2248, %f2151, %f2247;
	selp.f32 	%f2249, %f2248, %f2247, %p499;
	setp.num.f32 	%p500, %f2235, %f2235;
	mov.b32 	%r889, %f2249;
	mov.b32 	%r890, %f3653;
	and.b32  	%r891, %r890, -2147483648;
	or.b32  	%r892, %r891, %r889;
	mov.b32 	%f2250, %r892;
	selp.f32 	%f3653, %f2250, %f2249, %p500;
	abs.f32 	%f2251, %f8;
	setp.gt.f32 	%p501, %f2251, 0f3F800000;
	rcp.rn.f32 	%f2252, %f2251;
	selp.f32 	%f2253, %f2252, %f2251, %p501;
	mul.rn.f32 	%f2254, %f2253, %f2253;
	fma.rn.f32 	%f2255, %f2254, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2256, %f2255, %f2254, 0fC0D21907;
	mul.rn.f32 	%f2257, %f2254, %f2256;
	mul.rn.f32 	%f2258, %f2253, %f2257;
	add.rn.f32 	%f2259, %f2254, 0f41355DC0;
	fma.rn.f32 	%f2260, %f2259, %f2254, 0f41E6BD60;
	fma.rn.f32 	%f2261, %f2260, %f2254, 0f419D92C8;
	rcp.rn.f32 	%f2262, %f2261;
	fma.rn.f32 	%f2263, %f2258, %f2262, %f2253;
	sub.rn.f32 	%f2264, %f2151, %f2263;
	selp.f32 	%f2265, %f2264, %f2263, %p501;
	setp.num.f32 	%p502, %f2251, %f2251;
	mov.b32 	%r893, %f2265;
	mov.b32 	%r894, %f8;
	and.b32  	%r895, %r894, -2147483648;
	or.b32  	%r896, %r895, %r893;
	mov.b32 	%f2266, %r896;
	selp.f32 	%f3654, %f2266, %f2265, %p502;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_49:                             // %FMul
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f3647, %f3647, %f9;
	mul.rn.f32 	%f3648, %f3648, %f10;
	mul.rn.f32 	%f3649, %f3649, %f11;
	mul.rn.f32 	%f3650, %f3650, %f12;
	mul.rn.f32 	%f3651, %f3651, %f13;
	mul.rn.f32 	%f3652, %f3652, %f14;
	mul.rn.f32 	%f3653, %f3653, %f15;
	mul.rn.f32 	%f3654, %f8, %f16;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_59:                             // %LoadF3Imm
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%f3671, %r12;
	mov.f32 	%f3654, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	mov.f32 	%f3672, %f3671;
	mov.f32 	%f3673, %f3671;
	mov.f32 	%f3674, %f3671;
	mov.f32 	%f3675, %f3671;
	mov.f32 	%f3676, %f3671;
	mov.f32 	%f3677, %f3671;
	mov.f32 	%f3678, %f3671;
	bra.uni 	$L__BB0_502;
$L__BB0_54:                             // %FRDiv
                                        //   in Loop: Header=BB0_1 Depth=1
	div.rn.f32 	%f3647, %f9, %f3647;
	div.rn.f32 	%f3648, %f10, %f3648;
	div.rn.f32 	%f3649, %f11, %f3649;
	div.rn.f32 	%f3650, %f12, %f3650;
	div.rn.f32 	%f3651, %f13, %f3651;
	div.rn.f32 	%f3652, %f14, %f3652;
	div.rn.f32 	%f3653, %f15, %f3653;
	div.rn.f32 	%f3654, %f16, %f8;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_404:                            // %FLog2
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.lt.f32 	%p143, %f3647, 0f00800000;
	mul.rn.f32 	%f848, %f3647, 0f4B000000;
	selp.f32 	%f849, %f848, %f3647, %p143;
	selp.f32 	%f850, 0fC1B80000, 0f00000000, %p143;
	mov.b32 	%r569, %f849;
	add.s32 	%r570, %r569, -1060439283;
	and.b32  	%r571, %r570, -8388608;
	sub.s32 	%r572, %r569, %r571;
	mov.b32 	%f851, %r572;
	cvt.rn.f32.s32 	%f852, %r571;
	fma.rn.f32 	%f853, %f852, 0f34000000, %f850;
	add.rn.f32 	%f854, %f851, 0fBF800000;
	fma.rn.f32 	%f855, %f854, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f856, %f855, %f854, 0f3E2FCF2A;
	fma.rn.f32 	%f857, %f856, %f854, 0fBE374E43;
	fma.rn.f32 	%f858, %f857, %f854, 0f3E520BF4;
	fma.rn.f32 	%f859, %f858, %f854, 0fBE763C8B;
	fma.rn.f32 	%f860, %f859, %f854, 0f3E93BF99;
	fma.rn.f32 	%f861, %f860, %f854, 0fBEB8AA49;
	fma.rn.f32 	%f862, %f861, %f854, 0f3EF6384A;
	fma.rn.f32 	%f863, %f862, %f854, 0fBF38AA3B;
	mul.rn.f32 	%f864, %f854, %f863;
	mul.rn.f32 	%f865, %f854, %f864;
	fma.rn.f32 	%f866, %f854, 0f3FB8AA3B, %f865;
	add.rn.f32 	%f867, %f853, %f866;
	setp.gt.u32 	%p144, %r569, 2139095039;
	fma.rn.f32 	%f868, %f849, 0f7F800000, 0f7F800000;
	selp.f32 	%f869, %f868, %f867, %p144;
	setp.eq.f32 	%p145, %f849, 0f00000000;
	selp.f32 	%f3647, 0fFF800000, %f869, %p145;
	setp.lt.f32 	%p146, %f3648, 0f00800000;
	mul.rn.f32 	%f870, %f3648, 0f4B000000;
	selp.f32 	%f871, %f870, %f3648, %p146;
	selp.f32 	%f872, 0fC1B80000, 0f00000000, %p146;
	mov.b32 	%r573, %f871;
	add.s32 	%r574, %r573, -1060439283;
	and.b32  	%r575, %r574, -8388608;
	sub.s32 	%r576, %r573, %r575;
	mov.b32 	%f873, %r576;
	cvt.rn.f32.s32 	%f874, %r575;
	fma.rn.f32 	%f875, %f874, 0f34000000, %f872;
	add.rn.f32 	%f876, %f873, 0fBF800000;
	fma.rn.f32 	%f877, %f876, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f878, %f877, %f876, 0f3E2FCF2A;
	fma.rn.f32 	%f879, %f878, %f876, 0fBE374E43;
	fma.rn.f32 	%f880, %f879, %f876, 0f3E520BF4;
	fma.rn.f32 	%f881, %f880, %f876, 0fBE763C8B;
	fma.rn.f32 	%f882, %f881, %f876, 0f3E93BF99;
	fma.rn.f32 	%f883, %f882, %f876, 0fBEB8AA49;
	fma.rn.f32 	%f884, %f883, %f876, 0f3EF6384A;
	fma.rn.f32 	%f885, %f884, %f876, 0fBF38AA3B;
	mul.rn.f32 	%f886, %f876, %f885;
	mul.rn.f32 	%f887, %f876, %f886;
	fma.rn.f32 	%f888, %f876, 0f3FB8AA3B, %f887;
	add.rn.f32 	%f889, %f875, %f888;
	setp.gt.u32 	%p147, %r573, 2139095039;
	fma.rn.f32 	%f890, %f871, 0f7F800000, 0f7F800000;
	selp.f32 	%f891, %f890, %f889, %p147;
	setp.eq.f32 	%p148, %f871, 0f00000000;
	selp.f32 	%f3648, 0fFF800000, %f891, %p148;
	setp.lt.f32 	%p149, %f3649, 0f00800000;
	mul.rn.f32 	%f892, %f3649, 0f4B000000;
	selp.f32 	%f893, %f892, %f3649, %p149;
	selp.f32 	%f894, 0fC1B80000, 0f00000000, %p149;
	mov.b32 	%r577, %f893;
	add.s32 	%r578, %r577, -1060439283;
	and.b32  	%r579, %r578, -8388608;
	sub.s32 	%r580, %r577, %r579;
	mov.b32 	%f895, %r580;
	cvt.rn.f32.s32 	%f896, %r579;
	fma.rn.f32 	%f897, %f896, 0f34000000, %f894;
	add.rn.f32 	%f898, %f895, 0fBF800000;
	fma.rn.f32 	%f899, %f898, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f900, %f899, %f898, 0f3E2FCF2A;
	fma.rn.f32 	%f901, %f900, %f898, 0fBE374E43;
	fma.rn.f32 	%f902, %f901, %f898, 0f3E520BF4;
	fma.rn.f32 	%f903, %f902, %f898, 0fBE763C8B;
	fma.rn.f32 	%f904, %f903, %f898, 0f3E93BF99;
	fma.rn.f32 	%f905, %f904, %f898, 0fBEB8AA49;
	fma.rn.f32 	%f906, %f905, %f898, 0f3EF6384A;
	fma.rn.f32 	%f907, %f906, %f898, 0fBF38AA3B;
	mul.rn.f32 	%f908, %f898, %f907;
	mul.rn.f32 	%f909, %f898, %f908;
	fma.rn.f32 	%f910, %f898, 0f3FB8AA3B, %f909;
	add.rn.f32 	%f911, %f897, %f910;
	setp.gt.u32 	%p150, %r577, 2139095039;
	fma.rn.f32 	%f912, %f893, 0f7F800000, 0f7F800000;
	selp.f32 	%f913, %f912, %f911, %p150;
	setp.eq.f32 	%p151, %f893, 0f00000000;
	selp.f32 	%f3649, 0fFF800000, %f913, %p151;
	setp.lt.f32 	%p152, %f3650, 0f00800000;
	mul.rn.f32 	%f914, %f3650, 0f4B000000;
	selp.f32 	%f915, %f914, %f3650, %p152;
	selp.f32 	%f916, 0fC1B80000, 0f00000000, %p152;
	mov.b32 	%r581, %f915;
	add.s32 	%r582, %r581, -1060439283;
	and.b32  	%r583, %r582, -8388608;
	sub.s32 	%r584, %r581, %r583;
	mov.b32 	%f917, %r584;
	cvt.rn.f32.s32 	%f918, %r583;
	fma.rn.f32 	%f919, %f918, 0f34000000, %f916;
	add.rn.f32 	%f920, %f917, 0fBF800000;
	fma.rn.f32 	%f921, %f920, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f922, %f921, %f920, 0f3E2FCF2A;
	fma.rn.f32 	%f923, %f922, %f920, 0fBE374E43;
	fma.rn.f32 	%f924, %f923, %f920, 0f3E520BF4;
	fma.rn.f32 	%f925, %f924, %f920, 0fBE763C8B;
	fma.rn.f32 	%f926, %f925, %f920, 0f3E93BF99;
	fma.rn.f32 	%f927, %f926, %f920, 0fBEB8AA49;
	fma.rn.f32 	%f928, %f927, %f920, 0f3EF6384A;
	fma.rn.f32 	%f929, %f928, %f920, 0fBF38AA3B;
	mul.rn.f32 	%f930, %f920, %f929;
	mul.rn.f32 	%f931, %f920, %f930;
	fma.rn.f32 	%f932, %f920, 0f3FB8AA3B, %f931;
	add.rn.f32 	%f933, %f919, %f932;
	setp.gt.u32 	%p153, %r581, 2139095039;
	fma.rn.f32 	%f934, %f915, 0f7F800000, 0f7F800000;
	selp.f32 	%f935, %f934, %f933, %p153;
	setp.eq.f32 	%p154, %f915, 0f00000000;
	selp.f32 	%f3650, 0fFF800000, %f935, %p154;
	setp.lt.f32 	%p155, %f3651, 0f00800000;
	mul.rn.f32 	%f936, %f3651, 0f4B000000;
	selp.f32 	%f937, %f936, %f3651, %p155;
	selp.f32 	%f938, 0fC1B80000, 0f00000000, %p155;
	mov.b32 	%r585, %f937;
	add.s32 	%r586, %r585, -1060439283;
	and.b32  	%r587, %r586, -8388608;
	sub.s32 	%r588, %r585, %r587;
	mov.b32 	%f939, %r588;
	cvt.rn.f32.s32 	%f940, %r587;
	fma.rn.f32 	%f941, %f940, 0f34000000, %f938;
	add.rn.f32 	%f942, %f939, 0fBF800000;
	fma.rn.f32 	%f943, %f942, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f944, %f943, %f942, 0f3E2FCF2A;
	fma.rn.f32 	%f945, %f944, %f942, 0fBE374E43;
	fma.rn.f32 	%f946, %f945, %f942, 0f3E520BF4;
	fma.rn.f32 	%f947, %f946, %f942, 0fBE763C8B;
	fma.rn.f32 	%f948, %f947, %f942, 0f3E93BF99;
	fma.rn.f32 	%f949, %f948, %f942, 0fBEB8AA49;
	fma.rn.f32 	%f950, %f949, %f942, 0f3EF6384A;
	fma.rn.f32 	%f951, %f950, %f942, 0fBF38AA3B;
	mul.rn.f32 	%f952, %f942, %f951;
	mul.rn.f32 	%f953, %f942, %f952;
	fma.rn.f32 	%f954, %f942, 0f3FB8AA3B, %f953;
	add.rn.f32 	%f955, %f941, %f954;
	setp.gt.u32 	%p156, %r585, 2139095039;
	fma.rn.f32 	%f956, %f937, 0f7F800000, 0f7F800000;
	selp.f32 	%f957, %f956, %f955, %p156;
	setp.eq.f32 	%p157, %f937, 0f00000000;
	selp.f32 	%f3651, 0fFF800000, %f957, %p157;
	setp.lt.f32 	%p158, %f3652, 0f00800000;
	mul.rn.f32 	%f958, %f3652, 0f4B000000;
	selp.f32 	%f959, %f958, %f3652, %p158;
	selp.f32 	%f960, 0fC1B80000, 0f00000000, %p158;
	mov.b32 	%r589, %f959;
	add.s32 	%r590, %r589, -1060439283;
	and.b32  	%r591, %r590, -8388608;
	sub.s32 	%r592, %r589, %r591;
	mov.b32 	%f961, %r592;
	cvt.rn.f32.s32 	%f962, %r591;
	fma.rn.f32 	%f963, %f962, 0f34000000, %f960;
	add.rn.f32 	%f964, %f961, 0fBF800000;
	fma.rn.f32 	%f965, %f964, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f966, %f965, %f964, 0f3E2FCF2A;
	fma.rn.f32 	%f967, %f966, %f964, 0fBE374E43;
	fma.rn.f32 	%f968, %f967, %f964, 0f3E520BF4;
	fma.rn.f32 	%f969, %f968, %f964, 0fBE763C8B;
	fma.rn.f32 	%f970, %f969, %f964, 0f3E93BF99;
	fma.rn.f32 	%f971, %f970, %f964, 0fBEB8AA49;
	fma.rn.f32 	%f972, %f971, %f964, 0f3EF6384A;
	fma.rn.f32 	%f973, %f972, %f964, 0fBF38AA3B;
	mul.rn.f32 	%f974, %f964, %f973;
	mul.rn.f32 	%f975, %f964, %f974;
	fma.rn.f32 	%f976, %f964, 0f3FB8AA3B, %f975;
	add.rn.f32 	%f977, %f963, %f976;
	setp.gt.u32 	%p159, %r589, 2139095039;
	fma.rn.f32 	%f978, %f959, 0f7F800000, 0f7F800000;
	selp.f32 	%f979, %f978, %f977, %p159;
	setp.eq.f32 	%p160, %f959, 0f00000000;
	selp.f32 	%f3652, 0fFF800000, %f979, %p160;
	setp.lt.f32 	%p161, %f3653, 0f00800000;
	mul.rn.f32 	%f980, %f3653, 0f4B000000;
	selp.f32 	%f981, %f980, %f3653, %p161;
	selp.f32 	%f982, 0fC1B80000, 0f00000000, %p161;
	mov.b32 	%r593, %f981;
	add.s32 	%r594, %r593, -1060439283;
	and.b32  	%r595, %r594, -8388608;
	sub.s32 	%r596, %r593, %r595;
	mov.b32 	%f983, %r596;
	cvt.rn.f32.s32 	%f984, %r595;
	fma.rn.f32 	%f985, %f984, 0f34000000, %f982;
	add.rn.f32 	%f986, %f983, 0fBF800000;
	fma.rn.f32 	%f987, %f986, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f988, %f987, %f986, 0f3E2FCF2A;
	fma.rn.f32 	%f989, %f988, %f986, 0fBE374E43;
	fma.rn.f32 	%f990, %f989, %f986, 0f3E520BF4;
	fma.rn.f32 	%f991, %f990, %f986, 0fBE763C8B;
	fma.rn.f32 	%f992, %f991, %f986, 0f3E93BF99;
	fma.rn.f32 	%f993, %f992, %f986, 0fBEB8AA49;
	fma.rn.f32 	%f994, %f993, %f986, 0f3EF6384A;
	fma.rn.f32 	%f995, %f994, %f986, 0fBF38AA3B;
	mul.rn.f32 	%f996, %f986, %f995;
	mul.rn.f32 	%f997, %f986, %f996;
	fma.rn.f32 	%f998, %f986, 0f3FB8AA3B, %f997;
	add.rn.f32 	%f999, %f985, %f998;
	setp.gt.u32 	%p162, %r593, 2139095039;
	fma.rn.f32 	%f1000, %f981, 0f7F800000, 0f7F800000;
	selp.f32 	%f1001, %f1000, %f999, %p162;
	setp.eq.f32 	%p163, %f981, 0f00000000;
	selp.f32 	%f3653, 0fFF800000, %f1001, %p163;
	setp.lt.f32 	%p164, %f8, 0f00800000;
	mul.rn.f32 	%f1002, %f8, 0f4B000000;
	selp.f32 	%f1003, %f1002, %f8, %p164;
	selp.f32 	%f1004, 0fC1B80000, 0f00000000, %p164;
	mov.b32 	%r597, %f1003;
	add.s32 	%r598, %r597, -1060439283;
	and.b32  	%r599, %r598, -8388608;
	sub.s32 	%r600, %r597, %r599;
	mov.b32 	%f1005, %r600;
	cvt.rn.f32.s32 	%f1006, %r599;
	fma.rn.f32 	%f1007, %f1006, 0f34000000, %f1004;
	add.rn.f32 	%f1008, %f1005, 0fBF800000;
	fma.rn.f32 	%f1009, %f1008, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f1010, %f1009, %f1008, 0f3E2FCF2A;
	fma.rn.f32 	%f1011, %f1010, %f1008, 0fBE374E43;
	fma.rn.f32 	%f1012, %f1011, %f1008, 0f3E520BF4;
	fma.rn.f32 	%f1013, %f1012, %f1008, 0fBE763C8B;
	fma.rn.f32 	%f1014, %f1013, %f1008, 0f3E93BF99;
	fma.rn.f32 	%f1015, %f1014, %f1008, 0fBEB8AA49;
	fma.rn.f32 	%f1016, %f1015, %f1008, 0f3EF6384A;
	fma.rn.f32 	%f1017, %f1016, %f1008, 0fBF38AA3B;
	mul.rn.f32 	%f1018, %f1008, %f1017;
	mul.rn.f32 	%f1019, %f1008, %f1018;
	fma.rn.f32 	%f1020, %f1008, 0f3FB8AA3B, %f1019;
	add.rn.f32 	%f1021, %f1007, %f1020;
	setp.gt.u32 	%p165, %r597, 2139095039;
	fma.rn.f32 	%f1022, %f1003, 0f7F800000, 0f7F800000;
	selp.f32 	%f1023, %f1022, %f1021, %p165;
	setp.eq.f32 	%p166, %f1003, 0f00000000;
	selp.f32 	%f3654, 0fFF800000, %f1023, %p166;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_61:                             // %WarpAllReduceMax
                                        //   in Loop: Header=BB0_1 Depth=1
	shfl.sync.bfly.b32	%f3303, %f3647, 16, 31, -1;
	mov.b32 	%r1657, %f3303;
	mov.b32 	%r1658, %f3647;
	setp.nan.f32 	%p903, %f3647, %f3303;
	max.f32 	%f3304, %f3647, %f3303;
	selp.f32 	%f3305, 0f7FC00000, %f3304, %p903;
	setp.eq.s32 	%p904, %r1658, 0;
	selp.f32 	%f3306, %f3647, %f3305, %p904;
	setp.eq.s32 	%p905, %r1657, 0;
	selp.f32 	%f3307, %f3303, %f3306, %p905;
	setp.eq.f32 	%p906, %f3305, 0f00000000;
	selp.f32 	%f3308, %f3307, %f3305, %p906;
	mov.b32 	%r1659, %f3308;
	shfl.sync.bfly.b32	%f3309, %f3308, 8, 31, -1;
	mov.b32 	%r1660, %f3309;
	setp.nan.f32 	%p907, %f3308, %f3309;
	max.f32 	%f3310, %f3308, %f3309;
	selp.f32 	%f3311, 0f7FC00000, %f3310, %p907;
	setp.eq.s32 	%p908, %r1659, 0;
	selp.f32 	%f3312, %f3308, %f3311, %p908;
	setp.eq.s32 	%p909, %r1660, 0;
	selp.f32 	%f3313, %f3309, %f3312, %p909;
	setp.eq.f32 	%p910, %f3311, 0f00000000;
	selp.f32 	%f3314, %f3313, %f3311, %p910;
	mov.b32 	%r1661, %f3314;
	shfl.sync.bfly.b32	%f3315, %f3314, 4, 31, -1;
	mov.b32 	%r1662, %f3315;
	setp.nan.f32 	%p911, %f3314, %f3315;
	max.f32 	%f3316, %f3314, %f3315;
	selp.f32 	%f3317, 0f7FC00000, %f3316, %p911;
	setp.eq.s32 	%p912, %r1661, 0;
	selp.f32 	%f3318, %f3314, %f3317, %p912;
	setp.eq.s32 	%p913, %r1662, 0;
	selp.f32 	%f3319, %f3315, %f3318, %p913;
	setp.eq.f32 	%p914, %f3317, 0f00000000;
	selp.f32 	%f3320, %f3319, %f3317, %p914;
	mov.b32 	%r1663, %f3320;
	shfl.sync.bfly.b32	%f3321, %f3320, 2, 31, -1;
	mov.b32 	%r1664, %f3321;
	setp.nan.f32 	%p915, %f3320, %f3321;
	max.f32 	%f3322, %f3320, %f3321;
	selp.f32 	%f3323, 0f7FC00000, %f3322, %p915;
	setp.eq.s32 	%p916, %r1663, 0;
	selp.f32 	%f3324, %f3320, %f3323, %p916;
	setp.eq.s32 	%p917, %r1664, 0;
	selp.f32 	%f3325, %f3321, %f3324, %p917;
	setp.eq.f32 	%p918, %f3323, 0f00000000;
	selp.f32 	%f3326, %f3325, %f3323, %p918;
	mov.b32 	%r1665, %f3326;
	shfl.sync.bfly.b32	%f3327, %f3326, 1, 31, -1;
	mov.b32 	%r1666, %f3327;
	setp.nan.f32 	%p919, %f3326, %f3327;
	max.f32 	%f3328, %f3326, %f3327;
	selp.f32 	%f3329, 0f7FC00000, %f3328, %p919;
	setp.eq.s32 	%p920, %r1665, 0;
	selp.f32 	%f3330, %f3326, %f3329, %p920;
	setp.eq.s32 	%p921, %r1666, 0;
	selp.f32 	%f3331, %f3327, %f3330, %p921;
	setp.eq.f32 	%p922, %f3329, 0f00000000;
	selp.f32 	%f3647, %f3331, %f3329, %p922;
	shfl.sync.bfly.b32	%f3332, %f3648, 16, 31, -1;
	mov.b32 	%r1667, %f3332;
	mov.b32 	%r1668, %f3648;
	setp.nan.f32 	%p923, %f3648, %f3332;
	max.f32 	%f3333, %f3648, %f3332;
	selp.f32 	%f3334, 0f7FC00000, %f3333, %p923;
	setp.eq.s32 	%p924, %r1668, 0;
	selp.f32 	%f3335, %f3648, %f3334, %p924;
	setp.eq.s32 	%p925, %r1667, 0;
	selp.f32 	%f3336, %f3332, %f3335, %p925;
	setp.eq.f32 	%p926, %f3334, 0f00000000;
	selp.f32 	%f3337, %f3336, %f3334, %p926;
	mov.b32 	%r1669, %f3337;
	shfl.sync.bfly.b32	%f3338, %f3337, 8, 31, -1;
	mov.b32 	%r1670, %f3338;
	setp.nan.f32 	%p927, %f3337, %f3338;
	max.f32 	%f3339, %f3337, %f3338;
	selp.f32 	%f3340, 0f7FC00000, %f3339, %p927;
	setp.eq.s32 	%p928, %r1669, 0;
	selp.f32 	%f3341, %f3337, %f3340, %p928;
	setp.eq.s32 	%p929, %r1670, 0;
	selp.f32 	%f3342, %f3338, %f3341, %p929;
	setp.eq.f32 	%p930, %f3340, 0f00000000;
	selp.f32 	%f3343, %f3342, %f3340, %p930;
	mov.b32 	%r1671, %f3343;
	shfl.sync.bfly.b32	%f3344, %f3343, 4, 31, -1;
	mov.b32 	%r1672, %f3344;
	setp.nan.f32 	%p931, %f3343, %f3344;
	max.f32 	%f3345, %f3343, %f3344;
	selp.f32 	%f3346, 0f7FC00000, %f3345, %p931;
	setp.eq.s32 	%p932, %r1671, 0;
	selp.f32 	%f3347, %f3343, %f3346, %p932;
	setp.eq.s32 	%p933, %r1672, 0;
	selp.f32 	%f3348, %f3344, %f3347, %p933;
	setp.eq.f32 	%p934, %f3346, 0f00000000;
	selp.f32 	%f3349, %f3348, %f3346, %p934;
	mov.b32 	%r1673, %f3349;
	shfl.sync.bfly.b32	%f3350, %f3349, 2, 31, -1;
	mov.b32 	%r1674, %f3350;
	setp.nan.f32 	%p935, %f3349, %f3350;
	max.f32 	%f3351, %f3349, %f3350;
	selp.f32 	%f3352, 0f7FC00000, %f3351, %p935;
	setp.eq.s32 	%p936, %r1673, 0;
	selp.f32 	%f3353, %f3349, %f3352, %p936;
	setp.eq.s32 	%p937, %r1674, 0;
	selp.f32 	%f3354, %f3350, %f3353, %p937;
	setp.eq.f32 	%p938, %f3352, 0f00000000;
	selp.f32 	%f3355, %f3354, %f3352, %p938;
	mov.b32 	%r1675, %f3355;
	shfl.sync.bfly.b32	%f3356, %f3355, 1, 31, -1;
	mov.b32 	%r1676, %f3356;
	setp.nan.f32 	%p939, %f3355, %f3356;
	max.f32 	%f3357, %f3355, %f3356;
	selp.f32 	%f3358, 0f7FC00000, %f3357, %p939;
	setp.eq.s32 	%p940, %r1675, 0;
	selp.f32 	%f3359, %f3355, %f3358, %p940;
	setp.eq.s32 	%p941, %r1676, 0;
	selp.f32 	%f3360, %f3356, %f3359, %p941;
	setp.eq.f32 	%p942, %f3358, 0f00000000;
	selp.f32 	%f3648, %f3360, %f3358, %p942;
	shfl.sync.bfly.b32	%f3361, %f3649, 16, 31, -1;
	mov.b32 	%r1677, %f3361;
	mov.b32 	%r1678, %f3649;
	setp.nan.f32 	%p943, %f3649, %f3361;
	max.f32 	%f3362, %f3649, %f3361;
	selp.f32 	%f3363, 0f7FC00000, %f3362, %p943;
	setp.eq.s32 	%p944, %r1678, 0;
	selp.f32 	%f3364, %f3649, %f3363, %p944;
	setp.eq.s32 	%p945, %r1677, 0;
	selp.f32 	%f3365, %f3361, %f3364, %p945;
	setp.eq.f32 	%p946, %f3363, 0f00000000;
	selp.f32 	%f3366, %f3365, %f3363, %p946;
	mov.b32 	%r1679, %f3366;
	shfl.sync.bfly.b32	%f3367, %f3366, 8, 31, -1;
	mov.b32 	%r1680, %f3367;
	setp.nan.f32 	%p947, %f3366, %f3367;
	max.f32 	%f3368, %f3366, %f3367;
	selp.f32 	%f3369, 0f7FC00000, %f3368, %p947;
	setp.eq.s32 	%p948, %r1679, 0;
	selp.f32 	%f3370, %f3366, %f3369, %p948;
	setp.eq.s32 	%p949, %r1680, 0;
	selp.f32 	%f3371, %f3367, %f3370, %p949;
	setp.eq.f32 	%p950, %f3369, 0f00000000;
	selp.f32 	%f3372, %f3371, %f3369, %p950;
	mov.b32 	%r1681, %f3372;
	shfl.sync.bfly.b32	%f3373, %f3372, 4, 31, -1;
	mov.b32 	%r1682, %f3373;
	setp.nan.f32 	%p951, %f3372, %f3373;
	max.f32 	%f3374, %f3372, %f3373;
	selp.f32 	%f3375, 0f7FC00000, %f3374, %p951;
	setp.eq.s32 	%p952, %r1681, 0;
	selp.f32 	%f3376, %f3372, %f3375, %p952;
	setp.eq.s32 	%p953, %r1682, 0;
	selp.f32 	%f3377, %f3373, %f3376, %p953;
	setp.eq.f32 	%p954, %f3375, 0f00000000;
	selp.f32 	%f3378, %f3377, %f3375, %p954;
	mov.b32 	%r1683, %f3378;
	shfl.sync.bfly.b32	%f3379, %f3378, 2, 31, -1;
	mov.b32 	%r1684, %f3379;
	setp.nan.f32 	%p955, %f3378, %f3379;
	max.f32 	%f3380, %f3378, %f3379;
	selp.f32 	%f3381, 0f7FC00000, %f3380, %p955;
	setp.eq.s32 	%p956, %r1683, 0;
	selp.f32 	%f3382, %f3378, %f3381, %p956;
	setp.eq.s32 	%p957, %r1684, 0;
	selp.f32 	%f3383, %f3379, %f3382, %p957;
	setp.eq.f32 	%p958, %f3381, 0f00000000;
	selp.f32 	%f3384, %f3383, %f3381, %p958;
	mov.b32 	%r1685, %f3384;
	shfl.sync.bfly.b32	%f3385, %f3384, 1, 31, -1;
	mov.b32 	%r1686, %f3385;
	setp.nan.f32 	%p959, %f3384, %f3385;
	max.f32 	%f3386, %f3384, %f3385;
	selp.f32 	%f3387, 0f7FC00000, %f3386, %p959;
	setp.eq.s32 	%p960, %r1685, 0;
	selp.f32 	%f3388, %f3384, %f3387, %p960;
	setp.eq.s32 	%p961, %r1686, 0;
	selp.f32 	%f3389, %f3385, %f3388, %p961;
	setp.eq.f32 	%p962, %f3387, 0f00000000;
	selp.f32 	%f3649, %f3389, %f3387, %p962;
	shfl.sync.bfly.b32	%f3390, %f3650, 16, 31, -1;
	mov.b32 	%r1687, %f3390;
	mov.b32 	%r1688, %f3650;
	setp.nan.f32 	%p963, %f3650, %f3390;
	max.f32 	%f3391, %f3650, %f3390;
	selp.f32 	%f3392, 0f7FC00000, %f3391, %p963;
	setp.eq.s32 	%p964, %r1688, 0;
	selp.f32 	%f3393, %f3650, %f3392, %p964;
	setp.eq.s32 	%p965, %r1687, 0;
	selp.f32 	%f3394, %f3390, %f3393, %p965;
	setp.eq.f32 	%p966, %f3392, 0f00000000;
	selp.f32 	%f3395, %f3394, %f3392, %p966;
	mov.b32 	%r1689, %f3395;
	shfl.sync.bfly.b32	%f3396, %f3395, 8, 31, -1;
	mov.b32 	%r1690, %f3396;
	setp.nan.f32 	%p967, %f3395, %f3396;
	max.f32 	%f3397, %f3395, %f3396;
	selp.f32 	%f3398, 0f7FC00000, %f3397, %p967;
	setp.eq.s32 	%p968, %r1689, 0;
	selp.f32 	%f3399, %f3395, %f3398, %p968;
	setp.eq.s32 	%p969, %r1690, 0;
	selp.f32 	%f3400, %f3396, %f3399, %p969;
	setp.eq.f32 	%p970, %f3398, 0f00000000;
	selp.f32 	%f3401, %f3400, %f3398, %p970;
	mov.b32 	%r1691, %f3401;
	shfl.sync.bfly.b32	%f3402, %f3401, 4, 31, -1;
	mov.b32 	%r1692, %f3402;
	setp.nan.f32 	%p971, %f3401, %f3402;
	max.f32 	%f3403, %f3401, %f3402;
	selp.f32 	%f3404, 0f7FC00000, %f3403, %p971;
	setp.eq.s32 	%p972, %r1691, 0;
	selp.f32 	%f3405, %f3401, %f3404, %p972;
	setp.eq.s32 	%p973, %r1692, 0;
	selp.f32 	%f3406, %f3402, %f3405, %p973;
	setp.eq.f32 	%p974, %f3404, 0f00000000;
	selp.f32 	%f3407, %f3406, %f3404, %p974;
	mov.b32 	%r1693, %f3407;
	shfl.sync.bfly.b32	%f3408, %f3407, 2, 31, -1;
	mov.b32 	%r1694, %f3408;
	setp.nan.f32 	%p975, %f3407, %f3408;
	max.f32 	%f3409, %f3407, %f3408;
	selp.f32 	%f3410, 0f7FC00000, %f3409, %p975;
	setp.eq.s32 	%p976, %r1693, 0;
	selp.f32 	%f3411, %f3407, %f3410, %p976;
	setp.eq.s32 	%p977, %r1694, 0;
	selp.f32 	%f3412, %f3408, %f3411, %p977;
	setp.eq.f32 	%p978, %f3410, 0f00000000;
	selp.f32 	%f3413, %f3412, %f3410, %p978;
	mov.b32 	%r1695, %f3413;
	shfl.sync.bfly.b32	%f3414, %f3413, 1, 31, -1;
	mov.b32 	%r1696, %f3414;
	setp.nan.f32 	%p979, %f3413, %f3414;
	max.f32 	%f3415, %f3413, %f3414;
	selp.f32 	%f3416, 0f7FC00000, %f3415, %p979;
	setp.eq.s32 	%p980, %r1695, 0;
	selp.f32 	%f3417, %f3413, %f3416, %p980;
	setp.eq.s32 	%p981, %r1696, 0;
	selp.f32 	%f3418, %f3414, %f3417, %p981;
	setp.eq.f32 	%p982, %f3416, 0f00000000;
	selp.f32 	%f3650, %f3418, %f3416, %p982;
	shfl.sync.bfly.b32	%f3419, %f3651, 16, 31, -1;
	mov.b32 	%r1697, %f3419;
	mov.b32 	%r1698, %f3651;
	setp.nan.f32 	%p983, %f3651, %f3419;
	max.f32 	%f3420, %f3651, %f3419;
	selp.f32 	%f3421, 0f7FC00000, %f3420, %p983;
	setp.eq.s32 	%p984, %r1698, 0;
	selp.f32 	%f3422, %f3651, %f3421, %p984;
	setp.eq.s32 	%p985, %r1697, 0;
	selp.f32 	%f3423, %f3419, %f3422, %p985;
	setp.eq.f32 	%p986, %f3421, 0f00000000;
	selp.f32 	%f3424, %f3423, %f3421, %p986;
	mov.b32 	%r1699, %f3424;
	shfl.sync.bfly.b32	%f3425, %f3424, 8, 31, -1;
	mov.b32 	%r1700, %f3425;
	setp.nan.f32 	%p987, %f3424, %f3425;
	max.f32 	%f3426, %f3424, %f3425;
	selp.f32 	%f3427, 0f7FC00000, %f3426, %p987;
	setp.eq.s32 	%p988, %r1699, 0;
	selp.f32 	%f3428, %f3424, %f3427, %p988;
	setp.eq.s32 	%p989, %r1700, 0;
	selp.f32 	%f3429, %f3425, %f3428, %p989;
	setp.eq.f32 	%p990, %f3427, 0f00000000;
	selp.f32 	%f3430, %f3429, %f3427, %p990;
	mov.b32 	%r1701, %f3430;
	shfl.sync.bfly.b32	%f3431, %f3430, 4, 31, -1;
	mov.b32 	%r1702, %f3431;
	setp.nan.f32 	%p991, %f3430, %f3431;
	max.f32 	%f3432, %f3430, %f3431;
	selp.f32 	%f3433, 0f7FC00000, %f3432, %p991;
	setp.eq.s32 	%p992, %r1701, 0;
	selp.f32 	%f3434, %f3430, %f3433, %p992;
	setp.eq.s32 	%p993, %r1702, 0;
	selp.f32 	%f3435, %f3431, %f3434, %p993;
	setp.eq.f32 	%p994, %f3433, 0f00000000;
	selp.f32 	%f3436, %f3435, %f3433, %p994;
	mov.b32 	%r1703, %f3436;
	shfl.sync.bfly.b32	%f3437, %f3436, 2, 31, -1;
	mov.b32 	%r1704, %f3437;
	setp.nan.f32 	%p995, %f3436, %f3437;
	max.f32 	%f3438, %f3436, %f3437;
	selp.f32 	%f3439, 0f7FC00000, %f3438, %p995;
	setp.eq.s32 	%p996, %r1703, 0;
	selp.f32 	%f3440, %f3436, %f3439, %p996;
	setp.eq.s32 	%p997, %r1704, 0;
	selp.f32 	%f3441, %f3437, %f3440, %p997;
	setp.eq.f32 	%p998, %f3439, 0f00000000;
	selp.f32 	%f3442, %f3441, %f3439, %p998;
	mov.b32 	%r1705, %f3442;
	shfl.sync.bfly.b32	%f3443, %f3442, 1, 31, -1;
	mov.b32 	%r1706, %f3443;
	setp.nan.f32 	%p999, %f3442, %f3443;
	max.f32 	%f3444, %f3442, %f3443;
	selp.f32 	%f3445, 0f7FC00000, %f3444, %p999;
	setp.eq.s32 	%p1000, %r1705, 0;
	selp.f32 	%f3446, %f3442, %f3445, %p1000;
	setp.eq.s32 	%p1001, %r1706, 0;
	selp.f32 	%f3447, %f3443, %f3446, %p1001;
	setp.eq.f32 	%p1002, %f3445, 0f00000000;
	selp.f32 	%f3651, %f3447, %f3445, %p1002;
	shfl.sync.bfly.b32	%f3448, %f3652, 16, 31, -1;
	mov.b32 	%r1707, %f3448;
	mov.b32 	%r1708, %f3652;
	setp.nan.f32 	%p1003, %f3652, %f3448;
	max.f32 	%f3449, %f3652, %f3448;
	selp.f32 	%f3450, 0f7FC00000, %f3449, %p1003;
	setp.eq.s32 	%p1004, %r1708, 0;
	selp.f32 	%f3451, %f3652, %f3450, %p1004;
	setp.eq.s32 	%p1005, %r1707, 0;
	selp.f32 	%f3452, %f3448, %f3451, %p1005;
	setp.eq.f32 	%p1006, %f3450, 0f00000000;
	selp.f32 	%f3453, %f3452, %f3450, %p1006;
	mov.b32 	%r1709, %f3453;
	shfl.sync.bfly.b32	%f3454, %f3453, 8, 31, -1;
	mov.b32 	%r1710, %f3454;
	setp.nan.f32 	%p1007, %f3453, %f3454;
	max.f32 	%f3455, %f3453, %f3454;
	selp.f32 	%f3456, 0f7FC00000, %f3455, %p1007;
	setp.eq.s32 	%p1008, %r1709, 0;
	selp.f32 	%f3457, %f3453, %f3456, %p1008;
	setp.eq.s32 	%p1009, %r1710, 0;
	selp.f32 	%f3458, %f3454, %f3457, %p1009;
	setp.eq.f32 	%p1010, %f3456, 0f00000000;
	selp.f32 	%f3459, %f3458, %f3456, %p1010;
	mov.b32 	%r1711, %f3459;
	shfl.sync.bfly.b32	%f3460, %f3459, 4, 31, -1;
	mov.b32 	%r1712, %f3460;
	setp.nan.f32 	%p1011, %f3459, %f3460;
	max.f32 	%f3461, %f3459, %f3460;
	selp.f32 	%f3462, 0f7FC00000, %f3461, %p1011;
	setp.eq.s32 	%p1012, %r1711, 0;
	selp.f32 	%f3463, %f3459, %f3462, %p1012;
	setp.eq.s32 	%p1013, %r1712, 0;
	selp.f32 	%f3464, %f3460, %f3463, %p1013;
	setp.eq.f32 	%p1014, %f3462, 0f00000000;
	selp.f32 	%f3465, %f3464, %f3462, %p1014;
	mov.b32 	%r1713, %f3465;
	shfl.sync.bfly.b32	%f3466, %f3465, 2, 31, -1;
	mov.b32 	%r1714, %f3466;
	setp.nan.f32 	%p1015, %f3465, %f3466;
	max.f32 	%f3467, %f3465, %f3466;
	selp.f32 	%f3468, 0f7FC00000, %f3467, %p1015;
	setp.eq.s32 	%p1016, %r1713, 0;
	selp.f32 	%f3469, %f3465, %f3468, %p1016;
	setp.eq.s32 	%p1017, %r1714, 0;
	selp.f32 	%f3470, %f3466, %f3469, %p1017;
	setp.eq.f32 	%p1018, %f3468, 0f00000000;
	selp.f32 	%f3471, %f3470, %f3468, %p1018;
	mov.b32 	%r1715, %f3471;
	shfl.sync.bfly.b32	%f3472, %f3471, 1, 31, -1;
	mov.b32 	%r1716, %f3472;
	setp.nan.f32 	%p1019, %f3471, %f3472;
	max.f32 	%f3473, %f3471, %f3472;
	selp.f32 	%f3474, 0f7FC00000, %f3473, %p1019;
	setp.eq.s32 	%p1020, %r1715, 0;
	selp.f32 	%f3475, %f3471, %f3474, %p1020;
	setp.eq.s32 	%p1021, %r1716, 0;
	selp.f32 	%f3476, %f3472, %f3475, %p1021;
	setp.eq.f32 	%p1022, %f3474, 0f00000000;
	selp.f32 	%f3652, %f3476, %f3474, %p1022;
	shfl.sync.bfly.b32	%f3477, %f3653, 16, 31, -1;
	mov.b32 	%r1717, %f3477;
	mov.b32 	%r1718, %f3653;
	setp.nan.f32 	%p1023, %f3653, %f3477;
	max.f32 	%f3478, %f3653, %f3477;
	selp.f32 	%f3479, 0f7FC00000, %f3478, %p1023;
	setp.eq.s32 	%p1024, %r1718, 0;
	selp.f32 	%f3480, %f3653, %f3479, %p1024;
	setp.eq.s32 	%p1025, %r1717, 0;
	selp.f32 	%f3481, %f3477, %f3480, %p1025;
	setp.eq.f32 	%p1026, %f3479, 0f00000000;
	selp.f32 	%f3482, %f3481, %f3479, %p1026;
	mov.b32 	%r1719, %f3482;
	shfl.sync.bfly.b32	%f3483, %f3482, 8, 31, -1;
	mov.b32 	%r1720, %f3483;
	setp.nan.f32 	%p1027, %f3482, %f3483;
	max.f32 	%f3484, %f3482, %f3483;
	selp.f32 	%f3485, 0f7FC00000, %f3484, %p1027;
	setp.eq.s32 	%p1028, %r1719, 0;
	selp.f32 	%f3486, %f3482, %f3485, %p1028;
	setp.eq.s32 	%p1029, %r1720, 0;
	selp.f32 	%f3487, %f3483, %f3486, %p1029;
	setp.eq.f32 	%p1030, %f3485, 0f00000000;
	selp.f32 	%f3488, %f3487, %f3485, %p1030;
	mov.b32 	%r1721, %f3488;
	shfl.sync.bfly.b32	%f3489, %f3488, 4, 31, -1;
	mov.b32 	%r1722, %f3489;
	setp.nan.f32 	%p1031, %f3488, %f3489;
	max.f32 	%f3490, %f3488, %f3489;
	selp.f32 	%f3491, 0f7FC00000, %f3490, %p1031;
	setp.eq.s32 	%p1032, %r1721, 0;
	selp.f32 	%f3492, %f3488, %f3491, %p1032;
	setp.eq.s32 	%p1033, %r1722, 0;
	selp.f32 	%f3493, %f3489, %f3492, %p1033;
	setp.eq.f32 	%p1034, %f3491, 0f00000000;
	selp.f32 	%f3494, %f3493, %f3491, %p1034;
	mov.b32 	%r1723, %f3494;
	shfl.sync.bfly.b32	%f3495, %f3494, 2, 31, -1;
	mov.b32 	%r1724, %f3495;
	setp.nan.f32 	%p1035, %f3494, %f3495;
	max.f32 	%f3496, %f3494, %f3495;
	selp.f32 	%f3497, 0f7FC00000, %f3496, %p1035;
	setp.eq.s32 	%p1036, %r1723, 0;
	selp.f32 	%f3498, %f3494, %f3497, %p1036;
	setp.eq.s32 	%p1037, %r1724, 0;
	selp.f32 	%f3499, %f3495, %f3498, %p1037;
	setp.eq.f32 	%p1038, %f3497, 0f00000000;
	selp.f32 	%f3500, %f3499, %f3497, %p1038;
	mov.b32 	%r1725, %f3500;
	shfl.sync.bfly.b32	%f3501, %f3500, 1, 31, -1;
	mov.b32 	%r1726, %f3501;
	setp.nan.f32 	%p1039, %f3500, %f3501;
	max.f32 	%f3502, %f3500, %f3501;
	selp.f32 	%f3503, 0f7FC00000, %f3502, %p1039;
	setp.eq.s32 	%p1040, %r1725, 0;
	selp.f32 	%f3504, %f3500, %f3503, %p1040;
	setp.eq.s32 	%p1041, %r1726, 0;
	selp.f32 	%f3505, %f3501, %f3504, %p1041;
	setp.eq.f32 	%p1042, %f3503, 0f00000000;
	selp.f32 	%f3653, %f3505, %f3503, %p1042;
	shfl.sync.bfly.b32	%f3506, %f8, 16, 31, -1;
	mov.b32 	%r1727, %f3506;
	mov.b32 	%r1728, %f8;
	setp.nan.f32 	%p1043, %f8, %f3506;
	max.f32 	%f3507, %f8, %f3506;
	selp.f32 	%f3508, 0f7FC00000, %f3507, %p1043;
	setp.eq.s32 	%p1044, %r1728, 0;
	selp.f32 	%f3509, %f8, %f3508, %p1044;
	setp.eq.s32 	%p1045, %r1727, 0;
	selp.f32 	%f3510, %f3506, %f3509, %p1045;
	setp.eq.f32 	%p1046, %f3508, 0f00000000;
	selp.f32 	%f3511, %f3510, %f3508, %p1046;
	mov.b32 	%r1729, %f3511;
	shfl.sync.bfly.b32	%f3512, %f3511, 8, 31, -1;
	mov.b32 	%r1730, %f3512;
	setp.nan.f32 	%p1047, %f3511, %f3512;
	max.f32 	%f3513, %f3511, %f3512;
	selp.f32 	%f3514, 0f7FC00000, %f3513, %p1047;
	setp.eq.s32 	%p1048, %r1729, 0;
	selp.f32 	%f3515, %f3511, %f3514, %p1048;
	setp.eq.s32 	%p1049, %r1730, 0;
	selp.f32 	%f3516, %f3512, %f3515, %p1049;
	setp.eq.f32 	%p1050, %f3514, 0f00000000;
	selp.f32 	%f3517, %f3516, %f3514, %p1050;
	mov.b32 	%r1731, %f3517;
	shfl.sync.bfly.b32	%f3518, %f3517, 4, 31, -1;
	mov.b32 	%r1732, %f3518;
	setp.nan.f32 	%p1051, %f3517, %f3518;
	max.f32 	%f3519, %f3517, %f3518;
	selp.f32 	%f3520, 0f7FC00000, %f3519, %p1051;
	setp.eq.s32 	%p1052, %r1731, 0;
	selp.f32 	%f3521, %f3517, %f3520, %p1052;
	setp.eq.s32 	%p1053, %r1732, 0;
	selp.f32 	%f3522, %f3518, %f3521, %p1053;
	setp.eq.f32 	%p1054, %f3520, 0f00000000;
	selp.f32 	%f3523, %f3522, %f3520, %p1054;
	mov.b32 	%r1733, %f3523;
	shfl.sync.bfly.b32	%f3524, %f3523, 2, 31, -1;
	mov.b32 	%r1734, %f3524;
	setp.nan.f32 	%p1055, %f3523, %f3524;
	max.f32 	%f3525, %f3523, %f3524;
	selp.f32 	%f3526, 0f7FC00000, %f3525, %p1055;
	setp.eq.s32 	%p1056, %r1733, 0;
	selp.f32 	%f3527, %f3523, %f3526, %p1056;
	setp.eq.s32 	%p1057, %r1734, 0;
	selp.f32 	%f3528, %f3524, %f3527, %p1057;
	setp.eq.f32 	%p1058, %f3526, 0f00000000;
	selp.f32 	%f3529, %f3528, %f3526, %p1058;
	mov.b32 	%r1735, %f3529;
	shfl.sync.bfly.b32	%f3530, %f3529, 1, 31, -1;
	mov.b32 	%r1736, %f3530;
	setp.nan.f32 	%p1059, %f3529, %f3530;
	max.f32 	%f3531, %f3529, %f3530;
	selp.f32 	%f3532, 0f7FC00000, %f3531, %p1059;
	setp.eq.s32 	%p1060, %r1735, 0;
	selp.f32 	%f3533, %f3529, %f3532, %p1060;
	setp.eq.s32 	%p1061, %r1736, 0;
	selp.f32 	%f3534, %f3530, %f3533, %p1061;
	setp.eq.f32 	%p1062, %f3532, 0f00000000;
	selp.f32 	%f3654, %f3534, %f3532, %p1062;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_62:                             // %WarpAllReduceMin
                                        //   in Loop: Header=BB0_1 Depth=1
	shfl.sync.bfly.b32	%f3071, %f3647, 16, 31, -1;
	mov.b32 	%r1577, %f3071;
	mov.b32 	%r1578, %f3647;
	setp.nan.f32 	%p743, %f3647, %f3071;
	min.f32 	%f3072, %f3647, %f3071;
	selp.f32 	%f3073, 0f7FC00000, %f3072, %p743;
	setp.eq.s32 	%p744, %r1578, -2147483648;
	selp.f32 	%f3074, %f3647, %f3073, %p744;
	setp.eq.s32 	%p745, %r1577, -2147483648;
	selp.f32 	%f3075, %f3071, %f3074, %p745;
	setp.eq.f32 	%p746, %f3073, 0f00000000;
	selp.f32 	%f3076, %f3075, %f3073, %p746;
	mov.b32 	%r1579, %f3076;
	shfl.sync.bfly.b32	%f3077, %f3076, 8, 31, -1;
	mov.b32 	%r1580, %f3077;
	setp.nan.f32 	%p747, %f3076, %f3077;
	min.f32 	%f3078, %f3076, %f3077;
	selp.f32 	%f3079, 0f7FC00000, %f3078, %p747;
	setp.eq.s32 	%p748, %r1579, -2147483648;
	selp.f32 	%f3080, %f3076, %f3079, %p748;
	setp.eq.s32 	%p749, %r1580, -2147483648;
	selp.f32 	%f3081, %f3077, %f3080, %p749;
	setp.eq.f32 	%p750, %f3079, 0f00000000;
	selp.f32 	%f3082, %f3081, %f3079, %p750;
	mov.b32 	%r1581, %f3082;
	shfl.sync.bfly.b32	%f3083, %f3082, 4, 31, -1;
	mov.b32 	%r1582, %f3083;
	setp.nan.f32 	%p751, %f3082, %f3083;
	min.f32 	%f3084, %f3082, %f3083;
	selp.f32 	%f3085, 0f7FC00000, %f3084, %p751;
	setp.eq.s32 	%p752, %r1581, -2147483648;
	selp.f32 	%f3086, %f3082, %f3085, %p752;
	setp.eq.s32 	%p753, %r1582, -2147483648;
	selp.f32 	%f3087, %f3083, %f3086, %p753;
	setp.eq.f32 	%p754, %f3085, 0f00000000;
	selp.f32 	%f3088, %f3087, %f3085, %p754;
	mov.b32 	%r1583, %f3088;
	shfl.sync.bfly.b32	%f3089, %f3088, 2, 31, -1;
	mov.b32 	%r1584, %f3089;
	setp.nan.f32 	%p755, %f3088, %f3089;
	min.f32 	%f3090, %f3088, %f3089;
	selp.f32 	%f3091, 0f7FC00000, %f3090, %p755;
	setp.eq.s32 	%p756, %r1583, -2147483648;
	selp.f32 	%f3092, %f3088, %f3091, %p756;
	setp.eq.s32 	%p757, %r1584, -2147483648;
	selp.f32 	%f3093, %f3089, %f3092, %p757;
	setp.eq.f32 	%p758, %f3091, 0f00000000;
	selp.f32 	%f3094, %f3093, %f3091, %p758;
	mov.b32 	%r1585, %f3094;
	shfl.sync.bfly.b32	%f3095, %f3094, 1, 31, -1;
	mov.b32 	%r1586, %f3095;
	setp.nan.f32 	%p759, %f3094, %f3095;
	min.f32 	%f3096, %f3094, %f3095;
	selp.f32 	%f3097, 0f7FC00000, %f3096, %p759;
	setp.eq.s32 	%p760, %r1585, -2147483648;
	selp.f32 	%f3098, %f3094, %f3097, %p760;
	setp.eq.s32 	%p761, %r1586, -2147483648;
	selp.f32 	%f3099, %f3095, %f3098, %p761;
	setp.eq.f32 	%p762, %f3097, 0f00000000;
	selp.f32 	%f3647, %f3099, %f3097, %p762;
	shfl.sync.bfly.b32	%f3100, %f3648, 16, 31, -1;
	mov.b32 	%r1587, %f3100;
	mov.b32 	%r1588, %f3648;
	setp.nan.f32 	%p763, %f3648, %f3100;
	min.f32 	%f3101, %f3648, %f3100;
	selp.f32 	%f3102, 0f7FC00000, %f3101, %p763;
	setp.eq.s32 	%p764, %r1588, -2147483648;
	selp.f32 	%f3103, %f3648, %f3102, %p764;
	setp.eq.s32 	%p765, %r1587, -2147483648;
	selp.f32 	%f3104, %f3100, %f3103, %p765;
	setp.eq.f32 	%p766, %f3102, 0f00000000;
	selp.f32 	%f3105, %f3104, %f3102, %p766;
	mov.b32 	%r1589, %f3105;
	shfl.sync.bfly.b32	%f3106, %f3105, 8, 31, -1;
	mov.b32 	%r1590, %f3106;
	setp.nan.f32 	%p767, %f3105, %f3106;
	min.f32 	%f3107, %f3105, %f3106;
	selp.f32 	%f3108, 0f7FC00000, %f3107, %p767;
	setp.eq.s32 	%p768, %r1589, -2147483648;
	selp.f32 	%f3109, %f3105, %f3108, %p768;
	setp.eq.s32 	%p769, %r1590, -2147483648;
	selp.f32 	%f3110, %f3106, %f3109, %p769;
	setp.eq.f32 	%p770, %f3108, 0f00000000;
	selp.f32 	%f3111, %f3110, %f3108, %p770;
	mov.b32 	%r1591, %f3111;
	shfl.sync.bfly.b32	%f3112, %f3111, 4, 31, -1;
	mov.b32 	%r1592, %f3112;
	setp.nan.f32 	%p771, %f3111, %f3112;
	min.f32 	%f3113, %f3111, %f3112;
	selp.f32 	%f3114, 0f7FC00000, %f3113, %p771;
	setp.eq.s32 	%p772, %r1591, -2147483648;
	selp.f32 	%f3115, %f3111, %f3114, %p772;
	setp.eq.s32 	%p773, %r1592, -2147483648;
	selp.f32 	%f3116, %f3112, %f3115, %p773;
	setp.eq.f32 	%p774, %f3114, 0f00000000;
	selp.f32 	%f3117, %f3116, %f3114, %p774;
	mov.b32 	%r1593, %f3117;
	shfl.sync.bfly.b32	%f3118, %f3117, 2, 31, -1;
	mov.b32 	%r1594, %f3118;
	setp.nan.f32 	%p775, %f3117, %f3118;
	min.f32 	%f3119, %f3117, %f3118;
	selp.f32 	%f3120, 0f7FC00000, %f3119, %p775;
	setp.eq.s32 	%p776, %r1593, -2147483648;
	selp.f32 	%f3121, %f3117, %f3120, %p776;
	setp.eq.s32 	%p777, %r1594, -2147483648;
	selp.f32 	%f3122, %f3118, %f3121, %p777;
	setp.eq.f32 	%p778, %f3120, 0f00000000;
	selp.f32 	%f3123, %f3122, %f3120, %p778;
	mov.b32 	%r1595, %f3123;
	shfl.sync.bfly.b32	%f3124, %f3123, 1, 31, -1;
	mov.b32 	%r1596, %f3124;
	setp.nan.f32 	%p779, %f3123, %f3124;
	min.f32 	%f3125, %f3123, %f3124;
	selp.f32 	%f3126, 0f7FC00000, %f3125, %p779;
	setp.eq.s32 	%p780, %r1595, -2147483648;
	selp.f32 	%f3127, %f3123, %f3126, %p780;
	setp.eq.s32 	%p781, %r1596, -2147483648;
	selp.f32 	%f3128, %f3124, %f3127, %p781;
	setp.eq.f32 	%p782, %f3126, 0f00000000;
	selp.f32 	%f3648, %f3128, %f3126, %p782;
	shfl.sync.bfly.b32	%f3129, %f3649, 16, 31, -1;
	mov.b32 	%r1597, %f3129;
	mov.b32 	%r1598, %f3649;
	setp.nan.f32 	%p783, %f3649, %f3129;
	min.f32 	%f3130, %f3649, %f3129;
	selp.f32 	%f3131, 0f7FC00000, %f3130, %p783;
	setp.eq.s32 	%p784, %r1598, -2147483648;
	selp.f32 	%f3132, %f3649, %f3131, %p784;
	setp.eq.s32 	%p785, %r1597, -2147483648;
	selp.f32 	%f3133, %f3129, %f3132, %p785;
	setp.eq.f32 	%p786, %f3131, 0f00000000;
	selp.f32 	%f3134, %f3133, %f3131, %p786;
	mov.b32 	%r1599, %f3134;
	shfl.sync.bfly.b32	%f3135, %f3134, 8, 31, -1;
	mov.b32 	%r1600, %f3135;
	setp.nan.f32 	%p787, %f3134, %f3135;
	min.f32 	%f3136, %f3134, %f3135;
	selp.f32 	%f3137, 0f7FC00000, %f3136, %p787;
	setp.eq.s32 	%p788, %r1599, -2147483648;
	selp.f32 	%f3138, %f3134, %f3137, %p788;
	setp.eq.s32 	%p789, %r1600, -2147483648;
	selp.f32 	%f3139, %f3135, %f3138, %p789;
	setp.eq.f32 	%p790, %f3137, 0f00000000;
	selp.f32 	%f3140, %f3139, %f3137, %p790;
	mov.b32 	%r1601, %f3140;
	shfl.sync.bfly.b32	%f3141, %f3140, 4, 31, -1;
	mov.b32 	%r1602, %f3141;
	setp.nan.f32 	%p791, %f3140, %f3141;
	min.f32 	%f3142, %f3140, %f3141;
	selp.f32 	%f3143, 0f7FC00000, %f3142, %p791;
	setp.eq.s32 	%p792, %r1601, -2147483648;
	selp.f32 	%f3144, %f3140, %f3143, %p792;
	setp.eq.s32 	%p793, %r1602, -2147483648;
	selp.f32 	%f3145, %f3141, %f3144, %p793;
	setp.eq.f32 	%p794, %f3143, 0f00000000;
	selp.f32 	%f3146, %f3145, %f3143, %p794;
	mov.b32 	%r1603, %f3146;
	shfl.sync.bfly.b32	%f3147, %f3146, 2, 31, -1;
	mov.b32 	%r1604, %f3147;
	setp.nan.f32 	%p795, %f3146, %f3147;
	min.f32 	%f3148, %f3146, %f3147;
	selp.f32 	%f3149, 0f7FC00000, %f3148, %p795;
	setp.eq.s32 	%p796, %r1603, -2147483648;
	selp.f32 	%f3150, %f3146, %f3149, %p796;
	setp.eq.s32 	%p797, %r1604, -2147483648;
	selp.f32 	%f3151, %f3147, %f3150, %p797;
	setp.eq.f32 	%p798, %f3149, 0f00000000;
	selp.f32 	%f3152, %f3151, %f3149, %p798;
	mov.b32 	%r1605, %f3152;
	shfl.sync.bfly.b32	%f3153, %f3152, 1, 31, -1;
	mov.b32 	%r1606, %f3153;
	setp.nan.f32 	%p799, %f3152, %f3153;
	min.f32 	%f3154, %f3152, %f3153;
	selp.f32 	%f3155, 0f7FC00000, %f3154, %p799;
	setp.eq.s32 	%p800, %r1605, -2147483648;
	selp.f32 	%f3156, %f3152, %f3155, %p800;
	setp.eq.s32 	%p801, %r1606, -2147483648;
	selp.f32 	%f3157, %f3153, %f3156, %p801;
	setp.eq.f32 	%p802, %f3155, 0f00000000;
	selp.f32 	%f3649, %f3157, %f3155, %p802;
	shfl.sync.bfly.b32	%f3158, %f3650, 16, 31, -1;
	mov.b32 	%r1607, %f3158;
	mov.b32 	%r1608, %f3650;
	setp.nan.f32 	%p803, %f3650, %f3158;
	min.f32 	%f3159, %f3650, %f3158;
	selp.f32 	%f3160, 0f7FC00000, %f3159, %p803;
	setp.eq.s32 	%p804, %r1608, -2147483648;
	selp.f32 	%f3161, %f3650, %f3160, %p804;
	setp.eq.s32 	%p805, %r1607, -2147483648;
	selp.f32 	%f3162, %f3158, %f3161, %p805;
	setp.eq.f32 	%p806, %f3160, 0f00000000;
	selp.f32 	%f3163, %f3162, %f3160, %p806;
	mov.b32 	%r1609, %f3163;
	shfl.sync.bfly.b32	%f3164, %f3163, 8, 31, -1;
	mov.b32 	%r1610, %f3164;
	setp.nan.f32 	%p807, %f3163, %f3164;
	min.f32 	%f3165, %f3163, %f3164;
	selp.f32 	%f3166, 0f7FC00000, %f3165, %p807;
	setp.eq.s32 	%p808, %r1609, -2147483648;
	selp.f32 	%f3167, %f3163, %f3166, %p808;
	setp.eq.s32 	%p809, %r1610, -2147483648;
	selp.f32 	%f3168, %f3164, %f3167, %p809;
	setp.eq.f32 	%p810, %f3166, 0f00000000;
	selp.f32 	%f3169, %f3168, %f3166, %p810;
	mov.b32 	%r1611, %f3169;
	shfl.sync.bfly.b32	%f3170, %f3169, 4, 31, -1;
	mov.b32 	%r1612, %f3170;
	setp.nan.f32 	%p811, %f3169, %f3170;
	min.f32 	%f3171, %f3169, %f3170;
	selp.f32 	%f3172, 0f7FC00000, %f3171, %p811;
	setp.eq.s32 	%p812, %r1611, -2147483648;
	selp.f32 	%f3173, %f3169, %f3172, %p812;
	setp.eq.s32 	%p813, %r1612, -2147483648;
	selp.f32 	%f3174, %f3170, %f3173, %p813;
	setp.eq.f32 	%p814, %f3172, 0f00000000;
	selp.f32 	%f3175, %f3174, %f3172, %p814;
	mov.b32 	%r1613, %f3175;
	shfl.sync.bfly.b32	%f3176, %f3175, 2, 31, -1;
	mov.b32 	%r1614, %f3176;
	setp.nan.f32 	%p815, %f3175, %f3176;
	min.f32 	%f3177, %f3175, %f3176;
	selp.f32 	%f3178, 0f7FC00000, %f3177, %p815;
	setp.eq.s32 	%p816, %r1613, -2147483648;
	selp.f32 	%f3179, %f3175, %f3178, %p816;
	setp.eq.s32 	%p817, %r1614, -2147483648;
	selp.f32 	%f3180, %f3176, %f3179, %p817;
	setp.eq.f32 	%p818, %f3178, 0f00000000;
	selp.f32 	%f3181, %f3180, %f3178, %p818;
	mov.b32 	%r1615, %f3181;
	shfl.sync.bfly.b32	%f3182, %f3181, 1, 31, -1;
	mov.b32 	%r1616, %f3182;
	setp.nan.f32 	%p819, %f3181, %f3182;
	min.f32 	%f3183, %f3181, %f3182;
	selp.f32 	%f3184, 0f7FC00000, %f3183, %p819;
	setp.eq.s32 	%p820, %r1615, -2147483648;
	selp.f32 	%f3185, %f3181, %f3184, %p820;
	setp.eq.s32 	%p821, %r1616, -2147483648;
	selp.f32 	%f3186, %f3182, %f3185, %p821;
	setp.eq.f32 	%p822, %f3184, 0f00000000;
	selp.f32 	%f3650, %f3186, %f3184, %p822;
	shfl.sync.bfly.b32	%f3187, %f3651, 16, 31, -1;
	mov.b32 	%r1617, %f3187;
	mov.b32 	%r1618, %f3651;
	setp.nan.f32 	%p823, %f3651, %f3187;
	min.f32 	%f3188, %f3651, %f3187;
	selp.f32 	%f3189, 0f7FC00000, %f3188, %p823;
	setp.eq.s32 	%p824, %r1618, -2147483648;
	selp.f32 	%f3190, %f3651, %f3189, %p824;
	setp.eq.s32 	%p825, %r1617, -2147483648;
	selp.f32 	%f3191, %f3187, %f3190, %p825;
	setp.eq.f32 	%p826, %f3189, 0f00000000;
	selp.f32 	%f3192, %f3191, %f3189, %p826;
	mov.b32 	%r1619, %f3192;
	shfl.sync.bfly.b32	%f3193, %f3192, 8, 31, -1;
	mov.b32 	%r1620, %f3193;
	setp.nan.f32 	%p827, %f3192, %f3193;
	min.f32 	%f3194, %f3192, %f3193;
	selp.f32 	%f3195, 0f7FC00000, %f3194, %p827;
	setp.eq.s32 	%p828, %r1619, -2147483648;
	selp.f32 	%f3196, %f3192, %f3195, %p828;
	setp.eq.s32 	%p829, %r1620, -2147483648;
	selp.f32 	%f3197, %f3193, %f3196, %p829;
	setp.eq.f32 	%p830, %f3195, 0f00000000;
	selp.f32 	%f3198, %f3197, %f3195, %p830;
	mov.b32 	%r1621, %f3198;
	shfl.sync.bfly.b32	%f3199, %f3198, 4, 31, -1;
	mov.b32 	%r1622, %f3199;
	setp.nan.f32 	%p831, %f3198, %f3199;
	min.f32 	%f3200, %f3198, %f3199;
	selp.f32 	%f3201, 0f7FC00000, %f3200, %p831;
	setp.eq.s32 	%p832, %r1621, -2147483648;
	selp.f32 	%f3202, %f3198, %f3201, %p832;
	setp.eq.s32 	%p833, %r1622, -2147483648;
	selp.f32 	%f3203, %f3199, %f3202, %p833;
	setp.eq.f32 	%p834, %f3201, 0f00000000;
	selp.f32 	%f3204, %f3203, %f3201, %p834;
	mov.b32 	%r1623, %f3204;
	shfl.sync.bfly.b32	%f3205, %f3204, 2, 31, -1;
	mov.b32 	%r1624, %f3205;
	setp.nan.f32 	%p835, %f3204, %f3205;
	min.f32 	%f3206, %f3204, %f3205;
	selp.f32 	%f3207, 0f7FC00000, %f3206, %p835;
	setp.eq.s32 	%p836, %r1623, -2147483648;
	selp.f32 	%f3208, %f3204, %f3207, %p836;
	setp.eq.s32 	%p837, %r1624, -2147483648;
	selp.f32 	%f3209, %f3205, %f3208, %p837;
	setp.eq.f32 	%p838, %f3207, 0f00000000;
	selp.f32 	%f3210, %f3209, %f3207, %p838;
	mov.b32 	%r1625, %f3210;
	shfl.sync.bfly.b32	%f3211, %f3210, 1, 31, -1;
	mov.b32 	%r1626, %f3211;
	setp.nan.f32 	%p839, %f3210, %f3211;
	min.f32 	%f3212, %f3210, %f3211;
	selp.f32 	%f3213, 0f7FC00000, %f3212, %p839;
	setp.eq.s32 	%p840, %r1625, -2147483648;
	selp.f32 	%f3214, %f3210, %f3213, %p840;
	setp.eq.s32 	%p841, %r1626, -2147483648;
	selp.f32 	%f3215, %f3211, %f3214, %p841;
	setp.eq.f32 	%p842, %f3213, 0f00000000;
	selp.f32 	%f3651, %f3215, %f3213, %p842;
	shfl.sync.bfly.b32	%f3216, %f3652, 16, 31, -1;
	mov.b32 	%r1627, %f3216;
	mov.b32 	%r1628, %f3652;
	setp.nan.f32 	%p843, %f3652, %f3216;
	min.f32 	%f3217, %f3652, %f3216;
	selp.f32 	%f3218, 0f7FC00000, %f3217, %p843;
	setp.eq.s32 	%p844, %r1628, -2147483648;
	selp.f32 	%f3219, %f3652, %f3218, %p844;
	setp.eq.s32 	%p845, %r1627, -2147483648;
	selp.f32 	%f3220, %f3216, %f3219, %p845;
	setp.eq.f32 	%p846, %f3218, 0f00000000;
	selp.f32 	%f3221, %f3220, %f3218, %p846;
	mov.b32 	%r1629, %f3221;
	shfl.sync.bfly.b32	%f3222, %f3221, 8, 31, -1;
	mov.b32 	%r1630, %f3222;
	setp.nan.f32 	%p847, %f3221, %f3222;
	min.f32 	%f3223, %f3221, %f3222;
	selp.f32 	%f3224, 0f7FC00000, %f3223, %p847;
	setp.eq.s32 	%p848, %r1629, -2147483648;
	selp.f32 	%f3225, %f3221, %f3224, %p848;
	setp.eq.s32 	%p849, %r1630, -2147483648;
	selp.f32 	%f3226, %f3222, %f3225, %p849;
	setp.eq.f32 	%p850, %f3224, 0f00000000;
	selp.f32 	%f3227, %f3226, %f3224, %p850;
	mov.b32 	%r1631, %f3227;
	shfl.sync.bfly.b32	%f3228, %f3227, 4, 31, -1;
	mov.b32 	%r1632, %f3228;
	setp.nan.f32 	%p851, %f3227, %f3228;
	min.f32 	%f3229, %f3227, %f3228;
	selp.f32 	%f3230, 0f7FC00000, %f3229, %p851;
	setp.eq.s32 	%p852, %r1631, -2147483648;
	selp.f32 	%f3231, %f3227, %f3230, %p852;
	setp.eq.s32 	%p853, %r1632, -2147483648;
	selp.f32 	%f3232, %f3228, %f3231, %p853;
	setp.eq.f32 	%p854, %f3230, 0f00000000;
	selp.f32 	%f3233, %f3232, %f3230, %p854;
	mov.b32 	%r1633, %f3233;
	shfl.sync.bfly.b32	%f3234, %f3233, 2, 31, -1;
	mov.b32 	%r1634, %f3234;
	setp.nan.f32 	%p855, %f3233, %f3234;
	min.f32 	%f3235, %f3233, %f3234;
	selp.f32 	%f3236, 0f7FC00000, %f3235, %p855;
	setp.eq.s32 	%p856, %r1633, -2147483648;
	selp.f32 	%f3237, %f3233, %f3236, %p856;
	setp.eq.s32 	%p857, %r1634, -2147483648;
	selp.f32 	%f3238, %f3234, %f3237, %p857;
	setp.eq.f32 	%p858, %f3236, 0f00000000;
	selp.f32 	%f3239, %f3238, %f3236, %p858;
	mov.b32 	%r1635, %f3239;
	shfl.sync.bfly.b32	%f3240, %f3239, 1, 31, -1;
	mov.b32 	%r1636, %f3240;
	setp.nan.f32 	%p859, %f3239, %f3240;
	min.f32 	%f3241, %f3239, %f3240;
	selp.f32 	%f3242, 0f7FC00000, %f3241, %p859;
	setp.eq.s32 	%p860, %r1635, -2147483648;
	selp.f32 	%f3243, %f3239, %f3242, %p860;
	setp.eq.s32 	%p861, %r1636, -2147483648;
	selp.f32 	%f3244, %f3240, %f3243, %p861;
	setp.eq.f32 	%p862, %f3242, 0f00000000;
	selp.f32 	%f3652, %f3244, %f3242, %p862;
	shfl.sync.bfly.b32	%f3245, %f3653, 16, 31, -1;
	mov.b32 	%r1637, %f3245;
	mov.b32 	%r1638, %f3653;
	setp.nan.f32 	%p863, %f3653, %f3245;
	min.f32 	%f3246, %f3653, %f3245;
	selp.f32 	%f3247, 0f7FC00000, %f3246, %p863;
	setp.eq.s32 	%p864, %r1638, -2147483648;
	selp.f32 	%f3248, %f3653, %f3247, %p864;
	setp.eq.s32 	%p865, %r1637, -2147483648;
	selp.f32 	%f3249, %f3245, %f3248, %p865;
	setp.eq.f32 	%p866, %f3247, 0f00000000;
	selp.f32 	%f3250, %f3249, %f3247, %p866;
	mov.b32 	%r1639, %f3250;
	shfl.sync.bfly.b32	%f3251, %f3250, 8, 31, -1;
	mov.b32 	%r1640, %f3251;
	setp.nan.f32 	%p867, %f3250, %f3251;
	min.f32 	%f3252, %f3250, %f3251;
	selp.f32 	%f3253, 0f7FC00000, %f3252, %p867;
	setp.eq.s32 	%p868, %r1639, -2147483648;
	selp.f32 	%f3254, %f3250, %f3253, %p868;
	setp.eq.s32 	%p869, %r1640, -2147483648;
	selp.f32 	%f3255, %f3251, %f3254, %p869;
	setp.eq.f32 	%p870, %f3253, 0f00000000;
	selp.f32 	%f3256, %f3255, %f3253, %p870;
	mov.b32 	%r1641, %f3256;
	shfl.sync.bfly.b32	%f3257, %f3256, 4, 31, -1;
	mov.b32 	%r1642, %f3257;
	setp.nan.f32 	%p871, %f3256, %f3257;
	min.f32 	%f3258, %f3256, %f3257;
	selp.f32 	%f3259, 0f7FC00000, %f3258, %p871;
	setp.eq.s32 	%p872, %r1641, -2147483648;
	selp.f32 	%f3260, %f3256, %f3259, %p872;
	setp.eq.s32 	%p873, %r1642, -2147483648;
	selp.f32 	%f3261, %f3257, %f3260, %p873;
	setp.eq.f32 	%p874, %f3259, 0f00000000;
	selp.f32 	%f3262, %f3261, %f3259, %p874;
	mov.b32 	%r1643, %f3262;
	shfl.sync.bfly.b32	%f3263, %f3262, 2, 31, -1;
	mov.b32 	%r1644, %f3263;
	setp.nan.f32 	%p875, %f3262, %f3263;
	min.f32 	%f3264, %f3262, %f3263;
	selp.f32 	%f3265, 0f7FC00000, %f3264, %p875;
	setp.eq.s32 	%p876, %r1643, -2147483648;
	selp.f32 	%f3266, %f3262, %f3265, %p876;
	setp.eq.s32 	%p877, %r1644, -2147483648;
	selp.f32 	%f3267, %f3263, %f3266, %p877;
	setp.eq.f32 	%p878, %f3265, 0f00000000;
	selp.f32 	%f3268, %f3267, %f3265, %p878;
	mov.b32 	%r1645, %f3268;
	shfl.sync.bfly.b32	%f3269, %f3268, 1, 31, -1;
	mov.b32 	%r1646, %f3269;
	setp.nan.f32 	%p879, %f3268, %f3269;
	min.f32 	%f3270, %f3268, %f3269;
	selp.f32 	%f3271, 0f7FC00000, %f3270, %p879;
	setp.eq.s32 	%p880, %r1645, -2147483648;
	selp.f32 	%f3272, %f3268, %f3271, %p880;
	setp.eq.s32 	%p881, %r1646, -2147483648;
	selp.f32 	%f3273, %f3269, %f3272, %p881;
	setp.eq.f32 	%p882, %f3271, 0f00000000;
	selp.f32 	%f3653, %f3273, %f3271, %p882;
	shfl.sync.bfly.b32	%f3274, %f8, 16, 31, -1;
	mov.b32 	%r1647, %f3274;
	mov.b32 	%r1648, %f8;
	setp.nan.f32 	%p883, %f8, %f3274;
	min.f32 	%f3275, %f8, %f3274;
	selp.f32 	%f3276, 0f7FC00000, %f3275, %p883;
	setp.eq.s32 	%p884, %r1648, -2147483648;
	selp.f32 	%f3277, %f8, %f3276, %p884;
	setp.eq.s32 	%p885, %r1647, -2147483648;
	selp.f32 	%f3278, %f3274, %f3277, %p885;
	setp.eq.f32 	%p886, %f3276, 0f00000000;
	selp.f32 	%f3279, %f3278, %f3276, %p886;
	mov.b32 	%r1649, %f3279;
	shfl.sync.bfly.b32	%f3280, %f3279, 8, 31, -1;
	mov.b32 	%r1650, %f3280;
	setp.nan.f32 	%p887, %f3279, %f3280;
	min.f32 	%f3281, %f3279, %f3280;
	selp.f32 	%f3282, 0f7FC00000, %f3281, %p887;
	setp.eq.s32 	%p888, %r1649, -2147483648;
	selp.f32 	%f3283, %f3279, %f3282, %p888;
	setp.eq.s32 	%p889, %r1650, -2147483648;
	selp.f32 	%f3284, %f3280, %f3283, %p889;
	setp.eq.f32 	%p890, %f3282, 0f00000000;
	selp.f32 	%f3285, %f3284, %f3282, %p890;
	mov.b32 	%r1651, %f3285;
	shfl.sync.bfly.b32	%f3286, %f3285, 4, 31, -1;
	mov.b32 	%r1652, %f3286;
	setp.nan.f32 	%p891, %f3285, %f3286;
	min.f32 	%f3287, %f3285, %f3286;
	selp.f32 	%f3288, 0f7FC00000, %f3287, %p891;
	setp.eq.s32 	%p892, %r1651, -2147483648;
	selp.f32 	%f3289, %f3285, %f3288, %p892;
	setp.eq.s32 	%p893, %r1652, -2147483648;
	selp.f32 	%f3290, %f3286, %f3289, %p893;
	setp.eq.f32 	%p894, %f3288, 0f00000000;
	selp.f32 	%f3291, %f3290, %f3288, %p894;
	mov.b32 	%r1653, %f3291;
	shfl.sync.bfly.b32	%f3292, %f3291, 2, 31, -1;
	mov.b32 	%r1654, %f3292;
	setp.nan.f32 	%p895, %f3291, %f3292;
	min.f32 	%f3293, %f3291, %f3292;
	selp.f32 	%f3294, 0f7FC00000, %f3293, %p895;
	setp.eq.s32 	%p896, %r1653, -2147483648;
	selp.f32 	%f3295, %f3291, %f3294, %p896;
	setp.eq.s32 	%p897, %r1654, -2147483648;
	selp.f32 	%f3296, %f3292, %f3295, %p897;
	setp.eq.f32 	%p898, %f3294, 0f00000000;
	selp.f32 	%f3297, %f3296, %f3294, %p898;
	mov.b32 	%r1655, %f3297;
	shfl.sync.bfly.b32	%f3298, %f3297, 1, 31, -1;
	mov.b32 	%r1656, %f3298;
	setp.nan.f32 	%p899, %f3297, %f3298;
	min.f32 	%f3299, %f3297, %f3298;
	selp.f32 	%f3300, 0f7FC00000, %f3299, %p899;
	setp.eq.s32 	%p900, %r1655, -2147483648;
	selp.f32 	%f3301, %f3297, %f3300, %p900;
	setp.eq.s32 	%p901, %r1656, -2147483648;
	selp.f32 	%f3302, %f3298, %f3301, %p901;
	setp.eq.f32 	%p902, %f3300, 0f00000000;
	selp.f32 	%f3654, %f3302, %f3300, %p902;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_422:                            // %LoadGlobalF16
                                        //   in Loop: Header=BB0_1 Depth=1
	and.b32  	%r528, %r12, 15;
	shr.u32 	%r529, %r12, 4;
	cvt.u32.u64 	%r530, %rd512;
	{ .reg .b32 tmp; mov.b64 {tmp, %r531}, %rd512; }
	shfl.sync.idx.b32	%r532, %r530, %r528, 31, -1;
	shfl.sync.idx.b32	%r533, %r531, %r528, 31, -1;
	cvt.u64.u32 	%rd245, %r532;
	cvt.u64.u32 	%rd246, %r533;
	shl.b64 	%rd247, %rd246, 32;
	or.b64  	%rd248, %rd245, %rd247;
	add.s32 	%r369, %r529, %r3;
	shfl.sync.idx.b32	%r370, %r1808, %r528, 31, -1;
	shfl.sync.idx.b32	%r534, %r1807, %r528, 31, -1;
	shfl.sync.idx.b32	%r371, %r1805, %r528, 31, -1;
	shfl.sync.idx.b32	%r372, %r1806, %r528, 31, -1;
	shfl.sync.idx.b32	%r373, %r1809, %r528, 31, -1;
	mul.lo.s32 	%r535, %r534, %r369;
	mul.wide.s32 	%rd249, %r535, 2;
	add.s64 	%rd125, %rd248, %rd249;
	setp.ge.u32 	%p105, %r369, %r370;
	mov.f32 	%f3656, 0f00000000;
	mov.f32 	%f3655, %f3656;
	@%p105 bra 	$L__BB0_424;
// %bb.423:                             // %LoadGlobalF16.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.b16 	%rs25, [%rd125];
	cvt.f32.f16 	%f3655, %rs25;
$L__BB0_424:                            // %LoadGlobalF16.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r374, %r373, %r369;
	cvt.s64.s32 	%rd126, %r371;
	mul.wide.s32 	%rd250, %r371, 2;
	add.s64 	%rd127, %rd125, %rd250;
	setp.ge.u32 	%p106, %r374, %r370;
	setp.lt.u32 	%p107, %r372, 2;
	or.pred  	%p108, %p107, %p106;
	@%p108 bra 	$L__BB0_426;
// %bb.425:                             // %LoadGlobalF16.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.b16 	%rs26, [%rd127];
	cvt.f32.f16 	%f3656, %rs26;
$L__BB0_426:                            // %LoadGlobalF16.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r375, %r374, %r373;
	shl.b64 	%rd251, %rd126, 1;
	add.s64 	%rd128, %rd127, %rd251;
	setp.ge.u32 	%p109, %r375, %r370;
	setp.lt.u32 	%p110, %r372, 3;
	mov.f32 	%f3658, 0f00000000;
	or.pred  	%p111, %p110, %p109;
	mov.f32 	%f3657, %f3658;
	@%p111 bra 	$L__BB0_428;
// %bb.427:                             // %LoadGlobalF16.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.b16 	%rs27, [%rd128];
	cvt.f32.f16 	%f3657, %rs27;
$L__BB0_428:                            // %LoadGlobalF16.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r376, %r375, %r373;
	add.s64 	%rd129, %rd128, %rd251;
	setp.ge.u32 	%p112, %r376, %r370;
	setp.lt.u32 	%p113, %r372, 4;
	or.pred  	%p114, %p113, %p112;
	@%p114 bra 	$L__BB0_430;
// %bb.429:                             // %LoadGlobalF16.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.b16 	%rs28, [%rd129];
	cvt.f32.f16 	%f3658, %rs28;
$L__BB0_430:                            // %LoadGlobalF16.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r377, %r376, %r373;
	add.s64 	%rd130, %rd129, %rd251;
	setp.ge.u32 	%p115, %r377, %r370;
	setp.lt.u32 	%p116, %r372, 5;
	mov.f32 	%f3660, 0f00000000;
	or.pred  	%p117, %p116, %p115;
	mov.f32 	%f3659, %f3660;
	@%p117 bra 	$L__BB0_432;
// %bb.431:                             // %LoadGlobalF16.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.b16 	%rs29, [%rd130];
	cvt.f32.f16 	%f3659, %rs29;
$L__BB0_432:                            // %LoadGlobalF16.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r378, %r377, %r373;
	add.s64 	%rd131, %rd130, %rd251;
	setp.ge.u32 	%p118, %r378, %r370;
	setp.lt.u32 	%p119, %r372, 6;
	or.pred  	%p120, %p119, %p118;
	@%p120 bra 	$L__BB0_434;
// %bb.433:                             // %LoadGlobalF16.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.b16 	%rs30, [%rd131];
	cvt.f32.f16 	%f3660, %rs30;
$L__BB0_434:                            // %LoadGlobalF16.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r379, %r378, %r373;
	add.s64 	%rd132, %rd131, %rd251;
	setp.ge.u32 	%p121, %r379, %r370;
	setp.lt.u32 	%p122, %r372, 7;
	mov.f32 	%f3662, 0f00000000;
	or.pred  	%p123, %p122, %p121;
	mov.f32 	%f3661, %f3662;
	@%p123 bra 	$L__BB0_436;
// %bb.435:                             // %LoadGlobalF16.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.b16 	%rs31, [%rd132];
	cvt.f32.f16 	%f3661, %rs31;
$L__BB0_436:                            // %LoadGlobalF16.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r536, %r379, %r373;
	setp.ge.u32 	%p124, %r536, %r370;
	setp.lt.u32 	%p125, %r372, 8;
	or.pred  	%p126, %p125, %p124;
	mov.f32 	%f3654, %f8;
	@%p126 bra 	$L__BB0_502;
// %bb.437:                             // %LoadGlobalF16.endif.endif...if
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s64 	%rd133, %rd132, %rd251;
	ld.global.b16 	%rs32, [%rd133];
	cvt.f32.f16 	%f3662, %rs32;
	mov.f32 	%f3654, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_66:                             // %FSin
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2815, %f3647, 0f3F22F983;
	cvt.rni.s32.f32 	%r1812, %f2815;
	cvt.rn.f32.s32 	%f2816, %r1812;
	fma.rn.f32 	%f2817, %f2816, 0fBFC90FDA, %f3647;
	fma.rn.f32 	%f2818, %f2816, 0fB3A22168, %f2817;
	fma.rn.f32 	%f3686, %f2816, 0fA7C234C5, %f2818;
	abs.f32 	%f197, %f3647;
	setp.ltu.f32 	%p671, %f197, 0f47CE4780;
	@%p671 bra 	$L__BB0_74;
// %bb.67:                              // %__nv_isinff.exit.i.i.i
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p672, %f197, 0f7F800000;
	@%p672 bra 	$L__BB0_69;
// %bb.68:                              // %__nv_fmul_rn.exit.i.i.i
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2821, 0f00000000;
	mul.rn.f32 	%f3686, %f3647, %f2821;
	mov.b32 	%r1812, 0;
	bra.uni 	$L__BB0_74;
$L__BB0_406:                            // %FErf
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f680, %f3647;
	setp.ltu.f32 	%p127, %f680, 0f3F8060FE;
	setp.ge.f32 	%p128, %f680, 0f3F8060FE;
	mul.rn.f32 	%f681, %f3647, %f3647;
	selp.f32 	%f682, %f680, %f681, %p128;
	selp.f32 	%f683, 0f3789CA3C, 0f38B1E96A, %p128;
	selp.f32 	%f684, 0fB9F560B9, 0fBA574D20, %p128;
	fma.rn.f32 	%f685, %f683, %f682, %f684;
	selp.f32 	%f686, 0f3BAC840B, 0f3BAAD5EA, %p128;
	fma.rn.f32 	%f687, %f685, %f682, %f686;
	selp.f32 	%f688, 0fBD0C8162, 0fBCDC1BE7, %p128;
	fma.rn.f32 	%f689, %f687, %f682, %f688;
	selp.f32 	%f690, 0f3E1CF906, 0f3DE718AF, %p128;
	fma.rn.f32 	%f691, %f689, %f682, %f690;
	selp.f32 	%f692, 0f3F6A937E, 0fBEC093AC, %p128;
	fma.rn.f32 	%f693, %f691, %f682, %f692;
	selp.f32 	%f694, 0f3F20D842, 0f3E0375D3, %p128;
	fma.rn.f32 	%f695, %f693, %f682, %f694;
	neg.f32 	%f696, %f682;
	selp.f32 	%f697, %f696, %f3647, %p128;
	fma.rn.f32 	%f3741, %f695, %f697, %f697;
	@%p127 bra 	$L__BB0_408;
// %bb.407:                             //   in Loop: Header=BB0_1 Depth=1
	ex2.approx.ftz.f32 	%f698, %f3741;
	mov.f32 	%f699, 0f3F800000;
	sub.rn.f32 	%f700, %f699, %f698;
	mov.b32 	%r537, %f700;
	mov.b32 	%r538, %f3647;
	and.b32  	%r539, %r538, -2147483648;
	or.b32  	%r540, %r539, %r537;
	mov.b32 	%f3741, %r540;
$L__BB0_408:                            // %__nv_erff.exit
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f701, %f3648;
	setp.ltu.f32 	%p129, %f701, 0f3F8060FE;
	setp.ge.f32 	%p130, %f701, 0f3F8060FE;
	mul.rn.f32 	%f702, %f3648, %f3648;
	selp.f32 	%f703, %f701, %f702, %p130;
	selp.f32 	%f704, 0f3789CA3C, 0f38B1E96A, %p130;
	selp.f32 	%f705, 0fB9F560B9, 0fBA574D20, %p130;
	fma.rn.f32 	%f706, %f704, %f703, %f705;
	selp.f32 	%f707, 0f3BAC840B, 0f3BAAD5EA, %p130;
	fma.rn.f32 	%f708, %f706, %f703, %f707;
	selp.f32 	%f709, 0fBD0C8162, 0fBCDC1BE7, %p130;
	fma.rn.f32 	%f710, %f708, %f703, %f709;
	selp.f32 	%f711, 0f3E1CF906, 0f3DE718AF, %p130;
	fma.rn.f32 	%f712, %f710, %f703, %f711;
	selp.f32 	%f713, 0f3F6A937E, 0fBEC093AC, %p130;
	fma.rn.f32 	%f714, %f712, %f703, %f713;
	selp.f32 	%f715, 0f3F20D842, 0f3E0375D3, %p130;
	fma.rn.f32 	%f716, %f714, %f703, %f715;
	neg.f32 	%f717, %f703;
	selp.f32 	%f718, %f717, %f3648, %p130;
	fma.rn.f32 	%f3742, %f716, %f718, %f718;
	@%p129 bra 	$L__BB0_410;
// %bb.409:                             //   in Loop: Header=BB0_1 Depth=1
	ex2.approx.ftz.f32 	%f719, %f3742;
	mov.f32 	%f720, 0f3F800000;
	sub.rn.f32 	%f721, %f720, %f719;
	mov.b32 	%r541, %f721;
	mov.b32 	%r542, %f3648;
	and.b32  	%r543, %r542, -2147483648;
	or.b32  	%r544, %r543, %r541;
	mov.b32 	%f3742, %r544;
$L__BB0_410:                            // %__nv_erff.exit705
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f722, %f3649;
	setp.ltu.f32 	%p131, %f722, 0f3F8060FE;
	setp.ge.f32 	%p132, %f722, 0f3F8060FE;
	mul.rn.f32 	%f723, %f3649, %f3649;
	selp.f32 	%f724, %f722, %f723, %p132;
	selp.f32 	%f725, 0f3789CA3C, 0f38B1E96A, %p132;
	selp.f32 	%f726, 0fB9F560B9, 0fBA574D20, %p132;
	fma.rn.f32 	%f727, %f725, %f724, %f726;
	selp.f32 	%f728, 0f3BAC840B, 0f3BAAD5EA, %p132;
	fma.rn.f32 	%f729, %f727, %f724, %f728;
	selp.f32 	%f730, 0fBD0C8162, 0fBCDC1BE7, %p132;
	fma.rn.f32 	%f731, %f729, %f724, %f730;
	selp.f32 	%f732, 0f3E1CF906, 0f3DE718AF, %p132;
	fma.rn.f32 	%f733, %f731, %f724, %f732;
	selp.f32 	%f734, 0f3F6A937E, 0fBEC093AC, %p132;
	fma.rn.f32 	%f735, %f733, %f724, %f734;
	selp.f32 	%f736, 0f3F20D842, 0f3E0375D3, %p132;
	fma.rn.f32 	%f737, %f735, %f724, %f736;
	neg.f32 	%f738, %f724;
	selp.f32 	%f739, %f738, %f3649, %p132;
	fma.rn.f32 	%f3743, %f737, %f739, %f739;
	@%p131 bra 	$L__BB0_412;
// %bb.411:                             //   in Loop: Header=BB0_1 Depth=1
	ex2.approx.ftz.f32 	%f740, %f3743;
	mov.f32 	%f741, 0f3F800000;
	sub.rn.f32 	%f742, %f741, %f740;
	mov.b32 	%r545, %f742;
	mov.b32 	%r546, %f3649;
	and.b32  	%r547, %r546, -2147483648;
	or.b32  	%r548, %r547, %r545;
	mov.b32 	%f3743, %r548;
$L__BB0_412:                            // %__nv_erff.exit707
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f743, %f3650;
	setp.ltu.f32 	%p133, %f743, 0f3F8060FE;
	setp.ge.f32 	%p134, %f743, 0f3F8060FE;
	mul.rn.f32 	%f744, %f3650, %f3650;
	selp.f32 	%f745, %f743, %f744, %p134;
	selp.f32 	%f746, 0f3789CA3C, 0f38B1E96A, %p134;
	selp.f32 	%f747, 0fB9F560B9, 0fBA574D20, %p134;
	fma.rn.f32 	%f748, %f746, %f745, %f747;
	selp.f32 	%f749, 0f3BAC840B, 0f3BAAD5EA, %p134;
	fma.rn.f32 	%f750, %f748, %f745, %f749;
	selp.f32 	%f751, 0fBD0C8162, 0fBCDC1BE7, %p134;
	fma.rn.f32 	%f752, %f750, %f745, %f751;
	selp.f32 	%f753, 0f3E1CF906, 0f3DE718AF, %p134;
	fma.rn.f32 	%f754, %f752, %f745, %f753;
	selp.f32 	%f755, 0f3F6A937E, 0fBEC093AC, %p134;
	fma.rn.f32 	%f756, %f754, %f745, %f755;
	selp.f32 	%f757, 0f3F20D842, 0f3E0375D3, %p134;
	fma.rn.f32 	%f758, %f756, %f745, %f757;
	neg.f32 	%f759, %f745;
	selp.f32 	%f760, %f759, %f3650, %p134;
	fma.rn.f32 	%f3744, %f758, %f760, %f760;
	@%p133 bra 	$L__BB0_414;
// %bb.413:                             //   in Loop: Header=BB0_1 Depth=1
	ex2.approx.ftz.f32 	%f761, %f3744;
	mov.f32 	%f762, 0f3F800000;
	sub.rn.f32 	%f763, %f762, %f761;
	mov.b32 	%r549, %f763;
	mov.b32 	%r550, %f3650;
	and.b32  	%r551, %r550, -2147483648;
	or.b32  	%r552, %r551, %r549;
	mov.b32 	%f3744, %r552;
$L__BB0_414:                            // %__nv_erff.exit709
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f764, %f3651;
	setp.ltu.f32 	%p135, %f764, 0f3F8060FE;
	setp.ge.f32 	%p136, %f764, 0f3F8060FE;
	mul.rn.f32 	%f765, %f3651, %f3651;
	selp.f32 	%f766, %f764, %f765, %p136;
	selp.f32 	%f767, 0f3789CA3C, 0f38B1E96A, %p136;
	selp.f32 	%f768, 0fB9F560B9, 0fBA574D20, %p136;
	fma.rn.f32 	%f769, %f767, %f766, %f768;
	selp.f32 	%f770, 0f3BAC840B, 0f3BAAD5EA, %p136;
	fma.rn.f32 	%f771, %f769, %f766, %f770;
	selp.f32 	%f772, 0fBD0C8162, 0fBCDC1BE7, %p136;
	fma.rn.f32 	%f773, %f771, %f766, %f772;
	selp.f32 	%f774, 0f3E1CF906, 0f3DE718AF, %p136;
	fma.rn.f32 	%f775, %f773, %f766, %f774;
	selp.f32 	%f776, 0f3F6A937E, 0fBEC093AC, %p136;
	fma.rn.f32 	%f777, %f775, %f766, %f776;
	selp.f32 	%f778, 0f3F20D842, 0f3E0375D3, %p136;
	fma.rn.f32 	%f779, %f777, %f766, %f778;
	neg.f32 	%f780, %f766;
	selp.f32 	%f781, %f780, %f3651, %p136;
	fma.rn.f32 	%f3745, %f779, %f781, %f781;
	@%p135 bra 	$L__BB0_416;
// %bb.415:                             //   in Loop: Header=BB0_1 Depth=1
	ex2.approx.ftz.f32 	%f782, %f3745;
	mov.f32 	%f783, 0f3F800000;
	sub.rn.f32 	%f784, %f783, %f782;
	mov.b32 	%r553, %f784;
	mov.b32 	%r554, %f3651;
	and.b32  	%r555, %r554, -2147483648;
	or.b32  	%r556, %r555, %r553;
	mov.b32 	%f3745, %r556;
$L__BB0_416:                            // %__nv_erff.exit711
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f785, %f3652;
	setp.ltu.f32 	%p137, %f785, 0f3F8060FE;
	setp.ge.f32 	%p138, %f785, 0f3F8060FE;
	mul.rn.f32 	%f786, %f3652, %f3652;
	selp.f32 	%f787, %f785, %f786, %p138;
	selp.f32 	%f788, 0f3789CA3C, 0f38B1E96A, %p138;
	selp.f32 	%f789, 0fB9F560B9, 0fBA574D20, %p138;
	fma.rn.f32 	%f790, %f788, %f787, %f789;
	selp.f32 	%f791, 0f3BAC840B, 0f3BAAD5EA, %p138;
	fma.rn.f32 	%f792, %f790, %f787, %f791;
	selp.f32 	%f793, 0fBD0C8162, 0fBCDC1BE7, %p138;
	fma.rn.f32 	%f794, %f792, %f787, %f793;
	selp.f32 	%f795, 0f3E1CF906, 0f3DE718AF, %p138;
	fma.rn.f32 	%f796, %f794, %f787, %f795;
	selp.f32 	%f797, 0f3F6A937E, 0fBEC093AC, %p138;
	fma.rn.f32 	%f798, %f796, %f787, %f797;
	selp.f32 	%f799, 0f3F20D842, 0f3E0375D3, %p138;
	fma.rn.f32 	%f800, %f798, %f787, %f799;
	neg.f32 	%f801, %f787;
	selp.f32 	%f802, %f801, %f3652, %p138;
	fma.rn.f32 	%f3746, %f800, %f802, %f802;
	@%p137 bra 	$L__BB0_418;
// %bb.417:                             //   in Loop: Header=BB0_1 Depth=1
	ex2.approx.ftz.f32 	%f803, %f3746;
	mov.f32 	%f804, 0f3F800000;
	sub.rn.f32 	%f805, %f804, %f803;
	mov.b32 	%r557, %f805;
	mov.b32 	%r558, %f3652;
	and.b32  	%r559, %r558, -2147483648;
	or.b32  	%r560, %r559, %r557;
	mov.b32 	%f3746, %r560;
$L__BB0_418:                            // %__nv_erff.exit713
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f806, %f3653;
	setp.ltu.f32 	%p139, %f806, 0f3F8060FE;
	setp.ge.f32 	%p140, %f806, 0f3F8060FE;
	mul.rn.f32 	%f807, %f3653, %f3653;
	selp.f32 	%f808, %f806, %f807, %p140;
	selp.f32 	%f809, 0f3789CA3C, 0f38B1E96A, %p140;
	selp.f32 	%f810, 0fB9F560B9, 0fBA574D20, %p140;
	fma.rn.f32 	%f811, %f809, %f808, %f810;
	selp.f32 	%f812, 0f3BAC840B, 0f3BAAD5EA, %p140;
	fma.rn.f32 	%f813, %f811, %f808, %f812;
	selp.f32 	%f814, 0fBD0C8162, 0fBCDC1BE7, %p140;
	fma.rn.f32 	%f815, %f813, %f808, %f814;
	selp.f32 	%f816, 0f3E1CF906, 0f3DE718AF, %p140;
	fma.rn.f32 	%f817, %f815, %f808, %f816;
	selp.f32 	%f818, 0f3F6A937E, 0fBEC093AC, %p140;
	fma.rn.f32 	%f819, %f817, %f808, %f818;
	selp.f32 	%f820, 0f3F20D842, 0f3E0375D3, %p140;
	fma.rn.f32 	%f821, %f819, %f808, %f820;
	neg.f32 	%f822, %f808;
	selp.f32 	%f823, %f822, %f3653, %p140;
	fma.rn.f32 	%f3747, %f821, %f823, %f823;
	@%p139 bra 	$L__BB0_420;
// %bb.419:                             //   in Loop: Header=BB0_1 Depth=1
	ex2.approx.ftz.f32 	%f824, %f3747;
	mov.f32 	%f825, 0f3F800000;
	sub.rn.f32 	%f826, %f825, %f824;
	mov.b32 	%r561, %f826;
	mov.b32 	%r562, %f3653;
	and.b32  	%r563, %r562, -2147483648;
	or.b32  	%r564, %r563, %r561;
	mov.b32 	%f3747, %r564;
$L__BB0_420:                            // %__nv_erff.exit715
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f827, %f8;
	setp.ltu.f32 	%p141, %f827, 0f3F8060FE;
	setp.ge.f32 	%p142, %f827, 0f3F8060FE;
	mul.rn.f32 	%f828, %f8, %f8;
	selp.f32 	%f829, %f827, %f828, %p142;
	selp.f32 	%f830, 0f3789CA3C, 0f38B1E96A, %p142;
	selp.f32 	%f831, 0fB9F560B9, 0fBA574D20, %p142;
	fma.rn.f32 	%f832, %f830, %f829, %f831;
	selp.f32 	%f833, 0f3BAC840B, 0f3BAAD5EA, %p142;
	fma.rn.f32 	%f834, %f832, %f829, %f833;
	selp.f32 	%f835, 0fBD0C8162, 0fBCDC1BE7, %p142;
	fma.rn.f32 	%f836, %f834, %f829, %f835;
	selp.f32 	%f837, 0f3E1CF906, 0f3DE718AF, %p142;
	fma.rn.f32 	%f838, %f836, %f829, %f837;
	selp.f32 	%f839, 0f3F6A937E, 0fBEC093AC, %p142;
	fma.rn.f32 	%f840, %f838, %f829, %f839;
	selp.f32 	%f841, 0f3F20D842, 0f3E0375D3, %p142;
	fma.rn.f32 	%f842, %f840, %f829, %f841;
	neg.f32 	%f843, %f829;
	selp.f32 	%f844, %f843, %f8, %p142;
	fma.rn.f32 	%f3654, %f842, %f844, %f844;
	mov.f32 	%f3647, %f3741;
	mov.f32 	%f3648, %f3742;
	mov.f32 	%f3649, %f3743;
	mov.f32 	%f3650, %f3744;
	mov.f32 	%f3651, %f3745;
	mov.f32 	%f3652, %f3746;
	mov.f32 	%f3653, %f3747;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	@%p141 bra 	$L__BB0_502;
// %bb.421:                             //   in Loop: Header=BB0_1 Depth=1
	ex2.approx.ftz.f32 	%f845, %f3654;
	mov.f32 	%f846, 0f3F800000;
	sub.rn.f32 	%f847, %f846, %f845;
	mov.b32 	%r565, %f847;
	mov.b32 	%r566, %f8;
	and.b32  	%r567, %r566, -2147483648;
	or.b32  	%r568, %r567, %r565;
	mov.b32 	%f3654, %r568;
	mov.f32 	%f3647, %f3741;
	mov.f32 	%f3648, %f3742;
	mov.f32 	%f3649, %f3743;
	mov.f32 	%f3650, %f3744;
	mov.f32 	%f3651, %f3745;
	mov.f32 	%f3652, %f3746;
	mov.f32 	%f3653, %f3747;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_401:                            // %FExp
                                        //   in Loop: Header=BB0_1 Depth=1
	fma.rn.f32 	%f1184, %f3647, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1185, %f1184;
	mov.f32 	%f1186, 0f4B400001;
	mov.f32 	%f1187, 0f437C0000;
	fma.rm.f32 	%f1188, %f1185, %f1187, %f1186;
	add.rn.f32 	%f1189, %f1188, 0fCB40007F;
	neg.f32 	%f1190, %f1189;
	fma.rn.f32 	%f1191, %f3647, 0f3FB8AA3B, %f1190;
	fma.rn.f32 	%f1192, %f3647, 0f32A57060, %f1191;
	mov.b32 	%r633, %f1188;
	shl.b32 	%r634, %r633, 23;
	mov.b32 	%f1193, %r634;
	ex2.approx.ftz.f32 	%f1194, %f1192;
	mul.rn.f32 	%f3647, %f1194, %f1193;
	fma.rn.f32 	%f1195, %f3648, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1196, %f1195;
	fma.rm.f32 	%f1197, %f1196, %f1187, %f1186;
	add.rn.f32 	%f1198, %f1197, 0fCB40007F;
	neg.f32 	%f1199, %f1198;
	fma.rn.f32 	%f1200, %f3648, 0f3FB8AA3B, %f1199;
	fma.rn.f32 	%f1201, %f3648, 0f32A57060, %f1200;
	mov.b32 	%r635, %f1197;
	shl.b32 	%r636, %r635, 23;
	mov.b32 	%f1202, %r636;
	ex2.approx.ftz.f32 	%f1203, %f1201;
	mul.rn.f32 	%f3648, %f1203, %f1202;
	fma.rn.f32 	%f1204, %f3649, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1205, %f1204;
	fma.rm.f32 	%f1206, %f1205, %f1187, %f1186;
	add.rn.f32 	%f1207, %f1206, 0fCB40007F;
	neg.f32 	%f1208, %f1207;
	fma.rn.f32 	%f1209, %f3649, 0f3FB8AA3B, %f1208;
	fma.rn.f32 	%f1210, %f3649, 0f32A57060, %f1209;
	mov.b32 	%r637, %f1206;
	shl.b32 	%r638, %r637, 23;
	mov.b32 	%f1211, %r638;
	ex2.approx.ftz.f32 	%f1212, %f1210;
	mul.rn.f32 	%f3649, %f1212, %f1211;
	fma.rn.f32 	%f1213, %f3650, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1214, %f1213;
	fma.rm.f32 	%f1215, %f1214, %f1187, %f1186;
	add.rn.f32 	%f1216, %f1215, 0fCB40007F;
	neg.f32 	%f1217, %f1216;
	fma.rn.f32 	%f1218, %f3650, 0f3FB8AA3B, %f1217;
	fma.rn.f32 	%f1219, %f3650, 0f32A57060, %f1218;
	mov.b32 	%r639, %f1215;
	shl.b32 	%r640, %r639, 23;
	mov.b32 	%f1220, %r640;
	ex2.approx.ftz.f32 	%f1221, %f1219;
	mul.rn.f32 	%f3650, %f1221, %f1220;
	fma.rn.f32 	%f1222, %f3651, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1223, %f1222;
	fma.rm.f32 	%f1224, %f1223, %f1187, %f1186;
	add.rn.f32 	%f1225, %f1224, 0fCB40007F;
	neg.f32 	%f1226, %f1225;
	fma.rn.f32 	%f1227, %f3651, 0f3FB8AA3B, %f1226;
	fma.rn.f32 	%f1228, %f3651, 0f32A57060, %f1227;
	mov.b32 	%r641, %f1224;
	shl.b32 	%r642, %r641, 23;
	mov.b32 	%f1229, %r642;
	ex2.approx.ftz.f32 	%f1230, %f1228;
	mul.rn.f32 	%f3651, %f1230, %f1229;
	fma.rn.f32 	%f1231, %f3652, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1232, %f1231;
	fma.rm.f32 	%f1233, %f1232, %f1187, %f1186;
	add.rn.f32 	%f1234, %f1233, 0fCB40007F;
	neg.f32 	%f1235, %f1234;
	fma.rn.f32 	%f1236, %f3652, 0f3FB8AA3B, %f1235;
	fma.rn.f32 	%f1237, %f3652, 0f32A57060, %f1236;
	mov.b32 	%r643, %f1233;
	shl.b32 	%r644, %r643, 23;
	mov.b32 	%f1238, %r644;
	ex2.approx.ftz.f32 	%f1239, %f1237;
	mul.rn.f32 	%f3652, %f1239, %f1238;
	fma.rn.f32 	%f1240, %f3653, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1241, %f1240;
	fma.rm.f32 	%f1242, %f1241, %f1187, %f1186;
	add.rn.f32 	%f1243, %f1242, 0fCB40007F;
	neg.f32 	%f1244, %f1243;
	fma.rn.f32 	%f1245, %f3653, 0f3FB8AA3B, %f1244;
	fma.rn.f32 	%f1246, %f3653, 0f32A57060, %f1245;
	mov.b32 	%r645, %f1242;
	shl.b32 	%r646, %r645, 23;
	mov.b32 	%f1247, %r646;
	ex2.approx.ftz.f32 	%f1248, %f1246;
	mul.rn.f32 	%f3653, %f1248, %f1247;
	fma.rn.f32 	%f1249, %f8, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f1250, %f1249;
	fma.rm.f32 	%f1251, %f1250, %f1187, %f1186;
	add.rn.f32 	%f1252, %f1251, 0fCB40007F;
	neg.f32 	%f1253, %f1252;
	fma.rn.f32 	%f1254, %f8, 0f3FB8AA3B, %f1253;
	fma.rn.f32 	%f1255, %f8, 0f32A57060, %f1254;
	mov.b32 	%r647, %f1251;
	shl.b32 	%r648, %r647, 23;
	mov.b32 	%f1256, %r648;
	ex2.approx.ftz.f32 	%f1257, %f1255;
	mul.rn.f32 	%f3654, %f1257, %f1256;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_454:                            // %LoadGlobalBF16
                                        //   in Loop: Header=BB0_1 Depth=1
	and.b32  	%r494, %r12, 15;
	shr.u32 	%r495, %r12, 4;
	cvt.u32.u64 	%r496, %rd512;
	{ .reg .b32 tmp; mov.b64 {tmp, %r497}, %rd512; }
	shfl.sync.idx.b32	%r498, %r496, %r494, 31, -1;
	shfl.sync.idx.b32	%r499, %r497, %r494, 31, -1;
	cvt.u64.u32 	%rd221, %r498;
	cvt.u64.u32 	%rd222, %r499;
	shl.b64 	%rd223, %rd222, 32;
	or.b64  	%rd224, %rd221, %rd223;
	add.s32 	%r391, %r495, %r3;
	shfl.sync.idx.b32	%r392, %r1808, %r494, 31, -1;
	shfl.sync.idx.b32	%r500, %r1807, %r494, 31, -1;
	shfl.sync.idx.b32	%r393, %r1805, %r494, 31, -1;
	shfl.sync.idx.b32	%r394, %r1806, %r494, 31, -1;
	shfl.sync.idx.b32	%r395, %r1809, %r494, 31, -1;
	mul.lo.s32 	%r501, %r500, %r391;
	mul.wide.s32 	%rd225, %r501, 2;
	add.s64 	%rd143, %rd224, %rd225;
	setp.ge.u32 	%p61, %r391, %r392;
	mov.f32 	%f3656, 0f00000000;
	mov.f32 	%f3655, %f3656;
	@%p61 bra 	$L__BB0_456;
// %bb.455:                             // %LoadGlobalBF16.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u16 	%r502, [%rd143];
	shl.b32 	%r503, %r502, 16;
	mov.b32 	%f3655, %r503;
$L__BB0_456:                            // %LoadGlobalBF16.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r396, %r395, %r391;
	cvt.s64.s32 	%rd144, %r393;
	mul.wide.s32 	%rd226, %r393, 2;
	add.s64 	%rd145, %rd143, %rd226;
	setp.ge.u32 	%p62, %r396, %r392;
	setp.lt.u32 	%p63, %r394, 2;
	or.pred  	%p64, %p63, %p62;
	@%p64 bra 	$L__BB0_458;
// %bb.457:                             // %LoadGlobalBF16.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u16 	%r504, [%rd145];
	shl.b32 	%r505, %r504, 16;
	mov.b32 	%f3656, %r505;
$L__BB0_458:                            // %LoadGlobalBF16.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r397, %r396, %r395;
	shl.b64 	%rd227, %rd144, 1;
	add.s64 	%rd146, %rd145, %rd227;
	setp.ge.u32 	%p65, %r397, %r392;
	setp.lt.u32 	%p66, %r394, 3;
	mov.f32 	%f3658, 0f00000000;
	or.pred  	%p67, %p66, %p65;
	mov.f32 	%f3657, %f3658;
	@%p67 bra 	$L__BB0_460;
// %bb.459:                             // %LoadGlobalBF16.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u16 	%r506, [%rd146];
	shl.b32 	%r507, %r506, 16;
	mov.b32 	%f3657, %r507;
$L__BB0_460:                            // %LoadGlobalBF16.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r398, %r397, %r395;
	add.s64 	%rd147, %rd146, %rd227;
	setp.ge.u32 	%p68, %r398, %r392;
	setp.lt.u32 	%p69, %r394, 4;
	or.pred  	%p70, %p69, %p68;
	@%p70 bra 	$L__BB0_462;
// %bb.461:                             // %LoadGlobalBF16.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u16 	%r508, [%rd147];
	shl.b32 	%r509, %r508, 16;
	mov.b32 	%f3658, %r509;
$L__BB0_462:                            // %LoadGlobalBF16.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r399, %r398, %r395;
	add.s64 	%rd148, %rd147, %rd227;
	setp.ge.u32 	%p71, %r399, %r392;
	setp.lt.u32 	%p72, %r394, 5;
	mov.f32 	%f3660, 0f00000000;
	or.pred  	%p73, %p72, %p71;
	mov.f32 	%f3659, %f3660;
	@%p73 bra 	$L__BB0_464;
// %bb.463:                             // %LoadGlobalBF16.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u16 	%r510, [%rd148];
	shl.b32 	%r511, %r510, 16;
	mov.b32 	%f3659, %r511;
$L__BB0_464:                            // %LoadGlobalBF16.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r400, %r399, %r395;
	add.s64 	%rd149, %rd148, %rd227;
	setp.ge.u32 	%p74, %r400, %r392;
	setp.lt.u32 	%p75, %r394, 6;
	or.pred  	%p76, %p75, %p74;
	@%p76 bra 	$L__BB0_466;
// %bb.465:                             // %LoadGlobalBF16.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u16 	%r512, [%rd149];
	shl.b32 	%r513, %r512, 16;
	mov.b32 	%f3660, %r513;
$L__BB0_466:                            // %LoadGlobalBF16.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r401, %r400, %r395;
	add.s64 	%rd150, %rd149, %rd227;
	setp.ge.u32 	%p77, %r401, %r392;
	setp.lt.u32 	%p78, %r394, 7;
	mov.f32 	%f3662, 0f00000000;
	or.pred  	%p79, %p78, %p77;
	mov.f32 	%f3661, %f3662;
	@%p79 bra 	$L__BB0_468;
// %bb.467:                             // %LoadGlobalBF16.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u16 	%r514, [%rd150];
	shl.b32 	%r515, %r514, 16;
	mov.b32 	%f3661, %r515;
$L__BB0_468:                            // %LoadGlobalBF16.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r516, %r401, %r395;
	setp.ge.u32 	%p80, %r516, %r392;
	setp.lt.u32 	%p81, %r394, 8;
	or.pred  	%p82, %p81, %p80;
	mov.f32 	%f3654, %f8;
	@%p82 bra 	$L__BB0_502;
// %bb.469:                             // %LoadGlobalBF16.endif.endi...if
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s64 	%rd151, %rd150, %rd227;
	ld.global.u16 	%r517, [%rd151];
	shl.b32 	%r518, %r517, 16;
	mov.b32 	%f3662, %r518;
	mov.f32 	%f3654, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_486:                            // %LoadGlobalU8
                                        //   in Loop: Header=BB0_1 Depth=1
	and.b32  	%r428, %r12, 15;
	shr.u32 	%r429, %r12, 4;
	cvt.u32.u64 	%r430, %rd512;
	{ .reg .b32 tmp; mov.b64 {tmp, %r431}, %rd512; }
	shfl.sync.idx.b32	%r432, %r430, %r428, 31, -1;
	shfl.sync.idx.b32	%r433, %r431, %r428, 31, -1;
	cvt.u64.u32 	%rd204, %r432;
	cvt.u64.u32 	%rd205, %r433;
	shl.b64 	%rd206, %rd205, 32;
	or.b64  	%rd207, %rd204, %rd206;
	add.s32 	%r413, %r429, %r3;
	shfl.sync.idx.b32	%r414, %r1808, %r428, 31, -1;
	shfl.sync.idx.b32	%r434, %r1807, %r428, 31, -1;
	shfl.sync.idx.b32	%r415, %r1805, %r428, 31, -1;
	shfl.sync.idx.b32	%r416, %r1806, %r428, 31, -1;
	shfl.sync.idx.b32	%r417, %r1809, %r428, 31, -1;
	mul.lo.s32 	%r435, %r434, %r413;
	cvt.s64.s32 	%rd208, %r435;
	add.s64 	%rd161, %rd207, %rd208;
	setp.ge.u32 	%p9, %r413, %r414;
	mov.f32 	%f3656, 0f00000000;
	mov.f32 	%f3655, %f3656;
	@%p9 bra 	$L__BB0_488;
// %bb.487:                             // %LoadGlobalU8.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u8 	%rs17, [%rd161];
	cvt.rn.f32.u16 	%f3655, %rs17;
$L__BB0_488:                            // %LoadGlobalU8.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r418, %r417, %r413;
	cvt.s64.s32 	%rd162, %r415;
	add.s64 	%rd163, %rd161, %rd162;
	setp.ge.u32 	%p10, %r418, %r414;
	setp.lt.u32 	%p11, %r416, 2;
	or.pred  	%p12, %p11, %p10;
	@%p12 bra 	$L__BB0_490;
// %bb.489:                             // %LoadGlobalU8.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u8 	%rs18, [%rd163];
	cvt.rn.f32.u16 	%f3656, %rs18;
$L__BB0_490:                            // %LoadGlobalU8.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r419, %r418, %r417;
	add.s64 	%rd164, %rd163, %rd162;
	setp.ge.u32 	%p13, %r419, %r414;
	setp.lt.u32 	%p14, %r416, 3;
	mov.f32 	%f3658, 0f00000000;
	or.pred  	%p15, %p14, %p13;
	mov.f32 	%f3657, %f3658;
	@%p15 bra 	$L__BB0_492;
// %bb.491:                             // %LoadGlobalU8.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u8 	%rs19, [%rd164];
	cvt.rn.f32.u16 	%f3657, %rs19;
$L__BB0_492:                            // %LoadGlobalU8.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r420, %r419, %r417;
	add.s64 	%rd165, %rd164, %rd162;
	setp.ge.u32 	%p16, %r420, %r414;
	setp.lt.u32 	%p17, %r416, 4;
	or.pred  	%p18, %p17, %p16;
	@%p18 bra 	$L__BB0_494;
// %bb.493:                             // %LoadGlobalU8.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u8 	%rs20, [%rd165];
	cvt.rn.f32.u16 	%f3658, %rs20;
$L__BB0_494:                            // %LoadGlobalU8.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r421, %r420, %r417;
	add.s64 	%rd166, %rd165, %rd162;
	setp.ge.u32 	%p19, %r421, %r414;
	setp.lt.u32 	%p20, %r416, 5;
	mov.f32 	%f3660, 0f00000000;
	or.pred  	%p21, %p20, %p19;
	mov.f32 	%f3659, %f3660;
	@%p21 bra 	$L__BB0_496;
// %bb.495:                             // %LoadGlobalU8.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u8 	%rs21, [%rd166];
	cvt.rn.f32.u16 	%f3659, %rs21;
$L__BB0_496:                            // %LoadGlobalU8.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r422, %r421, %r417;
	add.s64 	%rd167, %rd166, %rd162;
	setp.ge.u32 	%p22, %r422, %r414;
	setp.lt.u32 	%p23, %r416, 6;
	or.pred  	%p24, %p23, %p22;
	@%p24 bra 	$L__BB0_498;
// %bb.497:                             // %LoadGlobalU8.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u8 	%rs22, [%rd167];
	cvt.rn.f32.u16 	%f3660, %rs22;
$L__BB0_498:                            // %LoadGlobalU8.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r423, %r422, %r417;
	add.s64 	%rd168, %rd167, %rd162;
	setp.ge.u32 	%p25, %r423, %r414;
	setp.lt.u32 	%p26, %r416, 7;
	mov.f32 	%f3662, 0f00000000;
	or.pred  	%p27, %p26, %p25;
	mov.f32 	%f3661, %f3662;
	@%p27 bra 	$L__BB0_500;
// %bb.499:                             // %LoadGlobalU8.endif.endif.endif.endif.endif.endif.if
                                        //   in Loop: Header=BB0_1 Depth=1
	ld.global.u8 	%rs23, [%rd168];
	cvt.rn.f32.u16 	%f3661, %rs23;
$L__BB0_500:                            // %LoadGlobalU8.endif.endif.endif.endif.endif.endif.endif
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r436, %r423, %r417;
	setp.ge.u32 	%p28, %r436, %r414;
	setp.lt.u32 	%p29, %r416, 8;
	or.pred  	%p30, %p29, %p28;
	mov.f32 	%f3654, %f8;
	@%p30 bra 	$L__BB0_502;
// %bb.501:                             // %LoadGlobalU8.endif.endif....if
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s64 	%rd169, %rd168, %rd162;
	ld.global.u8 	%rs24, [%rd169];
	cvt.rn.f32.u16 	%f3662, %rs24;
	mov.f32 	%f3654, %f8;
	bra.uni 	$L__BB0_502;
$L__BB0_282:                            //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p410, %f388, 0f7F800000;
	setp.neu.f32 	%p411, %f1946, 0f7F800000;
	or.pred  	%p412, %p410, %p411;
	mov.b32 	%r1789, %f9;
	@%p412 bra 	$L__BB0_284;
// %bb.283:                             //   in Loop: Header=BB0_1 Depth=1
	setp.lt.s32 	%p416, %r1789, 0;
	selp.b32 	%r791, 1075235812, 1061752795, %p416;
	mov.b32 	%f1968, %r791;
	copysign.f32 	%f3647, %f3647, %f1968;
	bra.uni 	$L__BB0_285;
$L__BB0_322:                            //   in Loop: Header=BB0_1 Depth=1
	setp.lt.f32 	%p192, %f436, 0f00800000;
	mul.rn.f32 	%f1265, %f436, 0f4B800000;
	selp.f32 	%f1266, %f1265, %f436, %p192;
	mov.b32 	%r361, %f1266;
	and.b32  	%r649, %r361, 8388607;
	or.b32  	%r650, %r649, 1065353216;
	mov.b32 	%f437, %r650;
	setp.gt.f32 	%p193, %f437, 0f3FB504F3;
	mul.rn.f32 	%f1267, %f437, 0f3F000000;
	selp.f32 	%f438, %f1267, %f437, %p193;
	add.rn.f32 	%f1259, %f438, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1258,%f1259;
	// end inline asm
	setp.gt.f32 	%p199, %f440, 0f77F684DF;
	mul.rn.f32 	%f1268, %f9, 0f39000000;
	selp.f32 	%f1269, %f1268, %f9, %p199;
	selp.f32 	%f1270, 0fC3170000, 0fC2FE0000, %p192;
	shr.u32 	%r651, %r361, 23;
	cvt.rn.f32.u32 	%f1271, %r651;
	add.rn.f32 	%f1272, %f1270, %f1271;
	add.rn.f32 	%f1273, %f1272, 0f3F800000;
	selp.f32 	%f1274, %f1273, %f1272, %p193;
	mov.f32 	%f1275, 0f3F317200;
	mul.rn.f32 	%f1276, %f1274, %f1275;
	add.rn.f32 	%f1277, %f438, 0fBF800000;
	add.rn.f32 	%f1278, %f1277, %f1277;
	mul.rn.f32 	%f1279, %f1278, %f1258;
	mul.rn.f32 	%f1280, %f1279, %f1279;
	fma.rn.f32 	%f1281, %f1280, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1282, %f1281, %f1280, 0f3DAAAABD;
	mul.rn.f32 	%f1283, %f1282, %f1280;
	mul.rn.f32 	%f1284, %f1283, %f1279;
	add.rn.f32 	%f1285, %f1279, %f1284;
	sub.rn.f32 	%f1286, %f1279, %f1285;
	add.rn.f32 	%f1287, %f1284, %f1286;
	neg.f32 	%f1288, %f1279;
	sub.rn.f32 	%f1289, %f1277, %f1279;
	add.rn.f32 	%f1290, %f1289, %f1289;
	fma.rn.f32 	%f1291, %f1288, %f1277, %f1290;
	mul.rn.f32 	%f1292, %f1258, %f1291;
	add.rn.f32 	%f1293, %f1292, %f1287;
	add.rn.f32 	%f1294, %f1285, %f1293;
	add.rn.f32 	%f1295, %f1276, %f1294;
	sub.rn.f32 	%f1296, %f1276, %f1295;
	add.rn.f32 	%f1297, %f1294, %f1296;
	sub.rn.f32 	%f1298, %f1285, %f1294;
	add.rn.f32 	%f1299, %f1293, %f1298;
	add.rn.f32 	%f1300, %f1299, %f1297;
	mov.f32 	%f1301, 0f35BFBE8E;
	mul.rn.f32 	%f1302, %f1274, %f1301;
	add.rn.f32 	%f1303, %f1302, %f1300;
	add.rn.f32 	%f1304, %f1295, %f1303;
	mul.rn.f32 	%f1305, %f1269, %f1304;
	sub.rn.f32 	%f1306, %f1295, %f1304;
	add.rn.f32 	%f1307, %f1303, %f1306;
	neg.f32 	%f1308, %f1305;
	fma.rn.f32 	%f1309, %f1269, %f1304, %f1308;
	fma.rn.f32 	%f1310, %f1269, %f1307, %f1309;
	fma.rn.f32 	%f1311, %f1304, 0f00000000, %f1310;
	add.rn.f32 	%f1312, %f1305, %f1311;
	mov.b32 	%r652, %f1312;
	setp.eq.s32 	%p200, %r652, 1118925336;
	selp.f32 	%f1313, 0f42B17217, %f1312, %p200;
	neg.f32 	%f1314, %f1312;
	add.rn.f32 	%f1315, %f1305, %f1314;
	add.rn.f32 	%f1316, %f1315, %f1311;
	add.rn.f32 	%f1317, %f1316, 0f37000000;
	selp.f32 	%f1318, %f1317, %f1316, %p200;
	mov.f32 	%f1319, 0f3FB8AA3B;
	mul.rn.f32 	%f1320, %f1313, %f1319;
	cvt.rzi.f32.f32 	%f1321, %f1320;
	abs.f32 	%f1322, %f1321;
	setp.gt.f32 	%p201, %f1322, 0f42FC0000;
	mov.f32 	%f1323, 0f42FC0000;
	copysign.f32 	%f1324, %f1321, %f1323;
	selp.f32 	%f1325, %f1324, %f1321, %p201;
	fma.rn.f32 	%f1326, %f1325, 0fBF317218, %f1313;
	fma.rn.f32 	%f1327, %f1325, 0f3102E308, %f1326;
	mul.rn.f32 	%f1328, %f1327, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1329, %f1328;
	add.rn.f32 	%f1330, %f1325, 0f4B40007F;
	mov.b32 	%r653, %f1330;
	shl.b32 	%r654, %r653, 23;
	mov.b32 	%f1331, %r654;
	mul.rn.f32 	%f1332, %f1329, %f1331;
	setp.neu.f32 	%p202, %f1332, 0f7F800000;
	fma.rn.f32 	%f1333, %f1332, %f1318, %f1332;
	selp.f32 	%f1334, %f1333, 0f7F800000, %p202;
	neg.f32 	%f1335, %f1334;
	selp.f32 	%f1336, %f1335, %f1334, %p1;
	cvt.rzi.f32.f32 	%f1337, %f9;
	setp.neu.f32 	%p203, %f9, %f1337;
	selp.f32 	%f1339, 0f7FFFFFFF, %f1336, %p203;
	selp.f32 	%f3726, %f1339, %f1336, %p194;
$L__BB0_323:                            // %__internal_powf_corner_cases.exit.i
                                        //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1341, %f436, %f440;
	mov.b32 	%r659, %f1341;
	setp.lt.s32 	%p206, %r659, 2139095040;
	@%p206 bra 	$L__BB0_330;
// %bb.324:                             // %__nv_isnanf.exit.i.i
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.num.f32 	%p207, %f436, %f436;
	setp.num.f32 	%p208, %f440, %f440;
	and.pred  	%p209, %p207, %p208;
	@%p209 bra 	$L__BB0_326;
// %bb.325:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f3726, %f3647, %f9;
	bra.uni 	$L__BB0_330;
$L__BB0_326:                            // %__nv_isinff.exit8.i.i
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p210, %f440, 0f7F800000;
	@%p210 bra 	$L__BB0_328;
// %bb.327:                             // %__nv_fabsf.exit5.i.i
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.gt.f32 	%p213, %f436, 0f3F800000;
	selp.b32 	%r663, 2139095040, 0, %p213;
	setp.lt.f32 	%p214, %f9, 0f00000000;
	xor.b32  	%r664, %r663, 2139095040;
	selp.b32 	%r665, %r664, %r663, %p214;
	setp.eq.f32 	%p215, %f3647, 0fBF800000;
	mov.b32 	%f1342, %r665;
	selp.f32 	%f3726, 0f3F800000, %f1342, %p215;
	bra.uni 	$L__BB0_330;
$L__BB0_284:                            // %__nv_fmaxf.exit.i
                                        //   in Loop: Header=BB0_1 Depth=1
	max.f32 	%f1947, %f1946, %f388;
	min.f32 	%f1948, %f1946, %f388;
	div.rn.f32 	%f1949, %f1948, %f1947;
	mul.rn.f32 	%f1950, %f1949, %f1949;
	fma.rn.f32 	%f1951, %f1950, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f1952, %f1951, %f1950, 0fC0D21907;
	mul.rn.f32 	%f1953, %f1950, %f1952;
	mul.rn.f32 	%f1954, %f1949, %f1953;
	add.rn.f32 	%f1955, %f1950, 0f41355DC0;
	fma.rn.f32 	%f1956, %f1955, %f1950, 0f41E6BD60;
	fma.rn.f32 	%f1957, %f1956, %f1950, 0f419D92C8;
	rcp.rn.f32 	%f1958, %f1957;
	fma.rn.f32 	%f1959, %f1954, %f1958, %f1949;
	setp.gt.f32 	%p413, %f1946, %f388;
	mov.f32 	%f1960, 0f3FC90FDB;
	sub.rn.f32 	%f1961, %f1960, %f1959;
	selp.f32 	%f1962, %f1961, %f1959, %p413;
	setp.lt.s32 	%p414, %r1789, 0;
	mov.f32 	%f1963, 0f40490FDB;
	sub.rn.f32 	%f1964, %f1963, %f1962;
	selp.f32 	%f1965, %f1964, %f1962, %p414;
	mov.b32 	%r786, %f1965;
	mov.b32 	%r787, %f3647;
	and.b32  	%r788, %r787, -2147483648;
	or.b32  	%r789, %r788, %r786;
	mov.b32 	%f1966, %r789;
	add.rn.f32 	%f1967, %f1946, %f388;
	setp.num.f32 	%p415, %f1967, %f1967;
	selp.f32 	%f3647, %f1966, %f1967, %p415;
$L__BB0_285:                            // %__nv_atan2f.exit
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f394, %f10;
	abs.f32 	%f1970, %f3648;
	setp.neu.f32 	%p417, %f394, 0f00000000;
	setp.neu.f32 	%p418, %f1970, 0f00000000;
	or.pred  	%p419, %p417, %p418;
	@%p419 bra 	$L__BB0_287;
// %bb.286:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r802, %f10;
	shr.s32 	%r803, %r802, 31;
	and.b32  	%r804, %r803, 1078530011;
	mov.b32 	%f1993, %r804;
	copysign.f32 	%f3648, %f3648, %f1993;
	bra.uni 	$L__BB0_290;
$L__BB0_287:                            //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p420, %f394, 0f7F800000;
	setp.neu.f32 	%p421, %f1970, 0f7F800000;
	or.pred  	%p422, %p420, %p421;
	mov.b32 	%r1790, %f10;
	@%p422 bra 	$L__BB0_289;
// %bb.288:                             //   in Loop: Header=BB0_1 Depth=1
	setp.lt.s32 	%p426, %r1790, 0;
	selp.b32 	%r801, 1075235812, 1061752795, %p426;
	mov.b32 	%f1992, %r801;
	copysign.f32 	%f3648, %f3648, %f1992;
	bra.uni 	$L__BB0_290;
$L__BB0_289:                            // %__nv_fmaxf.exit.i559
                                        //   in Loop: Header=BB0_1 Depth=1
	max.f32 	%f1971, %f1970, %f394;
	min.f32 	%f1972, %f1970, %f394;
	div.rn.f32 	%f1973, %f1972, %f1971;
	mul.rn.f32 	%f1974, %f1973, %f1973;
	fma.rn.f32 	%f1975, %f1974, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f1976, %f1975, %f1974, 0fC0D21907;
	mul.rn.f32 	%f1977, %f1974, %f1976;
	mul.rn.f32 	%f1978, %f1973, %f1977;
	add.rn.f32 	%f1979, %f1974, 0f41355DC0;
	fma.rn.f32 	%f1980, %f1979, %f1974, 0f41E6BD60;
	fma.rn.f32 	%f1981, %f1980, %f1974, 0f419D92C8;
	rcp.rn.f32 	%f1982, %f1981;
	fma.rn.f32 	%f1983, %f1978, %f1982, %f1973;
	setp.gt.f32 	%p423, %f1970, %f394;
	mov.f32 	%f1984, 0f3FC90FDB;
	sub.rn.f32 	%f1985, %f1984, %f1983;
	selp.f32 	%f1986, %f1985, %f1983, %p423;
	setp.lt.s32 	%p424, %r1790, 0;
	mov.f32 	%f1987, 0f40490FDB;
	sub.rn.f32 	%f1988, %f1987, %f1986;
	selp.f32 	%f1989, %f1988, %f1986, %p424;
	mov.b32 	%r796, %f1989;
	mov.b32 	%r797, %f3648;
	and.b32  	%r798, %r797, -2147483648;
	or.b32  	%r799, %r798, %r796;
	mov.b32 	%f1990, %r799;
	add.rn.f32 	%f1991, %f1970, %f394;
	setp.num.f32 	%p425, %f1991, %f1991;
	selp.f32 	%f3648, %f1990, %f1991, %p425;
$L__BB0_290:                            // %__nv_atan2f.exit564
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f400, %f11;
	abs.f32 	%f1994, %f3649;
	setp.neu.f32 	%p427, %f400, 0f00000000;
	setp.neu.f32 	%p428, %f1994, 0f00000000;
	or.pred  	%p429, %p427, %p428;
	@%p429 bra 	$L__BB0_292;
// %bb.291:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r812, %f11;
	shr.s32 	%r813, %r812, 31;
	and.b32  	%r814, %r813, 1078530011;
	mov.b32 	%f2017, %r814;
	copysign.f32 	%f3649, %f3649, %f2017;
	bra.uni 	$L__BB0_295;
$L__BB0_292:                            //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p430, %f400, 0f7F800000;
	setp.neu.f32 	%p431, %f1994, 0f7F800000;
	or.pred  	%p432, %p430, %p431;
	mov.b32 	%r1791, %f11;
	@%p432 bra 	$L__BB0_294;
// %bb.293:                             //   in Loop: Header=BB0_1 Depth=1
	setp.lt.s32 	%p436, %r1791, 0;
	selp.b32 	%r811, 1075235812, 1061752795, %p436;
	mov.b32 	%f2016, %r811;
	copysign.f32 	%f3649, %f3649, %f2016;
	bra.uni 	$L__BB0_295;
$L__BB0_294:                            // %__nv_fmaxf.exit.i567
                                        //   in Loop: Header=BB0_1 Depth=1
	max.f32 	%f1995, %f1994, %f400;
	min.f32 	%f1996, %f1994, %f400;
	div.rn.f32 	%f1997, %f1996, %f1995;
	mul.rn.f32 	%f1998, %f1997, %f1997;
	fma.rn.f32 	%f1999, %f1998, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2000, %f1999, %f1998, 0fC0D21907;
	mul.rn.f32 	%f2001, %f1998, %f2000;
	mul.rn.f32 	%f2002, %f1997, %f2001;
	add.rn.f32 	%f2003, %f1998, 0f41355DC0;
	fma.rn.f32 	%f2004, %f2003, %f1998, 0f41E6BD60;
	fma.rn.f32 	%f2005, %f2004, %f1998, 0f419D92C8;
	rcp.rn.f32 	%f2006, %f2005;
	fma.rn.f32 	%f2007, %f2002, %f2006, %f1997;
	setp.gt.f32 	%p433, %f1994, %f400;
	mov.f32 	%f2008, 0f3FC90FDB;
	sub.rn.f32 	%f2009, %f2008, %f2007;
	selp.f32 	%f2010, %f2009, %f2007, %p433;
	setp.lt.s32 	%p434, %r1791, 0;
	mov.f32 	%f2011, 0f40490FDB;
	sub.rn.f32 	%f2012, %f2011, %f2010;
	selp.f32 	%f2013, %f2012, %f2010, %p434;
	mov.b32 	%r806, %f2013;
	mov.b32 	%r807, %f3649;
	and.b32  	%r808, %r807, -2147483648;
	or.b32  	%r809, %r808, %r806;
	mov.b32 	%f2014, %r809;
	add.rn.f32 	%f2015, %f1994, %f400;
	setp.num.f32 	%p435, %f2015, %f2015;
	selp.f32 	%f3649, %f2014, %f2015, %p435;
$L__BB0_295:                            // %__nv_atan2f.exit572
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f406, %f12;
	abs.f32 	%f2018, %f3650;
	setp.neu.f32 	%p437, %f406, 0f00000000;
	setp.neu.f32 	%p438, %f2018, 0f00000000;
	or.pred  	%p439, %p437, %p438;
	@%p439 bra 	$L__BB0_297;
// %bb.296:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r822, %f12;
	shr.s32 	%r823, %r822, 31;
	and.b32  	%r824, %r823, 1078530011;
	mov.b32 	%f2041, %r824;
	copysign.f32 	%f3650, %f3650, %f2041;
	bra.uni 	$L__BB0_300;
$L__BB0_297:                            //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p440, %f406, 0f7F800000;
	setp.neu.f32 	%p441, %f2018, 0f7F800000;
	or.pred  	%p442, %p440, %p441;
	mov.b32 	%r1792, %f12;
	@%p442 bra 	$L__BB0_299;
// %bb.298:                             //   in Loop: Header=BB0_1 Depth=1
	setp.lt.s32 	%p446, %r1792, 0;
	selp.b32 	%r821, 1075235812, 1061752795, %p446;
	mov.b32 	%f2040, %r821;
	copysign.f32 	%f3650, %f3650, %f2040;
	bra.uni 	$L__BB0_300;
$L__BB0_299:                            // %__nv_fmaxf.exit.i575
                                        //   in Loop: Header=BB0_1 Depth=1
	max.f32 	%f2019, %f2018, %f406;
	min.f32 	%f2020, %f2018, %f406;
	div.rn.f32 	%f2021, %f2020, %f2019;
	mul.rn.f32 	%f2022, %f2021, %f2021;
	fma.rn.f32 	%f2023, %f2022, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2024, %f2023, %f2022, 0fC0D21907;
	mul.rn.f32 	%f2025, %f2022, %f2024;
	mul.rn.f32 	%f2026, %f2021, %f2025;
	add.rn.f32 	%f2027, %f2022, 0f41355DC0;
	fma.rn.f32 	%f2028, %f2027, %f2022, 0f41E6BD60;
	fma.rn.f32 	%f2029, %f2028, %f2022, 0f419D92C8;
	rcp.rn.f32 	%f2030, %f2029;
	fma.rn.f32 	%f2031, %f2026, %f2030, %f2021;
	setp.gt.f32 	%p443, %f2018, %f406;
	mov.f32 	%f2032, 0f3FC90FDB;
	sub.rn.f32 	%f2033, %f2032, %f2031;
	selp.f32 	%f2034, %f2033, %f2031, %p443;
	setp.lt.s32 	%p444, %r1792, 0;
	mov.f32 	%f2035, 0f40490FDB;
	sub.rn.f32 	%f2036, %f2035, %f2034;
	selp.f32 	%f2037, %f2036, %f2034, %p444;
	mov.b32 	%r816, %f2037;
	mov.b32 	%r817, %f3650;
	and.b32  	%r818, %r817, -2147483648;
	or.b32  	%r819, %r818, %r816;
	mov.b32 	%f2038, %r819;
	add.rn.f32 	%f2039, %f2018, %f406;
	setp.num.f32 	%p445, %f2039, %f2039;
	selp.f32 	%f3650, %f2038, %f2039, %p445;
$L__BB0_300:                            // %__nv_atan2f.exit580
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f412, %f13;
	abs.f32 	%f2042, %f3651;
	setp.neu.f32 	%p447, %f412, 0f00000000;
	setp.neu.f32 	%p448, %f2042, 0f00000000;
	or.pred  	%p449, %p447, %p448;
	@%p449 bra 	$L__BB0_302;
// %bb.301:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r832, %f13;
	shr.s32 	%r833, %r832, 31;
	and.b32  	%r834, %r833, 1078530011;
	mov.b32 	%f2065, %r834;
	copysign.f32 	%f3651, %f3651, %f2065;
	bra.uni 	$L__BB0_305;
$L__BB0_302:                            //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p450, %f412, 0f7F800000;
	setp.neu.f32 	%p451, %f2042, 0f7F800000;
	or.pred  	%p452, %p450, %p451;
	mov.b32 	%r1793, %f13;
	@%p452 bra 	$L__BB0_304;
// %bb.303:                             //   in Loop: Header=BB0_1 Depth=1
	setp.lt.s32 	%p456, %r1793, 0;
	selp.b32 	%r831, 1075235812, 1061752795, %p456;
	mov.b32 	%f2064, %r831;
	copysign.f32 	%f3651, %f3651, %f2064;
	bra.uni 	$L__BB0_305;
$L__BB0_304:                            // %__nv_fmaxf.exit.i583
                                        //   in Loop: Header=BB0_1 Depth=1
	max.f32 	%f2043, %f2042, %f412;
	min.f32 	%f2044, %f2042, %f412;
	div.rn.f32 	%f2045, %f2044, %f2043;
	mul.rn.f32 	%f2046, %f2045, %f2045;
	fma.rn.f32 	%f2047, %f2046, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2048, %f2047, %f2046, 0fC0D21907;
	mul.rn.f32 	%f2049, %f2046, %f2048;
	mul.rn.f32 	%f2050, %f2045, %f2049;
	add.rn.f32 	%f2051, %f2046, 0f41355DC0;
	fma.rn.f32 	%f2052, %f2051, %f2046, 0f41E6BD60;
	fma.rn.f32 	%f2053, %f2052, %f2046, 0f419D92C8;
	rcp.rn.f32 	%f2054, %f2053;
	fma.rn.f32 	%f2055, %f2050, %f2054, %f2045;
	setp.gt.f32 	%p453, %f2042, %f412;
	mov.f32 	%f2056, 0f3FC90FDB;
	sub.rn.f32 	%f2057, %f2056, %f2055;
	selp.f32 	%f2058, %f2057, %f2055, %p453;
	setp.lt.s32 	%p454, %r1793, 0;
	mov.f32 	%f2059, 0f40490FDB;
	sub.rn.f32 	%f2060, %f2059, %f2058;
	selp.f32 	%f2061, %f2060, %f2058, %p454;
	mov.b32 	%r826, %f2061;
	mov.b32 	%r827, %f3651;
	and.b32  	%r828, %r827, -2147483648;
	or.b32  	%r829, %r828, %r826;
	mov.b32 	%f2062, %r829;
	add.rn.f32 	%f2063, %f2042, %f412;
	setp.num.f32 	%p455, %f2063, %f2063;
	selp.f32 	%f3651, %f2062, %f2063, %p455;
$L__BB0_305:                            // %__nv_atan2f.exit588
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f418, %f14;
	abs.f32 	%f2066, %f3652;
	setp.neu.f32 	%p457, %f418, 0f00000000;
	setp.neu.f32 	%p458, %f2066, 0f00000000;
	or.pred  	%p459, %p457, %p458;
	@%p459 bra 	$L__BB0_307;
// %bb.306:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r842, %f14;
	shr.s32 	%r843, %r842, 31;
	and.b32  	%r844, %r843, 1078530011;
	mov.b32 	%f2089, %r844;
	copysign.f32 	%f3652, %f3652, %f2089;
	bra.uni 	$L__BB0_310;
$L__BB0_307:                            //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p460, %f418, 0f7F800000;
	setp.neu.f32 	%p461, %f2066, 0f7F800000;
	or.pred  	%p462, %p460, %p461;
	mov.b32 	%r1794, %f14;
	@%p462 bra 	$L__BB0_309;
// %bb.308:                             //   in Loop: Header=BB0_1 Depth=1
	setp.lt.s32 	%p466, %r1794, 0;
	selp.b32 	%r841, 1075235812, 1061752795, %p466;
	mov.b32 	%f2088, %r841;
	copysign.f32 	%f3652, %f3652, %f2088;
	bra.uni 	$L__BB0_310;
$L__BB0_309:                            // %__nv_fmaxf.exit.i591
                                        //   in Loop: Header=BB0_1 Depth=1
	max.f32 	%f2067, %f2066, %f418;
	min.f32 	%f2068, %f2066, %f418;
	div.rn.f32 	%f2069, %f2068, %f2067;
	mul.rn.f32 	%f2070, %f2069, %f2069;
	fma.rn.f32 	%f2071, %f2070, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2072, %f2071, %f2070, 0fC0D21907;
	mul.rn.f32 	%f2073, %f2070, %f2072;
	mul.rn.f32 	%f2074, %f2069, %f2073;
	add.rn.f32 	%f2075, %f2070, 0f41355DC0;
	fma.rn.f32 	%f2076, %f2075, %f2070, 0f41E6BD60;
	fma.rn.f32 	%f2077, %f2076, %f2070, 0f419D92C8;
	rcp.rn.f32 	%f2078, %f2077;
	fma.rn.f32 	%f2079, %f2074, %f2078, %f2069;
	setp.gt.f32 	%p463, %f2066, %f418;
	mov.f32 	%f2080, 0f3FC90FDB;
	sub.rn.f32 	%f2081, %f2080, %f2079;
	selp.f32 	%f2082, %f2081, %f2079, %p463;
	setp.lt.s32 	%p464, %r1794, 0;
	mov.f32 	%f2083, 0f40490FDB;
	sub.rn.f32 	%f2084, %f2083, %f2082;
	selp.f32 	%f2085, %f2084, %f2082, %p464;
	mov.b32 	%r836, %f2085;
	mov.b32 	%r837, %f3652;
	and.b32  	%r838, %r837, -2147483648;
	or.b32  	%r839, %r838, %r836;
	mov.b32 	%f2086, %r839;
	add.rn.f32 	%f2087, %f2066, %f418;
	setp.num.f32 	%p465, %f2087, %f2087;
	selp.f32 	%f3652, %f2086, %f2087, %p465;
$L__BB0_310:                            // %__nv_atan2f.exit596
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f424, %f15;
	abs.f32 	%f2090, %f3653;
	setp.neu.f32 	%p467, %f424, 0f00000000;
	setp.neu.f32 	%p468, %f2090, 0f00000000;
	or.pred  	%p469, %p467, %p468;
	@%p469 bra 	$L__BB0_312;
// %bb.311:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r852, %f15;
	shr.s32 	%r853, %r852, 31;
	and.b32  	%r854, %r853, 1078530011;
	mov.b32 	%f2113, %r854;
	copysign.f32 	%f3653, %f3653, %f2113;
	bra.uni 	$L__BB0_315;
$L__BB0_312:                            //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p470, %f424, 0f7F800000;
	setp.neu.f32 	%p471, %f2090, 0f7F800000;
	or.pred  	%p472, %p470, %p471;
	mov.b32 	%r1795, %f15;
	@%p472 bra 	$L__BB0_314;
// %bb.313:                             //   in Loop: Header=BB0_1 Depth=1
	setp.lt.s32 	%p476, %r1795, 0;
	selp.b32 	%r851, 1075235812, 1061752795, %p476;
	mov.b32 	%f2112, %r851;
	copysign.f32 	%f3653, %f3653, %f2112;
	bra.uni 	$L__BB0_315;
$L__BB0_314:                            // %__nv_fmaxf.exit.i599
                                        //   in Loop: Header=BB0_1 Depth=1
	max.f32 	%f2091, %f2090, %f424;
	min.f32 	%f2092, %f2090, %f424;
	div.rn.f32 	%f2093, %f2092, %f2091;
	mul.rn.f32 	%f2094, %f2093, %f2093;
	fma.rn.f32 	%f2095, %f2094, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2096, %f2095, %f2094, 0fC0D21907;
	mul.rn.f32 	%f2097, %f2094, %f2096;
	mul.rn.f32 	%f2098, %f2093, %f2097;
	add.rn.f32 	%f2099, %f2094, 0f41355DC0;
	fma.rn.f32 	%f2100, %f2099, %f2094, 0f41E6BD60;
	fma.rn.f32 	%f2101, %f2100, %f2094, 0f419D92C8;
	rcp.rn.f32 	%f2102, %f2101;
	fma.rn.f32 	%f2103, %f2098, %f2102, %f2093;
	setp.gt.f32 	%p473, %f2090, %f424;
	mov.f32 	%f2104, 0f3FC90FDB;
	sub.rn.f32 	%f2105, %f2104, %f2103;
	selp.f32 	%f2106, %f2105, %f2103, %p473;
	setp.lt.s32 	%p474, %r1795, 0;
	mov.f32 	%f2107, 0f40490FDB;
	sub.rn.f32 	%f2108, %f2107, %f2106;
	selp.f32 	%f2109, %f2108, %f2106, %p474;
	mov.b32 	%r846, %f2109;
	mov.b32 	%r847, %f3653;
	and.b32  	%r848, %r847, -2147483648;
	or.b32  	%r849, %r848, %r846;
	mov.b32 	%f2110, %r849;
	add.rn.f32 	%f2111, %f2090, %f424;
	setp.num.f32 	%p475, %f2111, %f2111;
	selp.f32 	%f3653, %f2110, %f2111, %p475;
$L__BB0_315:                            // %__nv_atan2f.exit604
                                        //   in Loop: Header=BB0_1 Depth=1
	abs.f32 	%f430, %f16;
	abs.f32 	%f2114, %f8;
	setp.neu.f32 	%p477, %f430, 0f00000000;
	setp.neu.f32 	%p478, %f2114, 0f00000000;
	or.pred  	%p479, %p477, %p478;
	@%p479 bra 	$L__BB0_317;
// %bb.316:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r862, %f16;
	shr.s32 	%r863, %r862, 31;
	and.b32  	%r864, %r863, 1078530011;
	mov.b32 	%f2137, %r864;
	copysign.f32 	%f3654, %f8, %f2137;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_317:                            //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p480, %f430, 0f7F800000;
	setp.neu.f32 	%p481, %f2114, 0f7F800000;
	or.pred  	%p482, %p480, %p481;
	mov.b32 	%r1796, %f16;
	@%p482 bra 	$L__BB0_319;
// %bb.318:                             //   in Loop: Header=BB0_1 Depth=1
	setp.lt.s32 	%p486, %r1796, 0;
	selp.b32 	%r861, 1075235812, 1061752795, %p486;
	mov.b32 	%f2136, %r861;
	copysign.f32 	%f3654, %f8, %f2136;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_319:                            // %__nv_fmaxf.exit.i607
                                        //   in Loop: Header=BB0_1 Depth=1
	max.f32 	%f2115, %f2114, %f430;
	min.f32 	%f2116, %f2114, %f430;
	div.rn.f32 	%f2117, %f2116, %f2115;
	mul.rn.f32 	%f2118, %f2117, %f2117;
	fma.rn.f32 	%f2119, %f2118, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f2120, %f2119, %f2118, 0fC0D21907;
	mul.rn.f32 	%f2121, %f2118, %f2120;
	mul.rn.f32 	%f2122, %f2117, %f2121;
	add.rn.f32 	%f2123, %f2118, 0f41355DC0;
	fma.rn.f32 	%f2124, %f2123, %f2118, 0f41E6BD60;
	fma.rn.f32 	%f2125, %f2124, %f2118, 0f419D92C8;
	rcp.rn.f32 	%f2126, %f2125;
	fma.rn.f32 	%f2127, %f2122, %f2126, %f2117;
	setp.gt.f32 	%p483, %f2114, %f430;
	mov.f32 	%f2128, 0f3FC90FDB;
	sub.rn.f32 	%f2129, %f2128, %f2127;
	selp.f32 	%f2130, %f2129, %f2127, %p483;
	setp.lt.s32 	%p484, %r1796, 0;
	mov.f32 	%f2131, 0f40490FDB;
	sub.rn.f32 	%f2132, %f2131, %f2130;
	selp.f32 	%f2133, %f2132, %f2130, %p484;
	mov.b32 	%r856, %f2133;
	mov.b32 	%r857, %f8;
	and.b32  	%r858, %r857, -2147483648;
	or.b32  	%r859, %r858, %r856;
	mov.b32 	%f2134, %r859;
	add.rn.f32 	%f2135, %f2114, %f430;
	setp.num.f32 	%p485, %f2135, %f2135;
	selp.f32 	%f3654, %f2134, %f2135, %p485;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_199:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r258, %f3647;
	shr.u32 	%r259, %r258, 23;
	and.b32  	%r930, %r259, 224;
	add.s32 	%r931, %r930, -128;
	shl.b32 	%r932, %r258, 8;
	or.b32  	%r260, %r932, -2147483648;
	shr.u32 	%r261, %r931, 5;
	mov.b32 	%r1858, 0;
	mov.b64 	%rd529, 0;
$L__BB0_200:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd259, %rd510, %rd529;
	ld.global.nc.u32 	%r935, [%rd259];
	// begin inline asm
	{
	mad.lo.cc.u32   %r933, %r935, %r260, %r1858;
	madc.hi.u32     %r1858, %r935, %r260,  0;
	}
	// end inline asm
	add.s64 	%rd260, %rd8, %rd529;
	st.local.u32 	[%rd260], %r933;
	add.s64 	%rd529, %rd529, 4;
	cvt.u32.u64 	%r938, %rd529;
	setp.ne.s32 	%p537, %r938, 24;
	@%p537 bra 	$L__BB0_200;
// %bb.201:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd8+24], %r1858;
	mul.wide.u32 	%rd261, %r261, 4;
	sub.s64 	%rd103, %rd8, %rd261;
	ld.local.u32 	%r264, [%rd103+24];
	ld.local.u32 	%r265, [%rd103+20];
	and.b32  	%r940, %r258, 260046848;
	setp.eq.s32 	%p538, %r940, 0;
	mov.u32 	%r1859, %r265;
	@%p538 bra 	$L__BB0_203;
// %bb.202:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r941, [%rd103+16];
	shf.l.wrap.b32 	%r1859, %r941, %r265, %r259;
$L__BB0_203:                            // %__internal_trig_reduction_slowpath.exit.i.i
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r942, %r265, %r264, %r259;
	shr.u32 	%r943, %r942, 30;
	shf.l.wrap.b32 	%r944, %r1859, %r942, 2;
	shl.b32 	%r945, %r1859, 2;
	shr.u32 	%r946, %r944, 31;
	add.s32 	%r947, %r946, %r943;
	neg.s32 	%r948, %r947;
	setp.lt.s32 	%p539, %r258, 0;
	selp.b32 	%r1860, %r948, %r947, %p539;
	xor.b32  	%r949, %r944, %r258;
	shr.s32 	%r950, %r944, 31;
	xor.b32  	%r951, %r950, %r944;
	xor.b32  	%r952, %r950, %r945;
	cvt.u64.u32 	%rd262, %r951;
	shl.b64 	%rd263, %rd262, 32;
	cvt.u64.u32 	%rd264, %r952;
	or.b64  	%rd265, %rd263, %rd264;
	cvt.rn.f64.s64 	%fd1, %rd265;
	mul.rn.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2523, %fd2;
	neg.f32 	%f2524, %f2523;
	setp.lt.s32 	%p540, %r949, 0;
	selp.f32 	%f3702, %f2524, %f2523, %p540;
$L__BB0_204:                            // %__internal_trig_reduction_kernel.exit.i
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2526, %f3702, %f3702;
	fma.rn.f32 	%f2527, %f2526, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2528, %f2527, %f2526, 0f3CC70000;
	fma.rn.f32 	%f2529, %f2528, %f2526, 0f3D5B0000;
	fma.rn.f32 	%f2530, %f2529, %f2526, 0f3E089438;
	fma.rn.f32 	%f2531, %f2530, %f2526, 0f3EAAAA88;
	mul.rn.f32 	%f2532, %f2526, %f3702;
	fma.rn.f32 	%f2533, %f2531, %f2532, %f3702;
	abs.f32 	%f2534, %f3702;
	setp.eq.f32 	%p541, %f2534, 0f3A00B43C;
	selp.f32 	%f3647, %f3702, %f2533, %p541;
	and.b32  	%r954, %r1860, 1;
	setp.eq.b32 	%p542, %r954, 1;
	not.pred 	%p543, %p542;
	@%p543 bra 	$L__BB0_206;
// %bb.205:                             //   in Loop: Header=BB0_1 Depth=1
	neg.f32 	%f2536, %f3647;
	// begin inline asm
	rcp.approx.ftz.f32 %f3647,%f2536;
	// end inline asm
$L__BB0_206:                            // %__nv_tanf.exit
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2537, %f3648, 0f3F22F983;
	cvt.rni.s32.f32 	%r1863, %f2537;
	cvt.rn.f32.s32 	%f2538, %r1863;
	fma.rn.f32 	%f2539, %f2538, 0fBFC90FDA, %f3648;
	fma.rn.f32 	%f2540, %f2538, 0fB3A22168, %f2539;
	fma.rn.f32 	%f3704, %f2538, 0fA7C234C5, %f2540;
	abs.f32 	%f302, %f3648;
	setp.ltu.f32 	%p544, %f302, 0f47CE4780;
	@%p544 bra 	$L__BB0_214;
// %bb.207:                             // %__nv_isinff.exit.i.i362
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p545, %f302, 0f7F800000;
	@%p545 bra 	$L__BB0_209;
// %bb.208:                             // %__nv_fmul_rn.exit.i.i383
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2543, 0f00000000;
	mul.rn.f32 	%f3704, %f3648, %f2543;
	mov.b32 	%r1863, 0;
	bra.uni 	$L__BB0_214;
$L__BB0_209:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r271, %f3648;
	shr.u32 	%r272, %r271, 23;
	and.b32  	%r956, %r272, 224;
	add.s32 	%r957, %r956, -128;
	shl.b32 	%r958, %r271, 8;
	or.b32  	%r273, %r958, -2147483648;
	shr.u32 	%r274, %r957, 5;
	mov.b32 	%r1861, 0;
	mov.b64 	%rd530, 0;
$L__BB0_210:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd268, %rd510, %rd530;
	ld.global.nc.u32 	%r961, [%rd268];
	// begin inline asm
	{
	mad.lo.cc.u32   %r959, %r961, %r273, %r1861;
	madc.hi.u32     %r1861, %r961, %r273,  0;
	}
	// end inline asm
	add.s64 	%rd269, %rd7, %rd530;
	st.local.u32 	[%rd269], %r959;
	add.s64 	%rd530, %rd530, 4;
	cvt.u32.u64 	%r964, %rd530;
	setp.ne.s32 	%p546, %r964, 24;
	@%p546 bra 	$L__BB0_210;
// %bb.211:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd7+24], %r1861;
	mul.wide.u32 	%rd270, %r274, 4;
	sub.s64 	%rd106, %rd7, %rd270;
	ld.local.u32 	%r277, [%rd106+24];
	ld.local.u32 	%r278, [%rd106+20];
	and.b32  	%r966, %r271, 260046848;
	setp.eq.s32 	%p547, %r966, 0;
	mov.u32 	%r1862, %r278;
	@%p547 bra 	$L__BB0_213;
// %bb.212:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r967, [%rd106+16];
	shf.l.wrap.b32 	%r1862, %r967, %r278, %r272;
$L__BB0_213:                            // %__internal_trig_reduction_slowpath.exit.i.i366
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r968, %r278, %r277, %r272;
	shr.u32 	%r969, %r968, 30;
	shf.l.wrap.b32 	%r970, %r1862, %r968, 2;
	shl.b32 	%r971, %r1862, 2;
	shr.u32 	%r972, %r970, 31;
	add.s32 	%r973, %r972, %r969;
	neg.s32 	%r974, %r973;
	setp.lt.s32 	%p548, %r271, 0;
	selp.b32 	%r1863, %r974, %r973, %p548;
	xor.b32  	%r975, %r970, %r271;
	shr.s32 	%r976, %r970, 31;
	xor.b32  	%r977, %r976, %r970;
	xor.b32  	%r978, %r976, %r971;
	cvt.u64.u32 	%rd271, %r977;
	shl.b64 	%rd272, %rd271, 32;
	cvt.u64.u32 	%rd273, %r978;
	or.b64  	%rd274, %rd272, %rd273;
	cvt.rn.f64.s64 	%fd3, %rd274;
	mul.rn.f64 	%fd4, %fd3, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2541, %fd4;
	neg.f32 	%f2542, %f2541;
	setp.lt.s32 	%p549, %r975, 0;
	selp.f32 	%f3704, %f2542, %f2541, %p549;
$L__BB0_214:                            // %__internal_trig_reduction_kernel.exit.i377
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2544, %f3704, %f3704;
	fma.rn.f32 	%f2545, %f2544, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2546, %f2545, %f2544, 0f3CC70000;
	fma.rn.f32 	%f2547, %f2546, %f2544, 0f3D5B0000;
	fma.rn.f32 	%f2548, %f2547, %f2544, 0f3E089438;
	fma.rn.f32 	%f2549, %f2548, %f2544, 0f3EAAAA88;
	mul.rn.f32 	%f2550, %f2544, %f3704;
	fma.rn.f32 	%f2551, %f2549, %f2550, %f3704;
	abs.f32 	%f2552, %f3704;
	setp.eq.f32 	%p550, %f2552, 0f3A00B43C;
	selp.f32 	%f3648, %f3704, %f2551, %p550;
	and.b32  	%r980, %r1863, 1;
	setp.eq.b32 	%p551, %r980, 1;
	not.pred 	%p552, %p551;
	@%p552 bra 	$L__BB0_216;
// %bb.215:                             //   in Loop: Header=BB0_1 Depth=1
	neg.f32 	%f2554, %f3648;
	// begin inline asm
	rcp.approx.ftz.f32 %f3648,%f2554;
	// end inline asm
$L__BB0_216:                            // %__nv_tanf.exit384
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2555, %f3649, 0f3F22F983;
	cvt.rni.s32.f32 	%r1866, %f2555;
	cvt.rn.f32.s32 	%f2556, %r1866;
	fma.rn.f32 	%f2557, %f2556, 0fBFC90FDA, %f3649;
	fma.rn.f32 	%f2558, %f2556, 0fB3A22168, %f2557;
	fma.rn.f32 	%f3706, %f2556, 0fA7C234C5, %f2558;
	abs.f32 	%f311, %f3649;
	setp.ltu.f32 	%p553, %f311, 0f47CE4780;
	@%p553 bra 	$L__BB0_224;
// %bb.217:                             // %__nv_isinff.exit.i.i386
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p554, %f311, 0f7F800000;
	@%p554 bra 	$L__BB0_219;
// %bb.218:                             // %__nv_fmul_rn.exit.i.i407
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2561, 0f00000000;
	mul.rn.f32 	%f3706, %f3649, %f2561;
	mov.b32 	%r1866, 0;
	bra.uni 	$L__BB0_224;
$L__BB0_219:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r284, %f3649;
	shr.u32 	%r285, %r284, 23;
	and.b32  	%r982, %r285, 224;
	add.s32 	%r983, %r982, -128;
	shl.b32 	%r984, %r284, 8;
	or.b32  	%r286, %r984, -2147483648;
	shr.u32 	%r287, %r983, 5;
	mov.b32 	%r1864, 0;
	mov.b64 	%rd531, 0;
$L__BB0_220:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd277, %rd510, %rd531;
	ld.global.nc.u32 	%r987, [%rd277];
	// begin inline asm
	{
	mad.lo.cc.u32   %r985, %r987, %r286, %r1864;
	madc.hi.u32     %r1864, %r987, %r286,  0;
	}
	// end inline asm
	add.s64 	%rd278, %rd6, %rd531;
	st.local.u32 	[%rd278], %r985;
	add.s64 	%rd531, %rd531, 4;
	cvt.u32.u64 	%r990, %rd531;
	setp.ne.s32 	%p555, %r990, 24;
	@%p555 bra 	$L__BB0_220;
// %bb.221:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd6+24], %r1864;
	mul.wide.u32 	%rd279, %r287, 4;
	sub.s64 	%rd109, %rd6, %rd279;
	ld.local.u32 	%r290, [%rd109+24];
	ld.local.u32 	%r291, [%rd109+20];
	and.b32  	%r992, %r284, 260046848;
	setp.eq.s32 	%p556, %r992, 0;
	mov.u32 	%r1865, %r291;
	@%p556 bra 	$L__BB0_223;
// %bb.222:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r993, [%rd109+16];
	shf.l.wrap.b32 	%r1865, %r993, %r291, %r285;
$L__BB0_223:                            // %__internal_trig_reduction_slowpath.exit.i.i390
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r994, %r291, %r290, %r285;
	shr.u32 	%r995, %r994, 30;
	shf.l.wrap.b32 	%r996, %r1865, %r994, 2;
	shl.b32 	%r997, %r1865, 2;
	shr.u32 	%r998, %r996, 31;
	add.s32 	%r999, %r998, %r995;
	neg.s32 	%r1000, %r999;
	setp.lt.s32 	%p557, %r284, 0;
	selp.b32 	%r1866, %r1000, %r999, %p557;
	xor.b32  	%r1001, %r996, %r284;
	shr.s32 	%r1002, %r996, 31;
	xor.b32  	%r1003, %r1002, %r996;
	xor.b32  	%r1004, %r1002, %r997;
	cvt.u64.u32 	%rd280, %r1003;
	shl.b64 	%rd281, %rd280, 32;
	cvt.u64.u32 	%rd282, %r1004;
	or.b64  	%rd283, %rd281, %rd282;
	cvt.rn.f64.s64 	%fd5, %rd283;
	mul.rn.f64 	%fd6, %fd5, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2559, %fd6;
	neg.f32 	%f2560, %f2559;
	setp.lt.s32 	%p558, %r1001, 0;
	selp.f32 	%f3706, %f2560, %f2559, %p558;
$L__BB0_224:                            // %__internal_trig_reduction_kernel.exit.i401
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2562, %f3706, %f3706;
	fma.rn.f32 	%f2563, %f2562, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2564, %f2563, %f2562, 0f3CC70000;
	fma.rn.f32 	%f2565, %f2564, %f2562, 0f3D5B0000;
	fma.rn.f32 	%f2566, %f2565, %f2562, 0f3E089438;
	fma.rn.f32 	%f2567, %f2566, %f2562, 0f3EAAAA88;
	mul.rn.f32 	%f2568, %f2562, %f3706;
	fma.rn.f32 	%f2569, %f2567, %f2568, %f3706;
	abs.f32 	%f2570, %f3706;
	setp.eq.f32 	%p559, %f2570, 0f3A00B43C;
	selp.f32 	%f3649, %f3706, %f2569, %p559;
	and.b32  	%r1006, %r1866, 1;
	setp.eq.b32 	%p560, %r1006, 1;
	not.pred 	%p561, %p560;
	@%p561 bra 	$L__BB0_226;
// %bb.225:                             //   in Loop: Header=BB0_1 Depth=1
	neg.f32 	%f2572, %f3649;
	// begin inline asm
	rcp.approx.ftz.f32 %f3649,%f2572;
	// end inline asm
$L__BB0_226:                            // %__nv_tanf.exit408
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2573, %f3650, 0f3F22F983;
	cvt.rni.s32.f32 	%r1869, %f2573;
	cvt.rn.f32.s32 	%f2574, %r1869;
	fma.rn.f32 	%f2575, %f2574, 0fBFC90FDA, %f3650;
	fma.rn.f32 	%f2576, %f2574, 0fB3A22168, %f2575;
	fma.rn.f32 	%f3708, %f2574, 0fA7C234C5, %f2576;
	abs.f32 	%f320, %f3650;
	setp.ltu.f32 	%p562, %f320, 0f47CE4780;
	@%p562 bra 	$L__BB0_234;
// %bb.227:                             // %__nv_isinff.exit.i.i410
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p563, %f320, 0f7F800000;
	@%p563 bra 	$L__BB0_229;
// %bb.228:                             // %__nv_fmul_rn.exit.i.i431
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2579, 0f00000000;
	mul.rn.f32 	%f3708, %f3650, %f2579;
	mov.b32 	%r1869, 0;
	bra.uni 	$L__BB0_234;
$L__BB0_229:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r297, %f3650;
	shr.u32 	%r298, %r297, 23;
	and.b32  	%r1008, %r298, 224;
	add.s32 	%r1009, %r1008, -128;
	shl.b32 	%r1010, %r297, 8;
	or.b32  	%r299, %r1010, -2147483648;
	shr.u32 	%r300, %r1009, 5;
	mov.b32 	%r1867, 0;
	mov.b64 	%rd532, 0;
$L__BB0_230:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd286, %rd510, %rd532;
	ld.global.nc.u32 	%r1013, [%rd286];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1011, %r1013, %r299, %r1867;
	madc.hi.u32     %r1867, %r1013, %r299,  0;
	}
	// end inline asm
	add.s64 	%rd287, %rd5, %rd532;
	st.local.u32 	[%rd287], %r1011;
	add.s64 	%rd532, %rd532, 4;
	cvt.u32.u64 	%r1016, %rd532;
	setp.ne.s32 	%p564, %r1016, 24;
	@%p564 bra 	$L__BB0_230;
// %bb.231:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd5+24], %r1867;
	mul.wide.u32 	%rd288, %r300, 4;
	sub.s64 	%rd112, %rd5, %rd288;
	ld.local.u32 	%r303, [%rd112+24];
	ld.local.u32 	%r304, [%rd112+20];
	and.b32  	%r1018, %r297, 260046848;
	setp.eq.s32 	%p565, %r1018, 0;
	mov.u32 	%r1868, %r304;
	@%p565 bra 	$L__BB0_233;
// %bb.232:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1019, [%rd112+16];
	shf.l.wrap.b32 	%r1868, %r1019, %r304, %r298;
$L__BB0_233:                            // %__internal_trig_reduction_slowpath.exit.i.i414
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1020, %r304, %r303, %r298;
	shr.u32 	%r1021, %r1020, 30;
	shf.l.wrap.b32 	%r1022, %r1868, %r1020, 2;
	shl.b32 	%r1023, %r1868, 2;
	shr.u32 	%r1024, %r1022, 31;
	add.s32 	%r1025, %r1024, %r1021;
	neg.s32 	%r1026, %r1025;
	setp.lt.s32 	%p566, %r297, 0;
	selp.b32 	%r1869, %r1026, %r1025, %p566;
	xor.b32  	%r1027, %r1022, %r297;
	shr.s32 	%r1028, %r1022, 31;
	xor.b32  	%r1029, %r1028, %r1022;
	xor.b32  	%r1030, %r1028, %r1023;
	cvt.u64.u32 	%rd289, %r1029;
	shl.b64 	%rd290, %rd289, 32;
	cvt.u64.u32 	%rd291, %r1030;
	or.b64  	%rd292, %rd290, %rd291;
	cvt.rn.f64.s64 	%fd7, %rd292;
	mul.rn.f64 	%fd8, %fd7, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2577, %fd8;
	neg.f32 	%f2578, %f2577;
	setp.lt.s32 	%p567, %r1027, 0;
	selp.f32 	%f3708, %f2578, %f2577, %p567;
$L__BB0_234:                            // %__internal_trig_reduction_kernel.exit.i425
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2580, %f3708, %f3708;
	fma.rn.f32 	%f2581, %f2580, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2582, %f2581, %f2580, 0f3CC70000;
	fma.rn.f32 	%f2583, %f2582, %f2580, 0f3D5B0000;
	fma.rn.f32 	%f2584, %f2583, %f2580, 0f3E089438;
	fma.rn.f32 	%f2585, %f2584, %f2580, 0f3EAAAA88;
	mul.rn.f32 	%f2586, %f2580, %f3708;
	fma.rn.f32 	%f2587, %f2585, %f2586, %f3708;
	abs.f32 	%f2588, %f3708;
	setp.eq.f32 	%p568, %f2588, 0f3A00B43C;
	selp.f32 	%f3650, %f3708, %f2587, %p568;
	and.b32  	%r1032, %r1869, 1;
	setp.eq.b32 	%p569, %r1032, 1;
	not.pred 	%p570, %p569;
	@%p570 bra 	$L__BB0_236;
// %bb.235:                             //   in Loop: Header=BB0_1 Depth=1
	neg.f32 	%f2590, %f3650;
	// begin inline asm
	rcp.approx.ftz.f32 %f3650,%f2590;
	// end inline asm
$L__BB0_236:                            // %__nv_tanf.exit432
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2591, %f3651, 0f3F22F983;
	cvt.rni.s32.f32 	%r1872, %f2591;
	cvt.rn.f32.s32 	%f2592, %r1872;
	fma.rn.f32 	%f2593, %f2592, 0fBFC90FDA, %f3651;
	fma.rn.f32 	%f2594, %f2592, 0fB3A22168, %f2593;
	fma.rn.f32 	%f3710, %f2592, 0fA7C234C5, %f2594;
	abs.f32 	%f329, %f3651;
	setp.ltu.f32 	%p571, %f329, 0f47CE4780;
	@%p571 bra 	$L__BB0_244;
// %bb.237:                             // %__nv_isinff.exit.i.i434
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p572, %f329, 0f7F800000;
	@%p572 bra 	$L__BB0_239;
// %bb.238:                             // %__nv_fmul_rn.exit.i.i455
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2597, 0f00000000;
	mul.rn.f32 	%f3710, %f3651, %f2597;
	mov.b32 	%r1872, 0;
	bra.uni 	$L__BB0_244;
$L__BB0_239:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r310, %f3651;
	shr.u32 	%r311, %r310, 23;
	and.b32  	%r1034, %r311, 224;
	add.s32 	%r1035, %r1034, -128;
	shl.b32 	%r1036, %r310, 8;
	or.b32  	%r312, %r1036, -2147483648;
	shr.u32 	%r313, %r1035, 5;
	mov.b32 	%r1870, 0;
	mov.b64 	%rd533, 0;
$L__BB0_240:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd295, %rd510, %rd533;
	ld.global.nc.u32 	%r1039, [%rd295];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1037, %r1039, %r312, %r1870;
	madc.hi.u32     %r1870, %r1039, %r312,  0;
	}
	// end inline asm
	add.s64 	%rd296, %rd4, %rd533;
	st.local.u32 	[%rd296], %r1037;
	add.s64 	%rd533, %rd533, 4;
	cvt.u32.u64 	%r1042, %rd533;
	setp.ne.s32 	%p573, %r1042, 24;
	@%p573 bra 	$L__BB0_240;
// %bb.241:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd4+24], %r1870;
	mul.wide.u32 	%rd297, %r313, 4;
	sub.s64 	%rd115, %rd4, %rd297;
	ld.local.u32 	%r316, [%rd115+24];
	ld.local.u32 	%r317, [%rd115+20];
	and.b32  	%r1044, %r310, 260046848;
	setp.eq.s32 	%p574, %r1044, 0;
	mov.u32 	%r1871, %r317;
	@%p574 bra 	$L__BB0_243;
// %bb.242:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1045, [%rd115+16];
	shf.l.wrap.b32 	%r1871, %r1045, %r317, %r311;
$L__BB0_243:                            // %__internal_trig_reduction_slowpath.exit.i.i438
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1046, %r317, %r316, %r311;
	shr.u32 	%r1047, %r1046, 30;
	shf.l.wrap.b32 	%r1048, %r1871, %r1046, 2;
	shl.b32 	%r1049, %r1871, 2;
	shr.u32 	%r1050, %r1048, 31;
	add.s32 	%r1051, %r1050, %r1047;
	neg.s32 	%r1052, %r1051;
	setp.lt.s32 	%p575, %r310, 0;
	selp.b32 	%r1872, %r1052, %r1051, %p575;
	xor.b32  	%r1053, %r1048, %r310;
	shr.s32 	%r1054, %r1048, 31;
	xor.b32  	%r1055, %r1054, %r1048;
	xor.b32  	%r1056, %r1054, %r1049;
	cvt.u64.u32 	%rd298, %r1055;
	shl.b64 	%rd299, %rd298, 32;
	cvt.u64.u32 	%rd300, %r1056;
	or.b64  	%rd301, %rd299, %rd300;
	cvt.rn.f64.s64 	%fd9, %rd301;
	mul.rn.f64 	%fd10, %fd9, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2595, %fd10;
	neg.f32 	%f2596, %f2595;
	setp.lt.s32 	%p576, %r1053, 0;
	selp.f32 	%f3710, %f2596, %f2595, %p576;
$L__BB0_244:                            // %__internal_trig_reduction_kernel.exit.i449
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2598, %f3710, %f3710;
	fma.rn.f32 	%f2599, %f2598, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2600, %f2599, %f2598, 0f3CC70000;
	fma.rn.f32 	%f2601, %f2600, %f2598, 0f3D5B0000;
	fma.rn.f32 	%f2602, %f2601, %f2598, 0f3E089438;
	fma.rn.f32 	%f2603, %f2602, %f2598, 0f3EAAAA88;
	mul.rn.f32 	%f2604, %f2598, %f3710;
	fma.rn.f32 	%f2605, %f2603, %f2604, %f3710;
	abs.f32 	%f2606, %f3710;
	setp.eq.f32 	%p577, %f2606, 0f3A00B43C;
	selp.f32 	%f3651, %f3710, %f2605, %p577;
	and.b32  	%r1058, %r1872, 1;
	setp.eq.b32 	%p578, %r1058, 1;
	not.pred 	%p579, %p578;
	@%p579 bra 	$L__BB0_246;
// %bb.245:                             //   in Loop: Header=BB0_1 Depth=1
	neg.f32 	%f2608, %f3651;
	// begin inline asm
	rcp.approx.ftz.f32 %f3651,%f2608;
	// end inline asm
$L__BB0_246:                            // %__nv_tanf.exit456
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2609, %f3652, 0f3F22F983;
	cvt.rni.s32.f32 	%r1875, %f2609;
	cvt.rn.f32.s32 	%f2610, %r1875;
	fma.rn.f32 	%f2611, %f2610, 0fBFC90FDA, %f3652;
	fma.rn.f32 	%f2612, %f2610, 0fB3A22168, %f2611;
	fma.rn.f32 	%f3712, %f2610, 0fA7C234C5, %f2612;
	abs.f32 	%f338, %f3652;
	setp.ltu.f32 	%p580, %f338, 0f47CE4780;
	@%p580 bra 	$L__BB0_254;
// %bb.247:                             // %__nv_isinff.exit.i.i458
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p581, %f338, 0f7F800000;
	@%p581 bra 	$L__BB0_249;
// %bb.248:                             // %__nv_fmul_rn.exit.i.i479
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2615, 0f00000000;
	mul.rn.f32 	%f3712, %f3652, %f2615;
	mov.b32 	%r1875, 0;
	bra.uni 	$L__BB0_254;
$L__BB0_249:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r323, %f3652;
	shr.u32 	%r324, %r323, 23;
	and.b32  	%r1060, %r324, 224;
	add.s32 	%r1061, %r1060, -128;
	shl.b32 	%r1062, %r323, 8;
	or.b32  	%r325, %r1062, -2147483648;
	shr.u32 	%r326, %r1061, 5;
	mov.b32 	%r1873, 0;
	mov.b64 	%rd534, 0;
$L__BB0_250:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd304, %rd510, %rd534;
	ld.global.nc.u32 	%r1065, [%rd304];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1063, %r1065, %r325, %r1873;
	madc.hi.u32     %r1873, %r1065, %r325,  0;
	}
	// end inline asm
	add.s64 	%rd305, %rd3, %rd534;
	st.local.u32 	[%rd305], %r1063;
	add.s64 	%rd534, %rd534, 4;
	cvt.u32.u64 	%r1068, %rd534;
	setp.ne.s32 	%p582, %r1068, 24;
	@%p582 bra 	$L__BB0_250;
// %bb.251:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd3+24], %r1873;
	mul.wide.u32 	%rd306, %r326, 4;
	sub.s64 	%rd118, %rd3, %rd306;
	ld.local.u32 	%r329, [%rd118+24];
	ld.local.u32 	%r330, [%rd118+20];
	and.b32  	%r1070, %r323, 260046848;
	setp.eq.s32 	%p583, %r1070, 0;
	mov.u32 	%r1874, %r330;
	@%p583 bra 	$L__BB0_253;
// %bb.252:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1071, [%rd118+16];
	shf.l.wrap.b32 	%r1874, %r1071, %r330, %r324;
$L__BB0_253:                            // %__internal_trig_reduction_slowpath.exit.i.i462
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1072, %r330, %r329, %r324;
	shr.u32 	%r1073, %r1072, 30;
	shf.l.wrap.b32 	%r1074, %r1874, %r1072, 2;
	shl.b32 	%r1075, %r1874, 2;
	shr.u32 	%r1076, %r1074, 31;
	add.s32 	%r1077, %r1076, %r1073;
	neg.s32 	%r1078, %r1077;
	setp.lt.s32 	%p584, %r323, 0;
	selp.b32 	%r1875, %r1078, %r1077, %p584;
	xor.b32  	%r1079, %r1074, %r323;
	shr.s32 	%r1080, %r1074, 31;
	xor.b32  	%r1081, %r1080, %r1074;
	xor.b32  	%r1082, %r1080, %r1075;
	cvt.u64.u32 	%rd307, %r1081;
	shl.b64 	%rd308, %rd307, 32;
	cvt.u64.u32 	%rd309, %r1082;
	or.b64  	%rd310, %rd308, %rd309;
	cvt.rn.f64.s64 	%fd11, %rd310;
	mul.rn.f64 	%fd12, %fd11, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2613, %fd12;
	neg.f32 	%f2614, %f2613;
	setp.lt.s32 	%p585, %r1079, 0;
	selp.f32 	%f3712, %f2614, %f2613, %p585;
$L__BB0_254:                            // %__internal_trig_reduction_kernel.exit.i473
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2616, %f3712, %f3712;
	fma.rn.f32 	%f2617, %f2616, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2618, %f2617, %f2616, 0f3CC70000;
	fma.rn.f32 	%f2619, %f2618, %f2616, 0f3D5B0000;
	fma.rn.f32 	%f2620, %f2619, %f2616, 0f3E089438;
	fma.rn.f32 	%f2621, %f2620, %f2616, 0f3EAAAA88;
	mul.rn.f32 	%f2622, %f2616, %f3712;
	fma.rn.f32 	%f2623, %f2621, %f2622, %f3712;
	abs.f32 	%f2624, %f3712;
	setp.eq.f32 	%p586, %f2624, 0f3A00B43C;
	selp.f32 	%f3652, %f3712, %f2623, %p586;
	and.b32  	%r1084, %r1875, 1;
	setp.eq.b32 	%p587, %r1084, 1;
	not.pred 	%p588, %p587;
	@%p588 bra 	$L__BB0_256;
// %bb.255:                             //   in Loop: Header=BB0_1 Depth=1
	neg.f32 	%f2626, %f3652;
	// begin inline asm
	rcp.approx.ftz.f32 %f3652,%f2626;
	// end inline asm
$L__BB0_256:                            // %__nv_tanf.exit480
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2627, %f3653, 0f3F22F983;
	cvt.rni.s32.f32 	%r1878, %f2627;
	cvt.rn.f32.s32 	%f2628, %r1878;
	fma.rn.f32 	%f2629, %f2628, 0fBFC90FDA, %f3653;
	fma.rn.f32 	%f2630, %f2628, 0fB3A22168, %f2629;
	fma.rn.f32 	%f3714, %f2628, 0fA7C234C5, %f2630;
	abs.f32 	%f347, %f3653;
	setp.ltu.f32 	%p589, %f347, 0f47CE4780;
	@%p589 bra 	$L__BB0_264;
// %bb.257:                             // %__nv_isinff.exit.i.i482
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p590, %f347, 0f7F800000;
	@%p590 bra 	$L__BB0_259;
// %bb.258:                             // %__nv_fmul_rn.exit.i.i503
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2633, 0f00000000;
	mul.rn.f32 	%f3714, %f3653, %f2633;
	mov.b32 	%r1878, 0;
	bra.uni 	$L__BB0_264;
$L__BB0_259:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r336, %f3653;
	shr.u32 	%r337, %r336, 23;
	and.b32  	%r1086, %r337, 224;
	add.s32 	%r1087, %r1086, -128;
	shl.b32 	%r1088, %r336, 8;
	or.b32  	%r338, %r1088, -2147483648;
	shr.u32 	%r339, %r1087, 5;
	mov.b32 	%r1876, 0;
	mov.b64 	%rd535, 0;
$L__BB0_260:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd313, %rd510, %rd535;
	ld.global.nc.u32 	%r1091, [%rd313];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1089, %r1091, %r338, %r1876;
	madc.hi.u32     %r1876, %r1091, %r338,  0;
	}
	// end inline asm
	add.s64 	%rd314, %rd2, %rd535;
	st.local.u32 	[%rd314], %r1089;
	add.s64 	%rd535, %rd535, 4;
	cvt.u32.u64 	%r1094, %rd535;
	setp.ne.s32 	%p591, %r1094, 24;
	@%p591 bra 	$L__BB0_260;
// %bb.261:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd2+24], %r1876;
	mul.wide.u32 	%rd315, %r339, 4;
	sub.s64 	%rd121, %rd2, %rd315;
	ld.local.u32 	%r342, [%rd121+24];
	ld.local.u32 	%r343, [%rd121+20];
	and.b32  	%r1096, %r336, 260046848;
	setp.eq.s32 	%p592, %r1096, 0;
	mov.u32 	%r1877, %r343;
	@%p592 bra 	$L__BB0_263;
// %bb.262:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1097, [%rd121+16];
	shf.l.wrap.b32 	%r1877, %r1097, %r343, %r337;
$L__BB0_263:                            // %__internal_trig_reduction_slowpath.exit.i.i486
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1098, %r343, %r342, %r337;
	shr.u32 	%r1099, %r1098, 30;
	shf.l.wrap.b32 	%r1100, %r1877, %r1098, 2;
	shl.b32 	%r1101, %r1877, 2;
	shr.u32 	%r1102, %r1100, 31;
	add.s32 	%r1103, %r1102, %r1099;
	neg.s32 	%r1104, %r1103;
	setp.lt.s32 	%p593, %r336, 0;
	selp.b32 	%r1878, %r1104, %r1103, %p593;
	xor.b32  	%r1105, %r1100, %r336;
	shr.s32 	%r1106, %r1100, 31;
	xor.b32  	%r1107, %r1106, %r1100;
	xor.b32  	%r1108, %r1106, %r1101;
	cvt.u64.u32 	%rd316, %r1107;
	shl.b64 	%rd317, %rd316, 32;
	cvt.u64.u32 	%rd318, %r1108;
	or.b64  	%rd319, %rd317, %rd318;
	cvt.rn.f64.s64 	%fd13, %rd319;
	mul.rn.f64 	%fd14, %fd13, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2631, %fd14;
	neg.f32 	%f2632, %f2631;
	setp.lt.s32 	%p594, %r1105, 0;
	selp.f32 	%f3714, %f2632, %f2631, %p594;
$L__BB0_264:                            // %__internal_trig_reduction_kernel.exit.i497
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2634, %f3714, %f3714;
	fma.rn.f32 	%f2635, %f2634, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2636, %f2635, %f2634, 0f3CC70000;
	fma.rn.f32 	%f2637, %f2636, %f2634, 0f3D5B0000;
	fma.rn.f32 	%f2638, %f2637, %f2634, 0f3E089438;
	fma.rn.f32 	%f2639, %f2638, %f2634, 0f3EAAAA88;
	mul.rn.f32 	%f2640, %f2634, %f3714;
	fma.rn.f32 	%f2641, %f2639, %f2640, %f3714;
	abs.f32 	%f2642, %f3714;
	setp.eq.f32 	%p595, %f2642, 0f3A00B43C;
	selp.f32 	%f3653, %f3714, %f2641, %p595;
	and.b32  	%r1110, %r1878, 1;
	setp.eq.b32 	%p596, %r1110, 1;
	not.pred 	%p597, %p596;
	@%p597 bra 	$L__BB0_266;
// %bb.265:                             //   in Loop: Header=BB0_1 Depth=1
	neg.f32 	%f2644, %f3653;
	// begin inline asm
	rcp.approx.ftz.f32 %f3653,%f2644;
	// end inline asm
$L__BB0_266:                            // %__nv_tanf.exit504
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2645, %f8, 0f3F22F983;
	cvt.rni.s32.f32 	%r1881, %f2645;
	cvt.rn.f32.s32 	%f2646, %r1881;
	fma.rn.f32 	%f2647, %f2646, 0fBFC90FDA, %f8;
	fma.rn.f32 	%f2648, %f2646, 0fB3A22168, %f2647;
	fma.rn.f32 	%f3716, %f2646, 0fA7C234C5, %f2648;
	abs.f32 	%f356, %f8;
	setp.ltu.f32 	%p598, %f356, 0f47CE4780;
	@%p598 bra 	$L__BB0_274;
// %bb.267:                             // %__nv_isinff.exit.i.i506
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p599, %f356, 0f7F800000;
	@%p599 bra 	$L__BB0_269;
// %bb.268:                             // %__nv_fmul_rn.exit.i.i527
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2651, 0f00000000;
	mul.rn.f32 	%f3716, %f8, %f2651;
	mov.b32 	%r1881, 0;
	bra.uni 	$L__BB0_274;
$L__BB0_269:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r349, %f8;
	shr.u32 	%r350, %r349, 23;
	and.b32  	%r1112, %r350, 224;
	add.s32 	%r1113, %r1112, -128;
	shl.b32 	%r1114, %r349, 8;
	or.b32  	%r351, %r1114, -2147483648;
	shr.u32 	%r352, %r1113, 5;
	mov.b32 	%r1879, 0;
	mov.b64 	%rd536, 0;
$L__BB0_270:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	add.s64 	%rd322, %rd510, %rd536;
	ld.global.nc.u32 	%r1117, [%rd322];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1115, %r1117, %r351, %r1879;
	madc.hi.u32     %r1879, %r1117, %r351,  0;
	}
	// end inline asm
	add.s64 	%rd323, %rd1, %rd536;
	st.local.u32 	[%rd323], %r1115;
	add.s64 	%rd536, %rd536, 4;
	cvt.u32.u64 	%r1120, %rd536;
	setp.ne.s32 	%p600, %r1120, 24;
	@%p600 bra 	$L__BB0_270;
// %bb.271:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd1+24], %r1879;
	mul.wide.u32 	%rd324, %r352, 4;
	sub.s64 	%rd124, %rd1, %rd324;
	ld.local.u32 	%r355, [%rd124+24];
	ld.local.u32 	%r356, [%rd124+20];
	and.b32  	%r1122, %r349, 260046848;
	setp.eq.s32 	%p601, %r1122, 0;
	mov.u32 	%r1880, %r356;
	@%p601 bra 	$L__BB0_273;
// %bb.272:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1123, [%rd124+16];
	shf.l.wrap.b32 	%r1880, %r1123, %r356, %r350;
$L__BB0_273:                            // %__internal_trig_reduction_slowpath.exit.i.i510
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1124, %r356, %r355, %r350;
	shr.u32 	%r1125, %r1124, 30;
	shf.l.wrap.b32 	%r1126, %r1880, %r1124, 2;
	shl.b32 	%r1127, %r1880, 2;
	shr.u32 	%r1128, %r1126, 31;
	add.s32 	%r1129, %r1128, %r1125;
	neg.s32 	%r1130, %r1129;
	setp.lt.s32 	%p602, %r349, 0;
	selp.b32 	%r1881, %r1130, %r1129, %p602;
	xor.b32  	%r1131, %r1126, %r349;
	shr.s32 	%r1132, %r1126, 31;
	xor.b32  	%r1133, %r1132, %r1126;
	xor.b32  	%r1134, %r1132, %r1127;
	cvt.u64.u32 	%rd325, %r1133;
	shl.b64 	%rd326, %rd325, 32;
	cvt.u64.u32 	%rd327, %r1134;
	or.b64  	%rd328, %rd326, %rd327;
	cvt.rn.f64.s64 	%fd15, %rd328;
	mul.rn.f64 	%fd16, %fd15, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2649, %fd16;
	neg.f32 	%f2650, %f2649;
	setp.lt.s32 	%p603, %r1131, 0;
	selp.f32 	%f3716, %f2650, %f2649, %p603;
$L__BB0_274:                            // %__internal_trig_reduction_kernel.exit.i521
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2652, %f3716, %f3716;
	fma.rn.f32 	%f2653, %f2652, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f2654, %f2653, %f2652, 0f3CC70000;
	fma.rn.f32 	%f2655, %f2654, %f2652, 0f3D5B0000;
	fma.rn.f32 	%f2656, %f2655, %f2652, 0f3E089438;
	fma.rn.f32 	%f2657, %f2656, %f2652, 0f3EAAAA88;
	mul.rn.f32 	%f2658, %f2652, %f3716;
	fma.rn.f32 	%f2659, %f2657, %f2658, %f3716;
	abs.f32 	%f2660, %f3716;
	setp.eq.f32 	%p604, %f2660, 0f3A00B43C;
	selp.f32 	%f3654, %f3716, %f2659, %p604;
	and.b32  	%r1136, %r1881, 1;
	setp.eq.b32 	%p605, %r1136, 1;
	not.pred 	%p606, %p605;
	@%p606 bra 	$L__BB0_276;
// %bb.275:                             //   in Loop: Header=BB0_1 Depth=1
	neg.f32 	%f2662, %f3654;
	// begin inline asm
	rcp.approx.ftz.f32 %f3654,%f2662;
	// end inline asm
$L__BB0_276:                            // %__nv_tanf.exit528
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_134:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r154, %f3647;
	shr.u32 	%r155, %r154, 23;
	and.b32  	%r1138, %r155, 224;
	add.s32 	%r1139, %r1138, -128;
	shl.b32 	%r1140, %r154, 8;
	or.b32  	%r156, %r1140, -2147483648;
	shr.u32 	%r157, %r1139, 5;
	mov.b32 	%r1834, 0;
	mov.b64 	%rd521, 0;
$L__BB0_135:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd330, __cudart_i2opi_f;
	add.s64 	%rd331, %rd330, %rd521;
	ld.global.nc.u32 	%r1143, [%rd331];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1141, %r1143, %r156, %r1834;
	madc.hi.u32     %r1834, %r1143, %r156,  0;
	}
	// end inline asm
	add.s64 	%rd332, %rd16, %rd521;
	st.local.u32 	[%rd332], %r1141;
	add.s64 	%rd521, %rd521, 4;
	cvt.u32.u64 	%r1146, %rd521;
	setp.ne.s32 	%p609, %r1146, 24;
	@%p609 bra 	$L__BB0_135;
// %bb.136:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd16+24], %r1834;
	mul.wide.u32 	%rd333, %r157, 4;
	sub.s64 	%rd79, %rd16, %rd333;
	ld.local.u32 	%r160, [%rd79+24];
	ld.local.u32 	%r161, [%rd79+20];
	and.b32  	%r1148, %r154, 260046848;
	setp.eq.s32 	%p610, %r1148, 0;
	mov.u32 	%r1835, %r161;
	@%p610 bra 	$L__BB0_138;
// %bb.137:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1149, [%rd79+16];
	shf.l.wrap.b32 	%r1835, %r1149, %r161, %r155;
$L__BB0_138:                            // %__internal_trig_reduction_slowpath.exit.i.i.i177
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1150, %r161, %r160, %r155;
	shr.u32 	%r1151, %r1150, 30;
	shf.l.wrap.b32 	%r1152, %r1835, %r1150, 2;
	shl.b32 	%r1153, %r1835, 2;
	shr.u32 	%r1154, %r1152, 31;
	add.s32 	%r1155, %r1154, %r1151;
	neg.s32 	%r1156, %r1155;
	setp.lt.s32 	%p611, %r154, 0;
	selp.b32 	%r1836, %r1156, %r1155, %p611;
	xor.b32  	%r1157, %r1152, %r154;
	shr.s32 	%r1158, %r1152, 31;
	xor.b32  	%r1159, %r1158, %r1152;
	xor.b32  	%r1160, %r1158, %r1153;
	cvt.u64.u32 	%rd334, %r1159;
	shl.b64 	%rd335, %rd334, 32;
	cvt.u64.u32 	%rd336, %r1160;
	or.b64  	%rd337, %rd335, %rd336;
	cvt.rn.f64.s64 	%fd17, %rd337;
	mul.rn.f64 	%fd18, %fd17, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2667, %fd18;
	neg.f32 	%f2668, %f2667;
	setp.lt.s32 	%p612, %r1157, 0;
	selp.f32 	%f3694, %f2668, %f2667, %p612;
$L__BB0_139:                            // %__nv_cosf.exit
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2670, %f3694, %f3694;
	mul.rn.f32 	%f2682, %f3648, 0f3F22F983;
	cvt.rni.s32.f32 	%r1839, %f2682;
	cvt.rn.f32.s32 	%f2683, %r1839;
	fma.rn.f32 	%f2684, %f2683, 0fBFC90FDA, %f3648;
	fma.rn.f32 	%f2685, %f2683, 0fB3A22168, %f2684;
	fma.rn.f32 	%f3695, %f2683, 0fA7C234C5, %f2685;
	abs.f32 	%f251, %f3648;
	setp.ltu.f32 	%p615, %f251, 0f47CE4780;
	@%p615 bra 	$L__BB0_147;
// %bb.140:                             // %__nv_isinff.exit.i.i.i194
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p616, %f251, 0f7F800000;
	@%p616 bra 	$L__BB0_142;
// %bb.141:                             // %__nv_fmul_rn.exit.i.i.i214
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2688, 0f00000000;
	mul.rn.f32 	%f3695, %f3648, %f2688;
	mov.b32 	%r1839, 0;
	bra.uni 	$L__BB0_147;
$L__BB0_142:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r167, %f3648;
	shr.u32 	%r168, %r167, 23;
	and.b32  	%r1166, %r168, 224;
	add.s32 	%r1167, %r1166, -128;
	shl.b32 	%r1168, %r167, 8;
	or.b32  	%r169, %r1168, -2147483648;
	shr.u32 	%r170, %r1167, 5;
	mov.b32 	%r1837, 0;
	mov.b64 	%rd522, 0;
$L__BB0_143:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd339, __cudart_i2opi_f;
	add.s64 	%rd340, %rd339, %rd522;
	ld.global.nc.u32 	%r1171, [%rd340];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1169, %r1171, %r169, %r1837;
	madc.hi.u32     %r1837, %r1171, %r169,  0;
	}
	// end inline asm
	add.s64 	%rd341, %rd15, %rd522;
	st.local.u32 	[%rd341], %r1169;
	add.s64 	%rd522, %rd522, 4;
	cvt.u32.u64 	%r1174, %rd522;
	setp.ne.s32 	%p617, %r1174, 24;
	@%p617 bra 	$L__BB0_143;
// %bb.144:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd15+24], %r1837;
	mul.wide.u32 	%rd342, %r170, 4;
	sub.s64 	%rd82, %rd15, %rd342;
	ld.local.u32 	%r173, [%rd82+24];
	ld.local.u32 	%r174, [%rd82+20];
	and.b32  	%r1176, %r167, 260046848;
	setp.eq.s32 	%p618, %r1176, 0;
	mov.u32 	%r1838, %r174;
	@%p618 bra 	$L__BB0_146;
// %bb.145:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1177, [%rd82+16];
	shf.l.wrap.b32 	%r1838, %r1177, %r174, %r168;
$L__BB0_146:                            // %__internal_trig_reduction_slowpath.exit.i.i.i198
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1178, %r174, %r173, %r168;
	shr.u32 	%r1179, %r1178, 30;
	shf.l.wrap.b32 	%r1180, %r1838, %r1178, 2;
	shl.b32 	%r1181, %r1838, 2;
	shr.u32 	%r1182, %r1180, 31;
	add.s32 	%r1183, %r1182, %r1179;
	neg.s32 	%r1184, %r1183;
	setp.lt.s32 	%p619, %r167, 0;
	selp.b32 	%r1839, %r1184, %r1183, %p619;
	xor.b32  	%r1185, %r1180, %r167;
	shr.s32 	%r1186, %r1180, 31;
	xor.b32  	%r1187, %r1186, %r1180;
	xor.b32  	%r1188, %r1186, %r1181;
	cvt.u64.u32 	%rd343, %r1187;
	shl.b64 	%rd344, %rd343, 32;
	cvt.u64.u32 	%rd345, %r1188;
	or.b64  	%rd346, %rd344, %rd345;
	cvt.rn.f64.s64 	%fd19, %rd346;
	mul.rn.f64 	%fd20, %fd19, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2686, %fd20;
	neg.f32 	%f2687, %f2686;
	setp.lt.s32 	%p620, %r1185, 0;
	selp.f32 	%f3695, %f2687, %f2686, %p620;
$L__BB0_147:                            // %__nv_cosf.exit215
                                        //   in Loop: Header=BB0_1 Depth=1
	fma.rn.f32 	%f2673, %f2670, 0f37CBAC00, 0fBAB607ED;
	mul.rn.f32 	%f2689, %f3695, %f3695;
	fma.rn.f32 	%f2692, %f2689, 0f37CBAC00, 0fBAB607ED;
	mul.rn.f32 	%f2701, %f3649, 0f3F22F983;
	cvt.rni.s32.f32 	%r1842, %f2701;
	cvt.rn.f32.s32 	%f2702, %r1842;
	fma.rn.f32 	%f2703, %f2702, 0fBFC90FDA, %f3649;
	fma.rn.f32 	%f2704, %f2702, 0fB3A22168, %f2703;
	fma.rn.f32 	%f3696, %f2702, 0fA7C234C5, %f2704;
	abs.f32 	%f257, %f3649;
	setp.ltu.f32 	%p623, %f257, 0f47CE4780;
	@%p623 bra 	$L__BB0_155;
// %bb.148:                             // %__nv_isinff.exit.i.i.i217
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p624, %f257, 0f7F800000;
	@%p624 bra 	$L__BB0_150;
// %bb.149:                             // %__nv_fmul_rn.exit.i.i.i237
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2707, 0f00000000;
	mul.rn.f32 	%f3696, %f3649, %f2707;
	mov.b32 	%r1842, 0;
	bra.uni 	$L__BB0_155;
$L__BB0_150:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r180, %f3649;
	shr.u32 	%r181, %r180, 23;
	and.b32  	%r1194, %r181, 224;
	add.s32 	%r1195, %r1194, -128;
	shl.b32 	%r1196, %r180, 8;
	or.b32  	%r182, %r1196, -2147483648;
	shr.u32 	%r183, %r1195, 5;
	mov.b32 	%r1840, 0;
	mov.b64 	%rd523, 0;
$L__BB0_151:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd348, __cudart_i2opi_f;
	add.s64 	%rd349, %rd348, %rd523;
	ld.global.nc.u32 	%r1199, [%rd349];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1197, %r1199, %r182, %r1840;
	madc.hi.u32     %r1840, %r1199, %r182,  0;
	}
	// end inline asm
	add.s64 	%rd350, %rd14, %rd523;
	st.local.u32 	[%rd350], %r1197;
	add.s64 	%rd523, %rd523, 4;
	cvt.u32.u64 	%r1202, %rd523;
	setp.ne.s32 	%p625, %r1202, 24;
	@%p625 bra 	$L__BB0_151;
// %bb.152:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd14+24], %r1840;
	mul.wide.u32 	%rd351, %r183, 4;
	sub.s64 	%rd85, %rd14, %rd351;
	ld.local.u32 	%r186, [%rd85+24];
	ld.local.u32 	%r187, [%rd85+20];
	and.b32  	%r1204, %r180, 260046848;
	setp.eq.s32 	%p626, %r1204, 0;
	mov.u32 	%r1841, %r187;
	@%p626 bra 	$L__BB0_154;
// %bb.153:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1205, [%rd85+16];
	shf.l.wrap.b32 	%r1841, %r1205, %r187, %r181;
$L__BB0_154:                            // %__internal_trig_reduction_slowpath.exit.i.i.i221
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1206, %r187, %r186, %r181;
	shr.u32 	%r1207, %r1206, 30;
	shf.l.wrap.b32 	%r1208, %r1841, %r1206, 2;
	shl.b32 	%r1209, %r1841, 2;
	shr.u32 	%r1210, %r1208, 31;
	add.s32 	%r1211, %r1210, %r1207;
	neg.s32 	%r1212, %r1211;
	setp.lt.s32 	%p627, %r180, 0;
	selp.b32 	%r1842, %r1212, %r1211, %p627;
	xor.b32  	%r1213, %r1208, %r180;
	shr.s32 	%r1214, %r1208, 31;
	xor.b32  	%r1215, %r1214, %r1208;
	xor.b32  	%r1216, %r1214, %r1209;
	cvt.u64.u32 	%rd352, %r1215;
	shl.b64 	%rd353, %rd352, 32;
	cvt.u64.u32 	%rd354, %r1216;
	or.b64  	%rd355, %rd353, %rd354;
	cvt.rn.f64.s64 	%fd21, %rd355;
	mul.rn.f64 	%fd22, %fd21, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2705, %fd22;
	neg.f32 	%f2706, %f2705;
	setp.lt.s32 	%p628, %r1213, 0;
	selp.f32 	%f3696, %f2706, %f2705, %p628;
$L__BB0_155:                            // %__nv_cosf.exit238
                                        //   in Loop: Header=BB0_1 Depth=1
	and.b32  	%r1163, %r1836, 1;
	setp.eq.b32 	%p613, %r1163, 1;
	selp.f32 	%f2674, 0fB94D4153, %f2673, %p613;
	and.b32  	%r1191, %r1839, 1;
	setp.eq.b32 	%p621, %r1191, 1;
	selp.f32 	%f2693, 0fB94D4153, %f2692, %p621;
	mul.rn.f32 	%f2708, %f3696, %f3696;
	and.b32  	%r1219, %r1842, 1;
	setp.eq.b32 	%p629, %r1219, 1;
	fma.rn.f32 	%f2711, %f2708, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2712, 0fB94D4153, %f2711, %p629;
	mul.rn.f32 	%f2720, %f3650, 0f3F22F983;
	cvt.rni.s32.f32 	%r1845, %f2720;
	cvt.rn.f32.s32 	%f2721, %r1845;
	fma.rn.f32 	%f2722, %f2721, 0fBFC90FDA, %f3650;
	fma.rn.f32 	%f2723, %f2721, 0fB3A22168, %f2722;
	fma.rn.f32 	%f3697, %f2721, 0fA7C234C5, %f2723;
	abs.f32 	%f263, %f3650;
	setp.ltu.f32 	%p631, %f263, 0f47CE4780;
	@%p631 bra 	$L__BB0_163;
// %bb.156:                             // %__nv_isinff.exit.i.i.i240
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p632, %f263, 0f7F800000;
	@%p632 bra 	$L__BB0_158;
// %bb.157:                             // %__nv_fmul_rn.exit.i.i.i260
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2726, 0f00000000;
	mul.rn.f32 	%f3697, %f3650, %f2726;
	mov.b32 	%r1845, 0;
	bra.uni 	$L__BB0_163;
$L__BB0_158:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r193, %f3650;
	shr.u32 	%r194, %r193, 23;
	and.b32  	%r1222, %r194, 224;
	add.s32 	%r1223, %r1222, -128;
	shl.b32 	%r1224, %r193, 8;
	or.b32  	%r195, %r1224, -2147483648;
	shr.u32 	%r196, %r1223, 5;
	mov.b32 	%r1843, 0;
	mov.b64 	%rd524, 0;
$L__BB0_159:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd357, __cudart_i2opi_f;
	add.s64 	%rd358, %rd357, %rd524;
	ld.global.nc.u32 	%r1227, [%rd358];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1225, %r1227, %r195, %r1843;
	madc.hi.u32     %r1843, %r1227, %r195,  0;
	}
	// end inline asm
	add.s64 	%rd359, %rd13, %rd524;
	st.local.u32 	[%rd359], %r1225;
	add.s64 	%rd524, %rd524, 4;
	cvt.u32.u64 	%r1230, %rd524;
	setp.ne.s32 	%p633, %r1230, 24;
	@%p633 bra 	$L__BB0_159;
// %bb.160:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd13+24], %r1843;
	mul.wide.u32 	%rd360, %r196, 4;
	sub.s64 	%rd88, %rd13, %rd360;
	ld.local.u32 	%r199, [%rd88+24];
	ld.local.u32 	%r200, [%rd88+20];
	and.b32  	%r1232, %r193, 260046848;
	setp.eq.s32 	%p634, %r1232, 0;
	mov.u32 	%r1844, %r200;
	@%p634 bra 	$L__BB0_162;
// %bb.161:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1233, [%rd88+16];
	shf.l.wrap.b32 	%r1844, %r1233, %r200, %r194;
$L__BB0_162:                            // %__internal_trig_reduction_slowpath.exit.i.i.i244
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1234, %r200, %r199, %r194;
	shr.u32 	%r1235, %r1234, 30;
	shf.l.wrap.b32 	%r1236, %r1844, %r1234, 2;
	shl.b32 	%r1237, %r1844, 2;
	shr.u32 	%r1238, %r1236, 31;
	add.s32 	%r1239, %r1238, %r1235;
	neg.s32 	%r1240, %r1239;
	setp.lt.s32 	%p635, %r193, 0;
	selp.b32 	%r1845, %r1240, %r1239, %p635;
	xor.b32  	%r1241, %r1236, %r193;
	shr.s32 	%r1242, %r1236, 31;
	xor.b32  	%r1243, %r1242, %r1236;
	xor.b32  	%r1244, %r1242, %r1237;
	cvt.u64.u32 	%rd361, %r1243;
	shl.b64 	%rd362, %rd361, 32;
	cvt.u64.u32 	%rd363, %r1244;
	or.b64  	%rd364, %rd362, %rd363;
	cvt.rn.f64.s64 	%fd23, %rd364;
	mul.rn.f64 	%fd24, %fd23, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2724, %fd24;
	neg.f32 	%f2725, %f2724;
	setp.lt.s32 	%p636, %r1241, 0;
	selp.f32 	%f3697, %f2725, %f2724, %p636;
$L__BB0_163:                            // %__nv_cosf.exit261
                                        //   in Loop: Header=BB0_1 Depth=1
	selp.f32 	%f2671, %f3694, 0f3F800000, %p613;
	selp.f32 	%f2675, 0f3C0885E4, 0f3D2AAABB, %p613;
	fma.rn.f32 	%f2676, %f2674, %f2670, %f2675;
	selp.f32 	%f2690, %f3695, 0f3F800000, %p621;
	selp.f32 	%f2694, 0f3C0885E4, 0f3D2AAABB, %p621;
	fma.rn.f32 	%f2695, %f2693, %f2689, %f2694;
	selp.f32 	%f2709, %f3696, 0f3F800000, %p629;
	selp.f32 	%f2713, 0f3C0885E4, 0f3D2AAABB, %p629;
	fma.rn.f32 	%f2714, %f2712, %f2708, %f2713;
	mul.rn.f32 	%f2727, %f3697, %f3697;
	and.b32  	%r1247, %r1845, 1;
	setp.eq.b32 	%p637, %r1247, 1;
	selp.f32 	%f2728, %f3697, 0f3F800000, %p637;
	fma.rn.f32 	%f2730, %f2727, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2731, 0fB94D4153, %f2730, %p637;
	selp.f32 	%f2732, 0f3C0885E4, 0f3D2AAABB, %p637;
	fma.rn.f32 	%f2733, %f2731, %f2727, %f2732;
	mul.rn.f32 	%f2739, %f3651, 0f3F22F983;
	cvt.rni.s32.f32 	%r1848, %f2739;
	cvt.rn.f32.s32 	%f2740, %r1848;
	fma.rn.f32 	%f2741, %f2740, 0fBFC90FDA, %f3651;
	fma.rn.f32 	%f2742, %f2740, 0fB3A22168, %f2741;
	fma.rn.f32 	%f3698, %f2740, 0fA7C234C5, %f2742;
	abs.f32 	%f269, %f3651;
	setp.ltu.f32 	%p639, %f269, 0f47CE4780;
	@%p639 bra 	$L__BB0_171;
// %bb.164:                             // %__nv_isinff.exit.i.i.i263
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p640, %f269, 0f7F800000;
	@%p640 bra 	$L__BB0_166;
// %bb.165:                             // %__nv_fmul_rn.exit.i.i.i283
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2745, 0f00000000;
	mul.rn.f32 	%f3698, %f3651, %f2745;
	mov.b32 	%r1848, 0;
	bra.uni 	$L__BB0_171;
$L__BB0_166:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r206, %f3651;
	shr.u32 	%r207, %r206, 23;
	and.b32  	%r1250, %r207, 224;
	add.s32 	%r1251, %r1250, -128;
	shl.b32 	%r1252, %r206, 8;
	or.b32  	%r208, %r1252, -2147483648;
	shr.u32 	%r209, %r1251, 5;
	mov.b32 	%r1846, 0;
	mov.b64 	%rd525, 0;
$L__BB0_167:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd366, __cudart_i2opi_f;
	add.s64 	%rd367, %rd366, %rd525;
	ld.global.nc.u32 	%r1255, [%rd367];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1253, %r1255, %r208, %r1846;
	madc.hi.u32     %r1846, %r1255, %r208,  0;
	}
	// end inline asm
	add.s64 	%rd368, %rd12, %rd525;
	st.local.u32 	[%rd368], %r1253;
	add.s64 	%rd525, %rd525, 4;
	cvt.u32.u64 	%r1258, %rd525;
	setp.ne.s32 	%p641, %r1258, 24;
	@%p641 bra 	$L__BB0_167;
// %bb.168:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd12+24], %r1846;
	mul.wide.u32 	%rd369, %r209, 4;
	sub.s64 	%rd91, %rd12, %rd369;
	ld.local.u32 	%r212, [%rd91+24];
	ld.local.u32 	%r213, [%rd91+20];
	and.b32  	%r1260, %r206, 260046848;
	setp.eq.s32 	%p642, %r1260, 0;
	mov.u32 	%r1847, %r213;
	@%p642 bra 	$L__BB0_170;
// %bb.169:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1261, [%rd91+16];
	shf.l.wrap.b32 	%r1847, %r1261, %r213, %r207;
$L__BB0_170:                            // %__internal_trig_reduction_slowpath.exit.i.i.i267
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1262, %r213, %r212, %r207;
	shr.u32 	%r1263, %r1262, 30;
	shf.l.wrap.b32 	%r1264, %r1847, %r1262, 2;
	shl.b32 	%r1265, %r1847, 2;
	shr.u32 	%r1266, %r1264, 31;
	add.s32 	%r1267, %r1266, %r1263;
	neg.s32 	%r1268, %r1267;
	setp.lt.s32 	%p643, %r206, 0;
	selp.b32 	%r1848, %r1268, %r1267, %p643;
	xor.b32  	%r1269, %r1264, %r206;
	shr.s32 	%r1270, %r1264, 31;
	xor.b32  	%r1271, %r1270, %r1264;
	xor.b32  	%r1272, %r1270, %r1265;
	cvt.u64.u32 	%rd370, %r1271;
	shl.b64 	%rd371, %rd370, 32;
	cvt.u64.u32 	%rd372, %r1272;
	or.b64  	%rd373, %rd371, %rd372;
	cvt.rn.f64.s64 	%fd25, %rd373;
	mul.rn.f64 	%fd26, %fd25, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2743, %fd26;
	neg.f32 	%f2744, %f2743;
	setp.lt.s32 	%p644, %r1269, 0;
	selp.f32 	%f3698, %f2744, %f2743, %p644;
$L__BB0_171:                            // %__nv_cosf.exit284
                                        //   in Loop: Header=BB0_1 Depth=1
	fma.rn.f32 	%f2672, %f2670, %f2671, 0f00000000;
	selp.f32 	%f2677, 0fBE2AAAA8, 0fBEFFFFFF, %p613;
	fma.rn.f32 	%f2678, %f2676, %f2670, %f2677;
	fma.rn.f32 	%f2691, %f2689, %f2690, 0f00000000;
	selp.f32 	%f2696, 0fBE2AAAA8, 0fBEFFFFFF, %p621;
	fma.rn.f32 	%f2697, %f2695, %f2689, %f2696;
	fma.rn.f32 	%f2710, %f2708, %f2709, 0f00000000;
	selp.f32 	%f2715, 0fBE2AAAA8, 0fBEFFFFFF, %p629;
	fma.rn.f32 	%f2716, %f2714, %f2708, %f2715;
	fma.rn.f32 	%f2729, %f2727, %f2728, 0f00000000;
	selp.f32 	%f2734, 0fBE2AAAA8, 0fBEFFFFFF, %p637;
	fma.rn.f32 	%f2735, %f2733, %f2727, %f2734;
	mul.rn.f32 	%f2746, %f3698, %f3698;
	and.b32  	%r1275, %r1848, 1;
	setp.eq.b32 	%p645, %r1275, 1;
	selp.f32 	%f2747, %f3698, 0f3F800000, %p645;
	fma.rn.f32 	%f2748, %f2746, %f2747, 0f00000000;
	fma.rn.f32 	%f2749, %f2746, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2750, 0fB94D4153, %f2749, %p645;
	selp.f32 	%f2751, 0f3C0885E4, 0f3D2AAABB, %p645;
	fma.rn.f32 	%f2752, %f2750, %f2746, %f2751;
	selp.f32 	%f2753, 0fBE2AAAA8, 0fBEFFFFFF, %p645;
	fma.rn.f32 	%f2754, %f2752, %f2746, %f2753;
	mul.rn.f32 	%f2758, %f3652, 0f3F22F983;
	cvt.rni.s32.f32 	%r1851, %f2758;
	cvt.rn.f32.s32 	%f2759, %r1851;
	fma.rn.f32 	%f2760, %f2759, 0fBFC90FDA, %f3652;
	fma.rn.f32 	%f2761, %f2759, 0fB3A22168, %f2760;
	fma.rn.f32 	%f3699, %f2759, 0fA7C234C5, %f2761;
	abs.f32 	%f275, %f3652;
	setp.ltu.f32 	%p647, %f275, 0f47CE4780;
	@%p647 bra 	$L__BB0_179;
// %bb.172:                             // %__nv_isinff.exit.i.i.i286
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p648, %f275, 0f7F800000;
	@%p648 bra 	$L__BB0_174;
// %bb.173:                             // %__nv_fmul_rn.exit.i.i.i306
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2764, 0f00000000;
	mul.rn.f32 	%f3699, %f3652, %f2764;
	mov.b32 	%r1851, 0;
	bra.uni 	$L__BB0_179;
$L__BB0_174:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r219, %f3652;
	shr.u32 	%r220, %r219, 23;
	and.b32  	%r1278, %r220, 224;
	add.s32 	%r1279, %r1278, -128;
	shl.b32 	%r1280, %r219, 8;
	or.b32  	%r221, %r1280, -2147483648;
	shr.u32 	%r222, %r1279, 5;
	mov.b32 	%r1849, 0;
	mov.b64 	%rd526, 0;
$L__BB0_175:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd375, __cudart_i2opi_f;
	add.s64 	%rd376, %rd375, %rd526;
	ld.global.nc.u32 	%r1283, [%rd376];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1281, %r1283, %r221, %r1849;
	madc.hi.u32     %r1849, %r1283, %r221,  0;
	}
	// end inline asm
	add.s64 	%rd377, %rd11, %rd526;
	st.local.u32 	[%rd377], %r1281;
	add.s64 	%rd526, %rd526, 4;
	cvt.u32.u64 	%r1286, %rd526;
	setp.ne.s32 	%p649, %r1286, 24;
	@%p649 bra 	$L__BB0_175;
// %bb.176:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd11+24], %r1849;
	mul.wide.u32 	%rd378, %r222, 4;
	sub.s64 	%rd94, %rd11, %rd378;
	ld.local.u32 	%r225, [%rd94+24];
	ld.local.u32 	%r226, [%rd94+20];
	and.b32  	%r1288, %r219, 260046848;
	setp.eq.s32 	%p650, %r1288, 0;
	mov.u32 	%r1850, %r226;
	@%p650 bra 	$L__BB0_178;
// %bb.177:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1289, [%rd94+16];
	shf.l.wrap.b32 	%r1850, %r1289, %r226, %r220;
$L__BB0_178:                            // %__internal_trig_reduction_slowpath.exit.i.i.i290
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1290, %r226, %r225, %r220;
	shr.u32 	%r1291, %r1290, 30;
	shf.l.wrap.b32 	%r1292, %r1850, %r1290, 2;
	shl.b32 	%r1293, %r1850, 2;
	shr.u32 	%r1294, %r1292, 31;
	add.s32 	%r1295, %r1294, %r1291;
	neg.s32 	%r1296, %r1295;
	setp.lt.s32 	%p651, %r219, 0;
	selp.b32 	%r1851, %r1296, %r1295, %p651;
	xor.b32  	%r1297, %r1292, %r219;
	shr.s32 	%r1298, %r1292, 31;
	xor.b32  	%r1299, %r1298, %r1292;
	xor.b32  	%r1300, %r1298, %r1293;
	cvt.u64.u32 	%rd379, %r1299;
	shl.b64 	%rd380, %rd379, 32;
	cvt.u64.u32 	%rd381, %r1300;
	or.b64  	%rd382, %rd380, %rd381;
	cvt.rn.f64.s64 	%fd27, %rd382;
	mul.rn.f64 	%fd28, %fd27, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2762, %fd28;
	neg.f32 	%f2763, %f2762;
	setp.lt.s32 	%p652, %r1297, 0;
	selp.f32 	%f3699, %f2763, %f2762, %p652;
$L__BB0_179:                            // %__nv_cosf.exit307
                                        //   in Loop: Header=BB0_1 Depth=1
	fma.rn.f32 	%f2679, %f2678, %f2672, %f2671;
	fma.rn.f32 	%f2698, %f2697, %f2691, %f2690;
	fma.rn.f32 	%f2717, %f2716, %f2710, %f2709;
	fma.rn.f32 	%f2736, %f2735, %f2729, %f2728;
	fma.rn.f32 	%f2755, %f2754, %f2748, %f2747;
	mul.rn.f32 	%f2765, %f3699, %f3699;
	and.b32  	%r1303, %r1851, 1;
	setp.eq.b32 	%p653, %r1303, 1;
	selp.f32 	%f2766, %f3699, 0f3F800000, %p653;
	fma.rn.f32 	%f2767, %f2765, %f2766, 0f00000000;
	fma.rn.f32 	%f2768, %f2765, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2769, 0fB94D4153, %f2768, %p653;
	selp.f32 	%f2770, 0f3C0885E4, 0f3D2AAABB, %p653;
	fma.rn.f32 	%f2771, %f2769, %f2765, %f2770;
	selp.f32 	%f2772, 0fBE2AAAA8, 0fBEFFFFFF, %p653;
	fma.rn.f32 	%f2773, %f2771, %f2765, %f2772;
	fma.rn.f32 	%f2774, %f2773, %f2767, %f2766;
	mul.rn.f32 	%f2777, %f3653, 0f3F22F983;
	cvt.rni.s32.f32 	%r1854, %f2777;
	cvt.rn.f32.s32 	%f2778, %r1854;
	fma.rn.f32 	%f2779, %f2778, 0fBFC90FDA, %f3653;
	fma.rn.f32 	%f2780, %f2778, 0fB3A22168, %f2779;
	fma.rn.f32 	%f3700, %f2778, 0fA7C234C5, %f2780;
	abs.f32 	%f281, %f3653;
	setp.ltu.f32 	%p655, %f281, 0f47CE4780;
	@%p655 bra 	$L__BB0_187;
// %bb.180:                             // %__nv_isinff.exit.i.i.i309
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p656, %f281, 0f7F800000;
	@%p656 bra 	$L__BB0_182;
// %bb.181:                             // %__nv_fmul_rn.exit.i.i.i329
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2783, 0f00000000;
	mul.rn.f32 	%f3700, %f3653, %f2783;
	mov.b32 	%r1854, 0;
	bra.uni 	$L__BB0_187;
$L__BB0_182:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r232, %f3653;
	shr.u32 	%r233, %r232, 23;
	and.b32  	%r1306, %r233, 224;
	add.s32 	%r1307, %r1306, -128;
	shl.b32 	%r1308, %r232, 8;
	or.b32  	%r234, %r1308, -2147483648;
	shr.u32 	%r235, %r1307, 5;
	mov.b32 	%r1852, 0;
	mov.b64 	%rd527, 0;
$L__BB0_183:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd384, __cudart_i2opi_f;
	add.s64 	%rd385, %rd384, %rd527;
	ld.global.nc.u32 	%r1311, [%rd385];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1309, %r1311, %r234, %r1852;
	madc.hi.u32     %r1852, %r1311, %r234,  0;
	}
	// end inline asm
	add.s64 	%rd386, %rd10, %rd527;
	st.local.u32 	[%rd386], %r1309;
	add.s64 	%rd527, %rd527, 4;
	cvt.u32.u64 	%r1314, %rd527;
	setp.ne.s32 	%p657, %r1314, 24;
	@%p657 bra 	$L__BB0_183;
// %bb.184:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd10+24], %r1852;
	mul.wide.u32 	%rd387, %r235, 4;
	sub.s64 	%rd97, %rd10, %rd387;
	ld.local.u32 	%r238, [%rd97+24];
	ld.local.u32 	%r239, [%rd97+20];
	and.b32  	%r1316, %r232, 260046848;
	setp.eq.s32 	%p658, %r1316, 0;
	mov.u32 	%r1853, %r239;
	@%p658 bra 	$L__BB0_186;
// %bb.185:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1317, [%rd97+16];
	shf.l.wrap.b32 	%r1853, %r1317, %r239, %r233;
$L__BB0_186:                            // %__internal_trig_reduction_slowpath.exit.i.i.i313
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1318, %r239, %r238, %r233;
	shr.u32 	%r1319, %r1318, 30;
	shf.l.wrap.b32 	%r1320, %r1853, %r1318, 2;
	shl.b32 	%r1321, %r1853, 2;
	shr.u32 	%r1322, %r1320, 31;
	add.s32 	%r1323, %r1322, %r1319;
	neg.s32 	%r1324, %r1323;
	setp.lt.s32 	%p659, %r232, 0;
	selp.b32 	%r1854, %r1324, %r1323, %p659;
	xor.b32  	%r1325, %r1320, %r232;
	shr.s32 	%r1326, %r1320, 31;
	xor.b32  	%r1327, %r1326, %r1320;
	xor.b32  	%r1328, %r1326, %r1321;
	cvt.u64.u32 	%rd388, %r1327;
	shl.b64 	%rd389, %rd388, 32;
	cvt.u64.u32 	%rd390, %r1328;
	or.b64  	%rd391, %rd389, %rd390;
	cvt.rn.f64.s64 	%fd29, %rd391;
	mul.rn.f64 	%fd30, %fd29, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2781, %fd30;
	neg.f32 	%f2782, %f2781;
	setp.lt.s32 	%p660, %r1325, 0;
	selp.f32 	%f3700, %f2782, %f2781, %p660;
$L__BB0_187:                            // %__nv_cosf.exit330
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2680, 0f00000000;
	sub.rn.f32 	%f2681, %f2680, %f2679;
	sub.rn.f32 	%f2700, %f2680, %f2698;
	mov.f32 	%f2718, 0f00000000;
	sub.rn.f32 	%f2719, %f2718, %f2717;
	sub.rn.f32 	%f2738, %f2718, %f2736;
	mov.f32 	%f2756, 0f00000000;
	sub.rn.f32 	%f2757, %f2756, %f2755;
	sub.rn.f32 	%f2776, %f2756, %f2774;
	mul.rn.f32 	%f2784, %f3700, %f3700;
	and.b32  	%r1331, %r1854, 1;
	setp.eq.b32 	%p661, %r1331, 1;
	selp.f32 	%f2785, %f3700, 0f3F800000, %p661;
	fma.rn.f32 	%f2786, %f2784, %f2785, 0f00000000;
	fma.rn.f32 	%f2787, %f2784, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2788, 0fB94D4153, %f2787, %p661;
	selp.f32 	%f2789, 0f3C0885E4, 0f3D2AAABB, %p661;
	fma.rn.f32 	%f2790, %f2788, %f2784, %f2789;
	selp.f32 	%f2791, 0fBE2AAAA8, 0fBEFFFFFF, %p661;
	fma.rn.f32 	%f2792, %f2790, %f2784, %f2791;
	fma.rn.f32 	%f2793, %f2792, %f2786, %f2785;
	mov.f32 	%f2794, 0f00000000;
	sub.rn.f32 	%f2795, %f2794, %f2793;
	mul.rn.f32 	%f2796, %f8, 0f3F22F983;
	cvt.rni.s32.f32 	%r1857, %f2796;
	cvt.rn.f32.s32 	%f2797, %r1857;
	fma.rn.f32 	%f2798, %f2797, 0fBFC90FDA, %f8;
	fma.rn.f32 	%f2799, %f2797, 0fB3A22168, %f2798;
	fma.rn.f32 	%f3701, %f2797, 0fA7C234C5, %f2799;
	abs.f32 	%f287, %f8;
	setp.ltu.f32 	%p663, %f287, 0f47CE4780;
	@%p663 bra 	$L__BB0_195;
// %bb.188:                             // %__nv_isinff.exit.i.i.i332
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p664, %f287, 0f7F800000;
	@%p664 bra 	$L__BB0_190;
// %bb.189:                             // %__nv_fmul_rn.exit.i.i.i352
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2802, 0f00000000;
	mul.rn.f32 	%f3701, %f8, %f2802;
	mov.b32 	%r1857, 0;
	bra.uni 	$L__BB0_195;
$L__BB0_190:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r245, %f8;
	shr.u32 	%r246, %r245, 23;
	and.b32  	%r1334, %r246, 224;
	add.s32 	%r1335, %r1334, -128;
	shl.b32 	%r1336, %r245, 8;
	or.b32  	%r247, %r1336, -2147483648;
	shr.u32 	%r248, %r1335, 5;
	mov.b32 	%r1855, 0;
	mov.b64 	%rd528, 0;
$L__BB0_191:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd393, __cudart_i2opi_f;
	add.s64 	%rd394, %rd393, %rd528;
	ld.global.nc.u32 	%r1339, [%rd394];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1337, %r1339, %r247, %r1855;
	madc.hi.u32     %r1855, %r1339, %r247,  0;
	}
	// end inline asm
	add.s64 	%rd395, %rd9, %rd528;
	st.local.u32 	[%rd395], %r1337;
	add.s64 	%rd528, %rd528, 4;
	cvt.u32.u64 	%r1342, %rd528;
	setp.ne.s32 	%p665, %r1342, 24;
	@%p665 bra 	$L__BB0_191;
// %bb.192:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd9+24], %r1855;
	mul.wide.u32 	%rd396, %r248, 4;
	sub.s64 	%rd100, %rd9, %rd396;
	ld.local.u32 	%r251, [%rd100+24];
	ld.local.u32 	%r252, [%rd100+20];
	and.b32  	%r1344, %r245, 260046848;
	setp.eq.s32 	%p666, %r1344, 0;
	mov.u32 	%r1856, %r252;
	@%p666 bra 	$L__BB0_194;
// %bb.193:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1345, [%rd100+16];
	shf.l.wrap.b32 	%r1856, %r1345, %r252, %r246;
$L__BB0_194:                            // %__internal_trig_reduction_slowpath.exit.i.i.i336
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1346, %r252, %r251, %r246;
	shr.u32 	%r1347, %r1346, 30;
	shf.l.wrap.b32 	%r1348, %r1856, %r1346, 2;
	shl.b32 	%r1349, %r1856, 2;
	shr.u32 	%r1350, %r1348, 31;
	add.s32 	%r1351, %r1350, %r1347;
	neg.s32 	%r1352, %r1351;
	setp.lt.s32 	%p667, %r245, 0;
	selp.b32 	%r1857, %r1352, %r1351, %p667;
	xor.b32  	%r1353, %r1348, %r245;
	shr.s32 	%r1354, %r1348, 31;
	xor.b32  	%r1355, %r1354, %r1348;
	xor.b32  	%r1356, %r1354, %r1349;
	cvt.u64.u32 	%rd397, %r1355;
	shl.b64 	%rd398, %rd397, 32;
	cvt.u64.u32 	%rd399, %r1356;
	or.b64  	%rd400, %rd398, %rd399;
	cvt.rn.f64.s64 	%fd31, %rd400;
	mul.rn.f64 	%fd32, %fd31, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2800, %fd32;
	neg.f32 	%f2801, %f2800;
	setp.lt.s32 	%p668, %r1353, 0;
	selp.f32 	%f3701, %f2801, %f2800, %p668;
$L__BB0_195:                            // %__nv_cosf.exit353
                                        //   in Loop: Header=BB0_1 Depth=1
	add.s32 	%r1162, %r1836, 1;
	and.b32  	%r1164, %r1162, 2;
	setp.eq.s32 	%p614, %r1164, 0;
	selp.f32 	%f3647, %f2679, %f2681, %p614;
	add.s32 	%r1190, %r1839, 1;
	and.b32  	%r1192, %r1190, 2;
	setp.eq.s32 	%p622, %r1192, 0;
	selp.f32 	%f3648, %f2698, %f2700, %p622;
	add.s32 	%r1218, %r1842, 1;
	and.b32  	%r1220, %r1218, 2;
	setp.eq.s32 	%p630, %r1220, 0;
	selp.f32 	%f3649, %f2717, %f2719, %p630;
	add.s32 	%r1246, %r1845, 1;
	and.b32  	%r1248, %r1246, 2;
	setp.eq.s32 	%p638, %r1248, 0;
	selp.f32 	%f3650, %f2736, %f2738, %p638;
	add.s32 	%r1274, %r1848, 1;
	and.b32  	%r1276, %r1274, 2;
	setp.eq.s32 	%p646, %r1276, 0;
	selp.f32 	%f3651, %f2755, %f2757, %p646;
	add.s32 	%r1302, %r1851, 1;
	and.b32  	%r1304, %r1302, 2;
	setp.eq.s32 	%p654, %r1304, 0;
	selp.f32 	%f3652, %f2774, %f2776, %p654;
	add.s32 	%r1330, %r1854, 1;
	and.b32  	%r1332, %r1330, 2;
	setp.eq.s32 	%p662, %r1332, 0;
	selp.f32 	%f3653, %f2793, %f2795, %p662;
	add.s32 	%r1358, %r1857, 1;
	mul.rn.f32 	%f2803, %f3701, %f3701;
	and.b32  	%r1359, %r1857, 1;
	setp.eq.b32 	%p669, %r1359, 1;
	selp.f32 	%f2804, %f3701, 0f3F800000, %p669;
	fma.rn.f32 	%f2805, %f2803, %f2804, 0f00000000;
	fma.rn.f32 	%f2806, %f2803, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2807, 0fB94D4153, %f2806, %p669;
	selp.f32 	%f2808, 0f3C0885E4, 0f3D2AAABB, %p669;
	fma.rn.f32 	%f2809, %f2807, %f2803, %f2808;
	selp.f32 	%f2810, 0fBE2AAAA8, 0fBEFFFFFF, %p669;
	fma.rn.f32 	%f2811, %f2809, %f2803, %f2810;
	fma.rn.f32 	%f2812, %f2811, %f2805, %f2804;
	and.b32  	%r1360, %r1358, 2;
	setp.eq.s32 	%p670, %r1360, 0;
	sub.rn.f32 	%f2814, %f2794, %f2812;
	selp.f32 	%f3654, %f2812, %f2814, %p670;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_69:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r50, %f3647;
	shr.u32 	%r51, %r50, 23;
	and.b32  	%r1362, %r51, 224;
	add.s32 	%r1363, %r1362, -128;
	shl.b32 	%r1364, %r50, 8;
	or.b32  	%r52, %r1364, -2147483648;
	shr.u32 	%r53, %r1363, 5;
	mov.b32 	%r1810, 0;
	mov.b64 	%rd513, 0;
$L__BB0_70:                             //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd402, __cudart_i2opi_f;
	add.s64 	%rd403, %rd402, %rd513;
	ld.global.nc.u32 	%r1367, [%rd403];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1365, %r1367, %r52, %r1810;
	madc.hi.u32     %r1810, %r1367, %r52,  0;
	}
	// end inline asm
	add.s64 	%rd404, %rd24, %rd513;
	st.local.u32 	[%rd404], %r1365;
	add.s64 	%rd513, %rd513, 4;
	cvt.u32.u64 	%r1370, %rd513;
	setp.ne.s32 	%p673, %r1370, 24;
	@%p673 bra 	$L__BB0_70;
// %bb.71:                              //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd24+24], %r1810;
	mul.wide.u32 	%rd405, %r53, 4;
	sub.s64 	%rd55, %rd24, %rd405;
	ld.local.u32 	%r56, [%rd55+24];
	ld.local.u32 	%r57, [%rd55+20];
	and.b32  	%r1372, %r50, 260046848;
	setp.eq.s32 	%p674, %r1372, 0;
	mov.u32 	%r1811, %r57;
	@%p674 bra 	$L__BB0_73;
// %bb.72:                              //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1373, [%rd55+16];
	shf.l.wrap.b32 	%r1811, %r1373, %r57, %r51;
$L__BB0_73:                             // %__internal_trig_reduction_slowpath.exit.i.i.i
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1374, %r57, %r56, %r51;
	shr.u32 	%r1375, %r1374, 30;
	shf.l.wrap.b32 	%r1376, %r1811, %r1374, 2;
	shl.b32 	%r1377, %r1811, 2;
	shr.u32 	%r1378, %r1376, 31;
	add.s32 	%r1379, %r1378, %r1375;
	neg.s32 	%r1380, %r1379;
	setp.lt.s32 	%p675, %r50, 0;
	selp.b32 	%r1812, %r1380, %r1379, %p675;
	xor.b32  	%r1381, %r1376, %r50;
	shr.s32 	%r1382, %r1376, 31;
	xor.b32  	%r1383, %r1382, %r1376;
	xor.b32  	%r1384, %r1382, %r1377;
	cvt.u64.u32 	%rd406, %r1383;
	shl.b64 	%rd407, %rd406, 32;
	cvt.u64.u32 	%rd408, %r1384;
	or.b64  	%rd409, %rd407, %rd408;
	cvt.rn.f64.s64 	%fd33, %rd409;
	mul.rn.f64 	%fd34, %fd33, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2819, %fd34;
	neg.f32 	%f2820, %f2819;
	setp.lt.s32 	%p676, %r1381, 0;
	selp.f32 	%f3686, %f2820, %f2819, %p676;
$L__BB0_74:                             // %__nv_sinf.exit
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f2822, %f3686, %f3686;
	mul.rn.f32 	%f2834, %f3648, 0f3F22F983;
	cvt.rni.s32.f32 	%r1815, %f2834;
	cvt.rn.f32.s32 	%f2835, %r1815;
	fma.rn.f32 	%f2836, %f2835, 0fBFC90FDA, %f3648;
	fma.rn.f32 	%f2837, %f2835, 0fB3A22168, %f2836;
	fma.rn.f32 	%f3687, %f2835, 0fA7C234C5, %f2837;
	abs.f32 	%f203, %f3648;
	setp.ltu.f32 	%p679, %f203, 0f47CE4780;
	@%p679 bra 	$L__BB0_82;
// %bb.75:                              // %__nv_isinff.exit.i.i.i12
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p680, %f203, 0f7F800000;
	@%p680 bra 	$L__BB0_77;
// %bb.76:                              // %__nv_fmul_rn.exit.i.i.i32
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2840, 0f00000000;
	mul.rn.f32 	%f3687, %f3648, %f2840;
	mov.b32 	%r1815, 0;
	bra.uni 	$L__BB0_82;
$L__BB0_77:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r63, %f3648;
	shr.u32 	%r64, %r63, 23;
	and.b32  	%r1389, %r64, 224;
	add.s32 	%r1390, %r1389, -128;
	shl.b32 	%r1391, %r63, 8;
	or.b32  	%r65, %r1391, -2147483648;
	shr.u32 	%r66, %r1390, 5;
	mov.b32 	%r1813, 0;
	mov.b64 	%rd514, 0;
$L__BB0_78:                             //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd411, __cudart_i2opi_f;
	add.s64 	%rd412, %rd411, %rd514;
	ld.global.nc.u32 	%r1394, [%rd412];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1392, %r1394, %r65, %r1813;
	madc.hi.u32     %r1813, %r1394, %r65,  0;
	}
	// end inline asm
	add.s64 	%rd413, %rd23, %rd514;
	st.local.u32 	[%rd413], %r1392;
	add.s64 	%rd514, %rd514, 4;
	cvt.u32.u64 	%r1397, %rd514;
	setp.ne.s32 	%p681, %r1397, 24;
	@%p681 bra 	$L__BB0_78;
// %bb.79:                              //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd23+24], %r1813;
	mul.wide.u32 	%rd414, %r66, 4;
	sub.s64 	%rd58, %rd23, %rd414;
	ld.local.u32 	%r69, [%rd58+24];
	ld.local.u32 	%r70, [%rd58+20];
	and.b32  	%r1399, %r63, 260046848;
	setp.eq.s32 	%p682, %r1399, 0;
	mov.u32 	%r1814, %r70;
	@%p682 bra 	$L__BB0_81;
// %bb.80:                              //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1400, [%rd58+16];
	shf.l.wrap.b32 	%r1814, %r1400, %r70, %r64;
$L__BB0_81:                             // %__internal_trig_reduction_slowpath.exit.i.i.i16
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1401, %r70, %r69, %r64;
	shr.u32 	%r1402, %r1401, 30;
	shf.l.wrap.b32 	%r1403, %r1814, %r1401, 2;
	shl.b32 	%r1404, %r1814, 2;
	shr.u32 	%r1405, %r1403, 31;
	add.s32 	%r1406, %r1405, %r1402;
	neg.s32 	%r1407, %r1406;
	setp.lt.s32 	%p683, %r63, 0;
	selp.b32 	%r1815, %r1407, %r1406, %p683;
	xor.b32  	%r1408, %r1403, %r63;
	shr.s32 	%r1409, %r1403, 31;
	xor.b32  	%r1410, %r1409, %r1403;
	xor.b32  	%r1411, %r1409, %r1404;
	cvt.u64.u32 	%rd415, %r1410;
	shl.b64 	%rd416, %rd415, 32;
	cvt.u64.u32 	%rd417, %r1411;
	or.b64  	%rd418, %rd416, %rd417;
	cvt.rn.f64.s64 	%fd35, %rd418;
	mul.rn.f64 	%fd36, %fd35, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2838, %fd36;
	neg.f32 	%f2839, %f2838;
	setp.lt.s32 	%p684, %r1408, 0;
	selp.f32 	%f3687, %f2839, %f2838, %p684;
$L__BB0_82:                             // %__nv_sinf.exit33
                                        //   in Loop: Header=BB0_1 Depth=1
	fma.rn.f32 	%f2825, %f2822, 0f37CBAC00, 0fBAB607ED;
	mul.rn.f32 	%f2841, %f3687, %f3687;
	fma.rn.f32 	%f2844, %f2841, 0f37CBAC00, 0fBAB607ED;
	mul.rn.f32 	%f2853, %f3649, 0f3F22F983;
	cvt.rni.s32.f32 	%r1818, %f2853;
	cvt.rn.f32.s32 	%f2854, %r1818;
	fma.rn.f32 	%f2855, %f2854, 0fBFC90FDA, %f3649;
	fma.rn.f32 	%f2856, %f2854, 0fB3A22168, %f2855;
	fma.rn.f32 	%f3688, %f2854, 0fA7C234C5, %f2856;
	abs.f32 	%f209, %f3649;
	setp.ltu.f32 	%p687, %f209, 0f47CE4780;
	@%p687 bra 	$L__BB0_90;
// %bb.83:                              // %__nv_isinff.exit.i.i.i35
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p688, %f209, 0f7F800000;
	@%p688 bra 	$L__BB0_85;
// %bb.84:                              // %__nv_fmul_rn.exit.i.i.i55
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2859, 0f00000000;
	mul.rn.f32 	%f3688, %f3649, %f2859;
	mov.b32 	%r1818, 0;
	bra.uni 	$L__BB0_90;
$L__BB0_85:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r76, %f3649;
	shr.u32 	%r77, %r76, 23;
	and.b32  	%r1416, %r77, 224;
	add.s32 	%r1417, %r1416, -128;
	shl.b32 	%r1418, %r76, 8;
	or.b32  	%r78, %r1418, -2147483648;
	shr.u32 	%r79, %r1417, 5;
	mov.b32 	%r1816, 0;
	mov.b64 	%rd515, 0;
$L__BB0_86:                             //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd420, __cudart_i2opi_f;
	add.s64 	%rd421, %rd420, %rd515;
	ld.global.nc.u32 	%r1421, [%rd421];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1419, %r1421, %r78, %r1816;
	madc.hi.u32     %r1816, %r1421, %r78,  0;
	}
	// end inline asm
	add.s64 	%rd422, %rd22, %rd515;
	st.local.u32 	[%rd422], %r1419;
	add.s64 	%rd515, %rd515, 4;
	cvt.u32.u64 	%r1424, %rd515;
	setp.ne.s32 	%p689, %r1424, 24;
	@%p689 bra 	$L__BB0_86;
// %bb.87:                              //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd22+24], %r1816;
	mul.wide.u32 	%rd423, %r79, 4;
	sub.s64 	%rd61, %rd22, %rd423;
	ld.local.u32 	%r82, [%rd61+24];
	ld.local.u32 	%r83, [%rd61+20];
	and.b32  	%r1426, %r76, 260046848;
	setp.eq.s32 	%p690, %r1426, 0;
	mov.u32 	%r1817, %r83;
	@%p690 bra 	$L__BB0_89;
// %bb.88:                              //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1427, [%rd61+16];
	shf.l.wrap.b32 	%r1817, %r1427, %r83, %r77;
$L__BB0_89:                             // %__internal_trig_reduction_slowpath.exit.i.i.i39
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1428, %r83, %r82, %r77;
	shr.u32 	%r1429, %r1428, 30;
	shf.l.wrap.b32 	%r1430, %r1817, %r1428, 2;
	shl.b32 	%r1431, %r1817, 2;
	shr.u32 	%r1432, %r1430, 31;
	add.s32 	%r1433, %r1432, %r1429;
	neg.s32 	%r1434, %r1433;
	setp.lt.s32 	%p691, %r76, 0;
	selp.b32 	%r1818, %r1434, %r1433, %p691;
	xor.b32  	%r1435, %r1430, %r76;
	shr.s32 	%r1436, %r1430, 31;
	xor.b32  	%r1437, %r1436, %r1430;
	xor.b32  	%r1438, %r1436, %r1431;
	cvt.u64.u32 	%rd424, %r1437;
	shl.b64 	%rd425, %rd424, 32;
	cvt.u64.u32 	%rd426, %r1438;
	or.b64  	%rd427, %rd425, %rd426;
	cvt.rn.f64.s64 	%fd37, %rd427;
	mul.rn.f64 	%fd38, %fd37, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2857, %fd38;
	neg.f32 	%f2858, %f2857;
	setp.lt.s32 	%p692, %r1435, 0;
	selp.f32 	%f3688, %f2858, %f2857, %p692;
$L__BB0_90:                             // %__nv_sinf.exit56
                                        //   in Loop: Header=BB0_1 Depth=1
	and.b32  	%r1386, %r1812, 1;
	setp.eq.b32 	%p677, %r1386, 1;
	selp.f32 	%f2826, %f2825, 0fB94D4153, %p677;
	and.b32  	%r1413, %r1815, 1;
	setp.eq.b32 	%p685, %r1413, 1;
	selp.f32 	%f2845, %f2844, 0fB94D4153, %p685;
	mul.rn.f32 	%f2860, %f3688, %f3688;
	and.b32  	%r1440, %r1818, 1;
	setp.eq.b32 	%p693, %r1440, 1;
	fma.rn.f32 	%f2863, %f2860, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2864, %f2863, 0fB94D4153, %p693;
	mul.rn.f32 	%f2872, %f3650, 0f3F22F983;
	cvt.rni.s32.f32 	%r1821, %f2872;
	cvt.rn.f32.s32 	%f2873, %r1821;
	fma.rn.f32 	%f2874, %f2873, 0fBFC90FDA, %f3650;
	fma.rn.f32 	%f2875, %f2873, 0fB3A22168, %f2874;
	fma.rn.f32 	%f3689, %f2873, 0fA7C234C5, %f2875;
	abs.f32 	%f215, %f3650;
	setp.ltu.f32 	%p695, %f215, 0f47CE4780;
	@%p695 bra 	$L__BB0_98;
// %bb.91:                              // %__nv_isinff.exit.i.i.i58
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p696, %f215, 0f7F800000;
	@%p696 bra 	$L__BB0_93;
// %bb.92:                              // %__nv_fmul_rn.exit.i.i.i78
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2878, 0f00000000;
	mul.rn.f32 	%f3689, %f3650, %f2878;
	mov.b32 	%r1821, 0;
	bra.uni 	$L__BB0_98;
$L__BB0_93:                             //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r89, %f3650;
	shr.u32 	%r90, %r89, 23;
	and.b32  	%r1443, %r90, 224;
	add.s32 	%r1444, %r1443, -128;
	shl.b32 	%r1445, %r89, 8;
	or.b32  	%r91, %r1445, -2147483648;
	shr.u32 	%r92, %r1444, 5;
	mov.b32 	%r1819, 0;
	mov.b64 	%rd516, 0;
$L__BB0_94:                             //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd429, __cudart_i2opi_f;
	add.s64 	%rd430, %rd429, %rd516;
	ld.global.nc.u32 	%r1448, [%rd430];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1446, %r1448, %r91, %r1819;
	madc.hi.u32     %r1819, %r1448, %r91,  0;
	}
	// end inline asm
	add.s64 	%rd431, %rd21, %rd516;
	st.local.u32 	[%rd431], %r1446;
	add.s64 	%rd516, %rd516, 4;
	cvt.u32.u64 	%r1451, %rd516;
	setp.ne.s32 	%p697, %r1451, 24;
	@%p697 bra 	$L__BB0_94;
// %bb.95:                              //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd21+24], %r1819;
	mul.wide.u32 	%rd432, %r92, 4;
	sub.s64 	%rd64, %rd21, %rd432;
	ld.local.u32 	%r95, [%rd64+24];
	ld.local.u32 	%r96, [%rd64+20];
	and.b32  	%r1453, %r89, 260046848;
	setp.eq.s32 	%p698, %r1453, 0;
	mov.u32 	%r1820, %r96;
	@%p698 bra 	$L__BB0_97;
// %bb.96:                              //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1454, [%rd64+16];
	shf.l.wrap.b32 	%r1820, %r1454, %r96, %r90;
$L__BB0_97:                             // %__internal_trig_reduction_slowpath.exit.i.i.i62
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1455, %r96, %r95, %r90;
	shr.u32 	%r1456, %r1455, 30;
	shf.l.wrap.b32 	%r1457, %r1820, %r1455, 2;
	shl.b32 	%r1458, %r1820, 2;
	shr.u32 	%r1459, %r1457, 31;
	add.s32 	%r1460, %r1459, %r1456;
	neg.s32 	%r1461, %r1460;
	setp.lt.s32 	%p699, %r89, 0;
	selp.b32 	%r1821, %r1461, %r1460, %p699;
	xor.b32  	%r1462, %r1457, %r89;
	shr.s32 	%r1463, %r1457, 31;
	xor.b32  	%r1464, %r1463, %r1457;
	xor.b32  	%r1465, %r1463, %r1458;
	cvt.u64.u32 	%rd433, %r1464;
	shl.b64 	%rd434, %rd433, 32;
	cvt.u64.u32 	%rd435, %r1465;
	or.b64  	%rd436, %rd434, %rd435;
	cvt.rn.f64.s64 	%fd39, %rd436;
	mul.rn.f64 	%fd40, %fd39, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2876, %fd40;
	neg.f32 	%f2877, %f2876;
	setp.lt.s32 	%p700, %r1462, 0;
	selp.f32 	%f3689, %f2877, %f2876, %p700;
$L__BB0_98:                             // %__nv_sinf.exit79
                                        //   in Loop: Header=BB0_1 Depth=1
	selp.f32 	%f2823, 0f3F800000, %f3686, %p677;
	selp.f32 	%f2827, 0f3D2AAABB, 0f3C0885E4, %p677;
	fma.rn.f32 	%f2828, %f2826, %f2822, %f2827;
	selp.f32 	%f2842, 0f3F800000, %f3687, %p685;
	selp.f32 	%f2846, 0f3D2AAABB, 0f3C0885E4, %p685;
	fma.rn.f32 	%f2847, %f2845, %f2841, %f2846;
	selp.f32 	%f2861, 0f3F800000, %f3688, %p693;
	selp.f32 	%f2865, 0f3D2AAABB, 0f3C0885E4, %p693;
	fma.rn.f32 	%f2866, %f2864, %f2860, %f2865;
	mul.rn.f32 	%f2879, %f3689, %f3689;
	and.b32  	%r1467, %r1821, 1;
	setp.eq.b32 	%p701, %r1467, 1;
	selp.f32 	%f2880, 0f3F800000, %f3689, %p701;
	fma.rn.f32 	%f2882, %f2879, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2883, %f2882, 0fB94D4153, %p701;
	selp.f32 	%f2884, 0f3D2AAABB, 0f3C0885E4, %p701;
	fma.rn.f32 	%f2885, %f2883, %f2879, %f2884;
	mul.rn.f32 	%f2891, %f3651, 0f3F22F983;
	cvt.rni.s32.f32 	%r1824, %f2891;
	cvt.rn.f32.s32 	%f2892, %r1824;
	fma.rn.f32 	%f2893, %f2892, 0fBFC90FDA, %f3651;
	fma.rn.f32 	%f2894, %f2892, 0fB3A22168, %f2893;
	fma.rn.f32 	%f3690, %f2892, 0fA7C234C5, %f2894;
	abs.f32 	%f221, %f3651;
	setp.ltu.f32 	%p703, %f221, 0f47CE4780;
	@%p703 bra 	$L__BB0_106;
// %bb.99:                              // %__nv_isinff.exit.i.i.i81
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p704, %f221, 0f7F800000;
	@%p704 bra 	$L__BB0_101;
// %bb.100:                             // %__nv_fmul_rn.exit.i.i.i101
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2897, 0f00000000;
	mul.rn.f32 	%f3690, %f3651, %f2897;
	mov.b32 	%r1824, 0;
	bra.uni 	$L__BB0_106;
$L__BB0_101:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r102, %f3651;
	shr.u32 	%r103, %r102, 23;
	and.b32  	%r1470, %r103, 224;
	add.s32 	%r1471, %r1470, -128;
	shl.b32 	%r1472, %r102, 8;
	or.b32  	%r104, %r1472, -2147483648;
	shr.u32 	%r105, %r1471, 5;
	mov.b32 	%r1822, 0;
	mov.b64 	%rd517, 0;
$L__BB0_102:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd438, __cudart_i2opi_f;
	add.s64 	%rd439, %rd438, %rd517;
	ld.global.nc.u32 	%r1475, [%rd439];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1473, %r1475, %r104, %r1822;
	madc.hi.u32     %r1822, %r1475, %r104,  0;
	}
	// end inline asm
	add.s64 	%rd440, %rd20, %rd517;
	st.local.u32 	[%rd440], %r1473;
	add.s64 	%rd517, %rd517, 4;
	cvt.u32.u64 	%r1478, %rd517;
	setp.ne.s32 	%p705, %r1478, 24;
	@%p705 bra 	$L__BB0_102;
// %bb.103:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd20+24], %r1822;
	mul.wide.u32 	%rd441, %r105, 4;
	sub.s64 	%rd67, %rd20, %rd441;
	ld.local.u32 	%r108, [%rd67+24];
	ld.local.u32 	%r109, [%rd67+20];
	and.b32  	%r1480, %r102, 260046848;
	setp.eq.s32 	%p706, %r1480, 0;
	mov.u32 	%r1823, %r109;
	@%p706 bra 	$L__BB0_105;
// %bb.104:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1481, [%rd67+16];
	shf.l.wrap.b32 	%r1823, %r1481, %r109, %r103;
$L__BB0_105:                            // %__internal_trig_reduction_slowpath.exit.i.i.i85
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1482, %r109, %r108, %r103;
	shr.u32 	%r1483, %r1482, 30;
	shf.l.wrap.b32 	%r1484, %r1823, %r1482, 2;
	shl.b32 	%r1485, %r1823, 2;
	shr.u32 	%r1486, %r1484, 31;
	add.s32 	%r1487, %r1486, %r1483;
	neg.s32 	%r1488, %r1487;
	setp.lt.s32 	%p707, %r102, 0;
	selp.b32 	%r1824, %r1488, %r1487, %p707;
	xor.b32  	%r1489, %r1484, %r102;
	shr.s32 	%r1490, %r1484, 31;
	xor.b32  	%r1491, %r1490, %r1484;
	xor.b32  	%r1492, %r1490, %r1485;
	cvt.u64.u32 	%rd442, %r1491;
	shl.b64 	%rd443, %rd442, 32;
	cvt.u64.u32 	%rd444, %r1492;
	or.b64  	%rd445, %rd443, %rd444;
	cvt.rn.f64.s64 	%fd41, %rd445;
	mul.rn.f64 	%fd42, %fd41, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2895, %fd42;
	neg.f32 	%f2896, %f2895;
	setp.lt.s32 	%p708, %r1489, 0;
	selp.f32 	%f3690, %f2896, %f2895, %p708;
$L__BB0_106:                            // %__nv_sinf.exit102
                                        //   in Loop: Header=BB0_1 Depth=1
	fma.rn.f32 	%f2824, %f2822, %f2823, 0f00000000;
	selp.f32 	%f2829, 0fBEFFFFFF, 0fBE2AAAA8, %p677;
	fma.rn.f32 	%f2830, %f2828, %f2822, %f2829;
	fma.rn.f32 	%f2843, %f2841, %f2842, 0f00000000;
	selp.f32 	%f2848, 0fBEFFFFFF, 0fBE2AAAA8, %p685;
	fma.rn.f32 	%f2849, %f2847, %f2841, %f2848;
	fma.rn.f32 	%f2862, %f2860, %f2861, 0f00000000;
	selp.f32 	%f2867, 0fBEFFFFFF, 0fBE2AAAA8, %p693;
	fma.rn.f32 	%f2868, %f2866, %f2860, %f2867;
	fma.rn.f32 	%f2881, %f2879, %f2880, 0f00000000;
	selp.f32 	%f2886, 0fBEFFFFFF, 0fBE2AAAA8, %p701;
	fma.rn.f32 	%f2887, %f2885, %f2879, %f2886;
	mul.rn.f32 	%f2898, %f3690, %f3690;
	and.b32  	%r1494, %r1824, 1;
	setp.eq.b32 	%p709, %r1494, 1;
	selp.f32 	%f2899, 0f3F800000, %f3690, %p709;
	fma.rn.f32 	%f2900, %f2898, %f2899, 0f00000000;
	fma.rn.f32 	%f2901, %f2898, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2902, %f2901, 0fB94D4153, %p709;
	selp.f32 	%f2903, 0f3D2AAABB, 0f3C0885E4, %p709;
	fma.rn.f32 	%f2904, %f2902, %f2898, %f2903;
	selp.f32 	%f2905, 0fBEFFFFFF, 0fBE2AAAA8, %p709;
	fma.rn.f32 	%f2906, %f2904, %f2898, %f2905;
	mul.rn.f32 	%f2910, %f3652, 0f3F22F983;
	cvt.rni.s32.f32 	%r1827, %f2910;
	cvt.rn.f32.s32 	%f2911, %r1827;
	fma.rn.f32 	%f2912, %f2911, 0fBFC90FDA, %f3652;
	fma.rn.f32 	%f2913, %f2911, 0fB3A22168, %f2912;
	fma.rn.f32 	%f3691, %f2911, 0fA7C234C5, %f2913;
	abs.f32 	%f227, %f3652;
	setp.ltu.f32 	%p711, %f227, 0f47CE4780;
	@%p711 bra 	$L__BB0_114;
// %bb.107:                             // %__nv_isinff.exit.i.i.i104
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p712, %f227, 0f7F800000;
	@%p712 bra 	$L__BB0_109;
// %bb.108:                             // %__nv_fmul_rn.exit.i.i.i124
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2916, 0f00000000;
	mul.rn.f32 	%f3691, %f3652, %f2916;
	mov.b32 	%r1827, 0;
	bra.uni 	$L__BB0_114;
$L__BB0_109:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r115, %f3652;
	shr.u32 	%r116, %r115, 23;
	and.b32  	%r1497, %r116, 224;
	add.s32 	%r1498, %r1497, -128;
	shl.b32 	%r1499, %r115, 8;
	or.b32  	%r117, %r1499, -2147483648;
	shr.u32 	%r118, %r1498, 5;
	mov.b32 	%r1825, 0;
	mov.b64 	%rd518, 0;
$L__BB0_110:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd447, __cudart_i2opi_f;
	add.s64 	%rd448, %rd447, %rd518;
	ld.global.nc.u32 	%r1502, [%rd448];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1500, %r1502, %r117, %r1825;
	madc.hi.u32     %r1825, %r1502, %r117,  0;
	}
	// end inline asm
	add.s64 	%rd449, %rd19, %rd518;
	st.local.u32 	[%rd449], %r1500;
	add.s64 	%rd518, %rd518, 4;
	cvt.u32.u64 	%r1505, %rd518;
	setp.ne.s32 	%p713, %r1505, 24;
	@%p713 bra 	$L__BB0_110;
// %bb.111:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd19+24], %r1825;
	mul.wide.u32 	%rd450, %r118, 4;
	sub.s64 	%rd70, %rd19, %rd450;
	ld.local.u32 	%r121, [%rd70+24];
	ld.local.u32 	%r122, [%rd70+20];
	and.b32  	%r1507, %r115, 260046848;
	setp.eq.s32 	%p714, %r1507, 0;
	mov.u32 	%r1826, %r122;
	@%p714 bra 	$L__BB0_113;
// %bb.112:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1508, [%rd70+16];
	shf.l.wrap.b32 	%r1826, %r1508, %r122, %r116;
$L__BB0_113:                            // %__internal_trig_reduction_slowpath.exit.i.i.i108
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1509, %r122, %r121, %r116;
	shr.u32 	%r1510, %r1509, 30;
	shf.l.wrap.b32 	%r1511, %r1826, %r1509, 2;
	shl.b32 	%r1512, %r1826, 2;
	shr.u32 	%r1513, %r1511, 31;
	add.s32 	%r1514, %r1513, %r1510;
	neg.s32 	%r1515, %r1514;
	setp.lt.s32 	%p715, %r115, 0;
	selp.b32 	%r1827, %r1515, %r1514, %p715;
	xor.b32  	%r1516, %r1511, %r115;
	shr.s32 	%r1517, %r1511, 31;
	xor.b32  	%r1518, %r1517, %r1511;
	xor.b32  	%r1519, %r1517, %r1512;
	cvt.u64.u32 	%rd451, %r1518;
	shl.b64 	%rd452, %rd451, 32;
	cvt.u64.u32 	%rd453, %r1519;
	or.b64  	%rd454, %rd452, %rd453;
	cvt.rn.f64.s64 	%fd43, %rd454;
	mul.rn.f64 	%fd44, %fd43, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2914, %fd44;
	neg.f32 	%f2915, %f2914;
	setp.lt.s32 	%p716, %r1516, 0;
	selp.f32 	%f3691, %f2915, %f2914, %p716;
$L__BB0_114:                            // %__nv_sinf.exit125
                                        //   in Loop: Header=BB0_1 Depth=1
	fma.rn.f32 	%f2831, %f2830, %f2824, %f2823;
	fma.rn.f32 	%f2850, %f2849, %f2843, %f2842;
	fma.rn.f32 	%f2869, %f2868, %f2862, %f2861;
	fma.rn.f32 	%f2888, %f2887, %f2881, %f2880;
	fma.rn.f32 	%f2907, %f2906, %f2900, %f2899;
	mul.rn.f32 	%f2917, %f3691, %f3691;
	and.b32  	%r1521, %r1827, 1;
	setp.eq.b32 	%p717, %r1521, 1;
	selp.f32 	%f2918, 0f3F800000, %f3691, %p717;
	fma.rn.f32 	%f2919, %f2917, %f2918, 0f00000000;
	fma.rn.f32 	%f2920, %f2917, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2921, %f2920, 0fB94D4153, %p717;
	selp.f32 	%f2922, 0f3D2AAABB, 0f3C0885E4, %p717;
	fma.rn.f32 	%f2923, %f2921, %f2917, %f2922;
	selp.f32 	%f2924, 0fBEFFFFFF, 0fBE2AAAA8, %p717;
	fma.rn.f32 	%f2925, %f2923, %f2917, %f2924;
	fma.rn.f32 	%f2926, %f2925, %f2919, %f2918;
	mul.rn.f32 	%f2929, %f3653, 0f3F22F983;
	cvt.rni.s32.f32 	%r1830, %f2929;
	cvt.rn.f32.s32 	%f2930, %r1830;
	fma.rn.f32 	%f2931, %f2930, 0fBFC90FDA, %f3653;
	fma.rn.f32 	%f2932, %f2930, 0fB3A22168, %f2931;
	fma.rn.f32 	%f3692, %f2930, 0fA7C234C5, %f2932;
	abs.f32 	%f233, %f3653;
	setp.ltu.f32 	%p719, %f233, 0f47CE4780;
	@%p719 bra 	$L__BB0_122;
// %bb.115:                             // %__nv_isinff.exit.i.i.i127
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p720, %f233, 0f7F800000;
	@%p720 bra 	$L__BB0_117;
// %bb.116:                             // %__nv_fmul_rn.exit.i.i.i147
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2935, 0f00000000;
	mul.rn.f32 	%f3692, %f3653, %f2935;
	mov.b32 	%r1830, 0;
	bra.uni 	$L__BB0_122;
$L__BB0_117:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r128, %f3653;
	shr.u32 	%r129, %r128, 23;
	and.b32  	%r1524, %r129, 224;
	add.s32 	%r1525, %r1524, -128;
	shl.b32 	%r1526, %r128, 8;
	or.b32  	%r130, %r1526, -2147483648;
	shr.u32 	%r131, %r1525, 5;
	mov.b32 	%r1828, 0;
	mov.b64 	%rd519, 0;
$L__BB0_118:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd456, __cudart_i2opi_f;
	add.s64 	%rd457, %rd456, %rd519;
	ld.global.nc.u32 	%r1529, [%rd457];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1527, %r1529, %r130, %r1828;
	madc.hi.u32     %r1828, %r1529, %r130,  0;
	}
	// end inline asm
	add.s64 	%rd458, %rd18, %rd519;
	st.local.u32 	[%rd458], %r1527;
	add.s64 	%rd519, %rd519, 4;
	cvt.u32.u64 	%r1532, %rd519;
	setp.ne.s32 	%p721, %r1532, 24;
	@%p721 bra 	$L__BB0_118;
// %bb.119:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd18+24], %r1828;
	mul.wide.u32 	%rd459, %r131, 4;
	sub.s64 	%rd73, %rd18, %rd459;
	ld.local.u32 	%r134, [%rd73+24];
	ld.local.u32 	%r135, [%rd73+20];
	and.b32  	%r1534, %r128, 260046848;
	setp.eq.s32 	%p722, %r1534, 0;
	mov.u32 	%r1829, %r135;
	@%p722 bra 	$L__BB0_121;
// %bb.120:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1535, [%rd73+16];
	shf.l.wrap.b32 	%r1829, %r1535, %r135, %r129;
$L__BB0_121:                            // %__internal_trig_reduction_slowpath.exit.i.i.i131
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1536, %r135, %r134, %r129;
	shr.u32 	%r1537, %r1536, 30;
	shf.l.wrap.b32 	%r1538, %r1829, %r1536, 2;
	shl.b32 	%r1539, %r1829, 2;
	shr.u32 	%r1540, %r1538, 31;
	add.s32 	%r1541, %r1540, %r1537;
	neg.s32 	%r1542, %r1541;
	setp.lt.s32 	%p723, %r128, 0;
	selp.b32 	%r1830, %r1542, %r1541, %p723;
	xor.b32  	%r1543, %r1538, %r128;
	shr.s32 	%r1544, %r1538, 31;
	xor.b32  	%r1545, %r1544, %r1538;
	xor.b32  	%r1546, %r1544, %r1539;
	cvt.u64.u32 	%rd460, %r1545;
	shl.b64 	%rd461, %rd460, 32;
	cvt.u64.u32 	%rd462, %r1546;
	or.b64  	%rd463, %rd461, %rd462;
	cvt.rn.f64.s64 	%fd45, %rd463;
	mul.rn.f64 	%fd46, %fd45, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2933, %fd46;
	neg.f32 	%f2934, %f2933;
	setp.lt.s32 	%p724, %r1543, 0;
	selp.f32 	%f3692, %f2934, %f2933, %p724;
$L__BB0_122:                            // %__nv_sinf.exit148
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2832, 0f00000000;
	sub.rn.f32 	%f2833, %f2832, %f2831;
	sub.rn.f32 	%f2852, %f2832, %f2850;
	mov.f32 	%f2870, 0f00000000;
	sub.rn.f32 	%f2871, %f2870, %f2869;
	sub.rn.f32 	%f2890, %f2870, %f2888;
	mov.f32 	%f2908, 0f00000000;
	sub.rn.f32 	%f2909, %f2908, %f2907;
	sub.rn.f32 	%f2928, %f2908, %f2926;
	mul.rn.f32 	%f2936, %f3692, %f3692;
	and.b32  	%r1548, %r1830, 1;
	setp.eq.b32 	%p725, %r1548, 1;
	selp.f32 	%f2937, 0f3F800000, %f3692, %p725;
	fma.rn.f32 	%f2938, %f2936, %f2937, 0f00000000;
	fma.rn.f32 	%f2939, %f2936, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2940, %f2939, 0fB94D4153, %p725;
	selp.f32 	%f2941, 0f3D2AAABB, 0f3C0885E4, %p725;
	fma.rn.f32 	%f2942, %f2940, %f2936, %f2941;
	selp.f32 	%f2943, 0fBEFFFFFF, 0fBE2AAAA8, %p725;
	fma.rn.f32 	%f2944, %f2942, %f2936, %f2943;
	fma.rn.f32 	%f2945, %f2944, %f2938, %f2937;
	mov.f32 	%f2946, 0f00000000;
	sub.rn.f32 	%f2947, %f2946, %f2945;
	mul.rn.f32 	%f2948, %f8, 0f3F22F983;
	cvt.rni.s32.f32 	%r1833, %f2948;
	cvt.rn.f32.s32 	%f2949, %r1833;
	fma.rn.f32 	%f2950, %f2949, 0fBFC90FDA, %f8;
	fma.rn.f32 	%f2951, %f2949, 0fB3A22168, %f2950;
	fma.rn.f32 	%f3693, %f2949, 0fA7C234C5, %f2951;
	abs.f32 	%f239, %f8;
	setp.ltu.f32 	%p727, %f239, 0f47CE4780;
	@%p727 bra 	$L__BB0_130;
// %bb.123:                             // %__nv_isinff.exit.i.i.i150
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p728, %f239, 0f7F800000;
	@%p728 bra 	$L__BB0_125;
// %bb.124:                             // %__nv_fmul_rn.exit.i.i.i170
                                        //   in Loop: Header=BB0_1 Depth=1
	mov.f32 	%f2954, 0f00000000;
	mul.rn.f32 	%f3693, %f8, %f2954;
	mov.b32 	%r1833, 0;
	bra.uni 	$L__BB0_130;
$L__BB0_125:                            //   in Loop: Header=BB0_1 Depth=1
	mov.b32 	%r141, %f8;
	shr.u32 	%r142, %r141, 23;
	and.b32  	%r1551, %r142, 224;
	add.s32 	%r1552, %r1551, -128;
	shl.b32 	%r1553, %r141, 8;
	or.b32  	%r143, %r1553, -2147483648;
	shr.u32 	%r144, %r1552, 5;
	mov.b32 	%r1831, 0;
	mov.b64 	%rd520, 0;
$L__BB0_126:                            //   Parent Loop BB0_1 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.pragma "nounroll";
	mov.u64 	%rd465, __cudart_i2opi_f;
	add.s64 	%rd466, %rd465, %rd520;
	ld.global.nc.u32 	%r1556, [%rd466];
	// begin inline asm
	{
	mad.lo.cc.u32   %r1554, %r1556, %r143, %r1831;
	madc.hi.u32     %r1831, %r1556, %r143,  0;
	}
	// end inline asm
	add.s64 	%rd467, %rd17, %rd520;
	st.local.u32 	[%rd467], %r1554;
	add.s64 	%rd520, %rd520, 4;
	cvt.u32.u64 	%r1559, %rd520;
	setp.ne.s32 	%p729, %r1559, 24;
	@%p729 bra 	$L__BB0_126;
// %bb.127:                             //   in Loop: Header=BB0_1 Depth=1
	st.local.u32 	[%rd17+24], %r1831;
	mul.wide.u32 	%rd468, %r144, 4;
	sub.s64 	%rd76, %rd17, %rd468;
	ld.local.u32 	%r147, [%rd76+24];
	ld.local.u32 	%r148, [%rd76+20];
	and.b32  	%r1561, %r141, 260046848;
	setp.eq.s32 	%p730, %r1561, 0;
	mov.u32 	%r1832, %r148;
	@%p730 bra 	$L__BB0_129;
// %bb.128:                             //   in Loop: Header=BB0_1 Depth=1
	ld.local.u32 	%r1562, [%rd76+16];
	shf.l.wrap.b32 	%r1832, %r1562, %r148, %r142;
$L__BB0_129:                            // %__internal_trig_reduction_slowpath.exit.i.i.i154
                                        //   in Loop: Header=BB0_1 Depth=1
	shf.l.wrap.b32 	%r1563, %r148, %r147, %r142;
	shr.u32 	%r1564, %r1563, 30;
	shf.l.wrap.b32 	%r1565, %r1832, %r1563, 2;
	shl.b32 	%r1566, %r1832, 2;
	shr.u32 	%r1567, %r1565, 31;
	add.s32 	%r1568, %r1567, %r1564;
	neg.s32 	%r1569, %r1568;
	setp.lt.s32 	%p731, %r141, 0;
	selp.b32 	%r1833, %r1569, %r1568, %p731;
	xor.b32  	%r1570, %r1565, %r141;
	shr.s32 	%r1571, %r1565, 31;
	xor.b32  	%r1572, %r1571, %r1565;
	xor.b32  	%r1573, %r1571, %r1566;
	cvt.u64.u32 	%rd469, %r1572;
	shl.b64 	%rd470, %rd469, 32;
	cvt.u64.u32 	%rd471, %r1573;
	or.b64  	%rd472, %rd470, %rd471;
	cvt.rn.f64.s64 	%fd47, %rd472;
	mul.rn.f64 	%fd48, %fd47, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f2952, %fd48;
	neg.f32 	%f2953, %f2952;
	setp.lt.s32 	%p732, %r1570, 0;
	selp.f32 	%f3693, %f2953, %f2952, %p732;
$L__BB0_130:                            // %__nv_sinf.exit171
                                        //   in Loop: Header=BB0_1 Depth=1
	and.b32  	%r1387, %r1812, 2;
	setp.eq.s32 	%p678, %r1387, 0;
	selp.f32 	%f3647, %f2831, %f2833, %p678;
	and.b32  	%r1414, %r1815, 2;
	setp.eq.s32 	%p686, %r1414, 0;
	selp.f32 	%f3648, %f2850, %f2852, %p686;
	and.b32  	%r1441, %r1818, 2;
	setp.eq.s32 	%p694, %r1441, 0;
	selp.f32 	%f3649, %f2869, %f2871, %p694;
	and.b32  	%r1468, %r1821, 2;
	setp.eq.s32 	%p702, %r1468, 0;
	selp.f32 	%f3650, %f2888, %f2890, %p702;
	and.b32  	%r1495, %r1824, 2;
	setp.eq.s32 	%p710, %r1495, 0;
	selp.f32 	%f3651, %f2907, %f2909, %p710;
	and.b32  	%r1522, %r1827, 2;
	setp.eq.s32 	%p718, %r1522, 0;
	selp.f32 	%f3652, %f2926, %f2928, %p718;
	and.b32  	%r1549, %r1830, 2;
	setp.eq.s32 	%p726, %r1549, 0;
	selp.f32 	%f3653, %f2945, %f2947, %p726;
	mul.rn.f32 	%f2955, %f3693, %f3693;
	and.b32  	%r1575, %r1833, 1;
	setp.eq.b32 	%p733, %r1575, 1;
	selp.f32 	%f2956, 0f3F800000, %f3693, %p733;
	fma.rn.f32 	%f2957, %f2955, %f2956, 0f00000000;
	fma.rn.f32 	%f2958, %f2955, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f2959, %f2958, 0fB94D4153, %p733;
	selp.f32 	%f2960, 0f3D2AAABB, 0f3C0885E4, %p733;
	fma.rn.f32 	%f2961, %f2959, %f2955, %f2960;
	selp.f32 	%f2962, 0fBEFFFFFF, 0fBE2AAAA8, %p733;
	fma.rn.f32 	%f2963, %f2961, %f2955, %f2962;
	fma.rn.f32 	%f2964, %f2963, %f2957, %f2956;
	and.b32  	%r1576, %r1833, 2;
	setp.eq.s32 	%p734, %r1576, 0;
	sub.rn.f32 	%f2966, %f2946, %f2964;
	selp.f32 	%f3654, %f2964, %f2966, %p734;
	mov.f32 	%f3655, %f9;
	mov.f32 	%f3656, %f10;
	mov.f32 	%f3657, %f11;
	mov.f32 	%f3658, %f12;
	mov.f32 	%f3659, %f13;
	mov.f32 	%f3660, %f14;
	mov.f32 	%f3661, %f15;
	mov.f32 	%f3662, %f16;
	bra.uni 	$L__BB0_502;
$L__BB0_328:                            // %__nv_isinff.exit.i.i721
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p211, %f436, 0f7F800000;
	@%p211 bra 	$L__BB0_330;
// %bb.329:                             //   in Loop: Header=BB0_1 Depth=1
	setp.ge.f32 	%p212, %f9, 0f00000000;
	selp.b32 	%r660, 2139095040, 0, %p212;
	or.b32  	%r661, %r660, -2147483648;
	selp.b32 	%r662, %r661, %r660, %p1;
	mov.b32 	%f3726, %r662;
$L__BB0_330:                            // %__nv_powf.exit
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f1346, %f10, 0f3F000000;
	cvt.rzi.f32.f32 	%f1347, %f1346;
	add.rn.f32 	%f1348, %f1347, %f1347;
	sub.rn.f32 	%f1349, %f10, %f1348;
	abs.f32 	%f1350, %f1349;
	setp.eq.f32 	%p218, %f1350, 0f3F800000;
	abs.f32 	%f450, %f3648;
	abs.f32 	%f454, %f10;
	setp.lt.f32 	%p221, %f3648, 0f00000000;
	and.pred  	%p2, %p221, %p218;
	setp.neu.f32 	%p222, %f3648, 0f00000000;
	@%p222 bra 	$L__BB0_332;
// %bb.331:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1426, %f3648, %f3648;
	mov.b32 	%r672, %f1426;
	selp.b32 	%r673, %r672, 0, %p218;
	setp.lt.f32 	%p232, %f10, 0f00000000;
	or.b32  	%r674, %r673, 2139095040;
	selp.b32 	%r675, %r674, %r673, %p232;
	mov.b32 	%f3728, %r675;
	bra.uni 	$L__BB0_333;
$L__BB0_332:                            //   in Loop: Header=BB0_1 Depth=1
	setp.lt.f32 	%p219, %f450, 0f00800000;
	mul.rn.f32 	%f1351, %f450, 0f4B800000;
	selp.f32 	%f1352, %f1351, %f450, %p219;
	mov.b32 	%r362, %f1352;
	and.b32  	%r666, %r362, 8388607;
	or.b32  	%r667, %r666, 1065353216;
	mov.b32 	%f451, %r667;
	setp.gt.f32 	%p220, %f451, 0f3FB504F3;
	mul.rn.f32 	%f1353, %f451, 0f3F000000;
	selp.f32 	%f452, %f1353, %f451, %p220;
	add.rn.f32 	%f1344, %f452, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1343,%f1344;
	// end inline asm
	setp.gt.f32 	%p226, %f454, 0f77F684DF;
	mul.rn.f32 	%f1354, %f10, 0f39000000;
	selp.f32 	%f1355, %f1354, %f10, %p226;
	selp.f32 	%f1356, 0fC3170000, 0fC2FE0000, %p219;
	shr.u32 	%r668, %r362, 23;
	cvt.rn.f32.u32 	%f1357, %r668;
	add.rn.f32 	%f1358, %f1356, %f1357;
	add.rn.f32 	%f1359, %f1358, 0f3F800000;
	selp.f32 	%f1360, %f1359, %f1358, %p220;
	mov.f32 	%f1361, 0f3F317200;
	mul.rn.f32 	%f1362, %f1360, %f1361;
	add.rn.f32 	%f1363, %f452, 0fBF800000;
	add.rn.f32 	%f1364, %f1363, %f1363;
	mul.rn.f32 	%f1365, %f1364, %f1343;
	mul.rn.f32 	%f1366, %f1365, %f1365;
	fma.rn.f32 	%f1367, %f1366, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1368, %f1367, %f1366, 0f3DAAAABD;
	mul.rn.f32 	%f1369, %f1368, %f1366;
	mul.rn.f32 	%f1370, %f1369, %f1365;
	add.rn.f32 	%f1371, %f1365, %f1370;
	sub.rn.f32 	%f1372, %f1365, %f1371;
	add.rn.f32 	%f1373, %f1370, %f1372;
	neg.f32 	%f1374, %f1365;
	sub.rn.f32 	%f1375, %f1363, %f1365;
	add.rn.f32 	%f1376, %f1375, %f1375;
	fma.rn.f32 	%f1377, %f1374, %f1363, %f1376;
	mul.rn.f32 	%f1378, %f1343, %f1377;
	add.rn.f32 	%f1379, %f1378, %f1373;
	add.rn.f32 	%f1380, %f1371, %f1379;
	add.rn.f32 	%f1381, %f1362, %f1380;
	sub.rn.f32 	%f1382, %f1362, %f1381;
	add.rn.f32 	%f1383, %f1380, %f1382;
	sub.rn.f32 	%f1384, %f1371, %f1380;
	add.rn.f32 	%f1385, %f1379, %f1384;
	add.rn.f32 	%f1386, %f1385, %f1383;
	mov.f32 	%f1387, 0f35BFBE8E;
	mul.rn.f32 	%f1388, %f1360, %f1387;
	add.rn.f32 	%f1389, %f1388, %f1386;
	add.rn.f32 	%f1390, %f1381, %f1389;
	mul.rn.f32 	%f1391, %f1355, %f1390;
	sub.rn.f32 	%f1392, %f1381, %f1390;
	add.rn.f32 	%f1393, %f1389, %f1392;
	neg.f32 	%f1394, %f1391;
	fma.rn.f32 	%f1395, %f1355, %f1390, %f1394;
	fma.rn.f32 	%f1396, %f1355, %f1393, %f1395;
	fma.rn.f32 	%f1397, %f1390, 0f00000000, %f1396;
	add.rn.f32 	%f1398, %f1391, %f1397;
	mov.b32 	%r669, %f1398;
	setp.eq.s32 	%p227, %r669, 1118925336;
	selp.f32 	%f1399, 0f42B17217, %f1398, %p227;
	neg.f32 	%f1400, %f1398;
	add.rn.f32 	%f1401, %f1391, %f1400;
	add.rn.f32 	%f1402, %f1401, %f1397;
	add.rn.f32 	%f1403, %f1402, 0f37000000;
	selp.f32 	%f1404, %f1403, %f1402, %p227;
	mov.f32 	%f1405, 0f3FB8AA3B;
	mul.rn.f32 	%f1406, %f1399, %f1405;
	cvt.rzi.f32.f32 	%f1407, %f1406;
	abs.f32 	%f1408, %f1407;
	setp.gt.f32 	%p228, %f1408, 0f42FC0000;
	mov.f32 	%f1409, 0f42FC0000;
	copysign.f32 	%f1410, %f1407, %f1409;
	selp.f32 	%f1411, %f1410, %f1407, %p228;
	fma.rn.f32 	%f1412, %f1411, 0fBF317218, %f1399;
	fma.rn.f32 	%f1413, %f1411, 0f3102E308, %f1412;
	mul.rn.f32 	%f1414, %f1413, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1415, %f1414;
	add.rn.f32 	%f1416, %f1411, 0f4B40007F;
	mov.b32 	%r670, %f1416;
	shl.b32 	%r671, %r670, 23;
	mov.b32 	%f1417, %r671;
	mul.rn.f32 	%f1418, %f1415, %f1417;
	setp.neu.f32 	%p229, %f1418, 0f7F800000;
	fma.rn.f32 	%f1419, %f1418, %f1404, %f1418;
	selp.f32 	%f1420, %f1419, 0f7F800000, %p229;
	neg.f32 	%f1421, %f1420;
	selp.f32 	%f1422, %f1421, %f1420, %p2;
	cvt.rzi.f32.f32 	%f1423, %f10;
	setp.neu.f32 	%p230, %f10, %f1423;
	selp.f32 	%f1425, 0f7FFFFFFF, %f1422, %p230;
	selp.f32 	%f3728, %f1425, %f1422, %p221;
$L__BB0_333:                            // %__internal_powf_corner_cases.exit.i735
                                        //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1427, %f450, %f454;
	mov.b32 	%r676, %f1427;
	setp.lt.s32 	%p233, %r676, 2139095040;
	@%p233 bra 	$L__BB0_340;
// %bb.334:                             // %__nv_isnanf.exit.i.i740
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.num.f32 	%p234, %f450, %f450;
	setp.num.f32 	%p235, %f454, %f454;
	and.pred  	%p236, %p234, %p235;
	@%p236 bra 	$L__BB0_336;
// %bb.335:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f3728, %f3648, %f10;
	bra.uni 	$L__BB0_340;
$L__BB0_336:                            // %__nv_isinff.exit8.i.i742
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p237, %f454, 0f7F800000;
	@%p237 bra 	$L__BB0_338;
// %bb.337:                             // %__nv_fabsf.exit5.i.i746
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.gt.f32 	%p240, %f450, 0f3F800000;
	selp.b32 	%r680, 2139095040, 0, %p240;
	setp.lt.f32 	%p241, %f10, 0f00000000;
	xor.b32  	%r681, %r680, 2139095040;
	selp.b32 	%r682, %r681, %r680, %p241;
	setp.eq.f32 	%p242, %f3648, 0fBF800000;
	mov.b32 	%f1428, %r682;
	selp.f32 	%f3728, 0f3F800000, %f1428, %p242;
	bra.uni 	$L__BB0_340;
$L__BB0_338:                            // %__nv_isinff.exit.i.i743
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p238, %f450, 0f7F800000;
	@%p238 bra 	$L__BB0_340;
// %bb.339:                             //   in Loop: Header=BB0_1 Depth=1
	setp.ge.f32 	%p239, %f10, 0f00000000;
	selp.b32 	%r677, 2139095040, 0, %p239;
	or.b32  	%r678, %r677, -2147483648;
	selp.b32 	%r679, %r678, %r677, %p2;
	mov.b32 	%f3728, %r679;
$L__BB0_340:                            // %__nv_powf.exit751
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f1432, %f11, 0f3F000000;
	cvt.rzi.f32.f32 	%f1433, %f1432;
	add.rn.f32 	%f1434, %f1433, %f1433;
	sub.rn.f32 	%f1435, %f11, %f1434;
	abs.f32 	%f1436, %f1435;
	setp.eq.f32 	%p245, %f1436, 0f3F800000;
	abs.f32 	%f464, %f3649;
	abs.f32 	%f468, %f11;
	setp.lt.f32 	%p248, %f3649, 0f00000000;
	and.pred  	%p3, %p248, %p245;
	setp.neu.f32 	%p249, %f3649, 0f00000000;
	@%p249 bra 	$L__BB0_342;
// %bb.341:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1512, %f3649, %f3649;
	mov.b32 	%r689, %f1512;
	selp.b32 	%r690, %r689, 0, %p245;
	setp.lt.f32 	%p259, %f11, 0f00000000;
	or.b32  	%r691, %r690, 2139095040;
	selp.b32 	%r692, %r691, %r690, %p259;
	mov.b32 	%f3730, %r692;
	bra.uni 	$L__BB0_343;
$L__BB0_342:                            //   in Loop: Header=BB0_1 Depth=1
	setp.lt.f32 	%p246, %f464, 0f00800000;
	mul.rn.f32 	%f1437, %f464, 0f4B800000;
	selp.f32 	%f1438, %f1437, %f464, %p246;
	mov.b32 	%r363, %f1438;
	and.b32  	%r683, %r363, 8388607;
	or.b32  	%r684, %r683, 1065353216;
	mov.b32 	%f465, %r684;
	setp.gt.f32 	%p247, %f465, 0f3FB504F3;
	mul.rn.f32 	%f1439, %f465, 0f3F000000;
	selp.f32 	%f466, %f1439, %f465, %p247;
	add.rn.f32 	%f1430, %f466, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1429,%f1430;
	// end inline asm
	setp.gt.f32 	%p253, %f468, 0f77F684DF;
	mul.rn.f32 	%f1440, %f11, 0f39000000;
	selp.f32 	%f1441, %f1440, %f11, %p253;
	selp.f32 	%f1442, 0fC3170000, 0fC2FE0000, %p246;
	shr.u32 	%r685, %r363, 23;
	cvt.rn.f32.u32 	%f1443, %r685;
	add.rn.f32 	%f1444, %f1442, %f1443;
	add.rn.f32 	%f1445, %f1444, 0f3F800000;
	selp.f32 	%f1446, %f1445, %f1444, %p247;
	mov.f32 	%f1447, 0f3F317200;
	mul.rn.f32 	%f1448, %f1446, %f1447;
	add.rn.f32 	%f1449, %f466, 0fBF800000;
	add.rn.f32 	%f1450, %f1449, %f1449;
	mul.rn.f32 	%f1451, %f1450, %f1429;
	mul.rn.f32 	%f1452, %f1451, %f1451;
	fma.rn.f32 	%f1453, %f1452, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1454, %f1453, %f1452, 0f3DAAAABD;
	mul.rn.f32 	%f1455, %f1454, %f1452;
	mul.rn.f32 	%f1456, %f1455, %f1451;
	add.rn.f32 	%f1457, %f1451, %f1456;
	sub.rn.f32 	%f1458, %f1451, %f1457;
	add.rn.f32 	%f1459, %f1456, %f1458;
	neg.f32 	%f1460, %f1451;
	sub.rn.f32 	%f1461, %f1449, %f1451;
	add.rn.f32 	%f1462, %f1461, %f1461;
	fma.rn.f32 	%f1463, %f1460, %f1449, %f1462;
	mul.rn.f32 	%f1464, %f1429, %f1463;
	add.rn.f32 	%f1465, %f1464, %f1459;
	add.rn.f32 	%f1466, %f1457, %f1465;
	add.rn.f32 	%f1467, %f1448, %f1466;
	sub.rn.f32 	%f1468, %f1448, %f1467;
	add.rn.f32 	%f1469, %f1466, %f1468;
	sub.rn.f32 	%f1470, %f1457, %f1466;
	add.rn.f32 	%f1471, %f1465, %f1470;
	add.rn.f32 	%f1472, %f1471, %f1469;
	mov.f32 	%f1473, 0f35BFBE8E;
	mul.rn.f32 	%f1474, %f1446, %f1473;
	add.rn.f32 	%f1475, %f1474, %f1472;
	add.rn.f32 	%f1476, %f1467, %f1475;
	mul.rn.f32 	%f1477, %f1441, %f1476;
	sub.rn.f32 	%f1478, %f1467, %f1476;
	add.rn.f32 	%f1479, %f1475, %f1478;
	neg.f32 	%f1480, %f1477;
	fma.rn.f32 	%f1481, %f1441, %f1476, %f1480;
	fma.rn.f32 	%f1482, %f1441, %f1479, %f1481;
	fma.rn.f32 	%f1483, %f1476, 0f00000000, %f1482;
	add.rn.f32 	%f1484, %f1477, %f1483;
	mov.b32 	%r686, %f1484;
	setp.eq.s32 	%p254, %r686, 1118925336;
	selp.f32 	%f1485, 0f42B17217, %f1484, %p254;
	neg.f32 	%f1486, %f1484;
	add.rn.f32 	%f1487, %f1477, %f1486;
	add.rn.f32 	%f1488, %f1487, %f1483;
	add.rn.f32 	%f1489, %f1488, 0f37000000;
	selp.f32 	%f1490, %f1489, %f1488, %p254;
	mov.f32 	%f1491, 0f3FB8AA3B;
	mul.rn.f32 	%f1492, %f1485, %f1491;
	cvt.rzi.f32.f32 	%f1493, %f1492;
	abs.f32 	%f1494, %f1493;
	setp.gt.f32 	%p255, %f1494, 0f42FC0000;
	mov.f32 	%f1495, 0f42FC0000;
	copysign.f32 	%f1496, %f1493, %f1495;
	selp.f32 	%f1497, %f1496, %f1493, %p255;
	fma.rn.f32 	%f1498, %f1497, 0fBF317218, %f1485;
	fma.rn.f32 	%f1499, %f1497, 0f3102E308, %f1498;
	mul.rn.f32 	%f1500, %f1499, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1501, %f1500;
	add.rn.f32 	%f1502, %f1497, 0f4B40007F;
	mov.b32 	%r687, %f1502;
	shl.b32 	%r688, %r687, 23;
	mov.b32 	%f1503, %r688;
	mul.rn.f32 	%f1504, %f1501, %f1503;
	setp.neu.f32 	%p256, %f1504, 0f7F800000;
	fma.rn.f32 	%f1505, %f1504, %f1490, %f1504;
	selp.f32 	%f1506, %f1505, 0f7F800000, %p256;
	neg.f32 	%f1507, %f1506;
	selp.f32 	%f1508, %f1507, %f1506, %p3;
	cvt.rzi.f32.f32 	%f1509, %f11;
	setp.neu.f32 	%p257, %f11, %f1509;
	selp.f32 	%f1511, 0f7FFFFFFF, %f1508, %p257;
	selp.f32 	%f3730, %f1511, %f1508, %p248;
$L__BB0_343:                            // %__internal_powf_corner_cases.exit.i765
                                        //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1513, %f464, %f468;
	mov.b32 	%r693, %f1513;
	setp.lt.s32 	%p260, %r693, 2139095040;
	@%p260 bra 	$L__BB0_350;
// %bb.344:                             // %__nv_isnanf.exit.i.i770
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.num.f32 	%p261, %f464, %f464;
	setp.num.f32 	%p262, %f468, %f468;
	and.pred  	%p263, %p261, %p262;
	@%p263 bra 	$L__BB0_346;
// %bb.345:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f3730, %f3649, %f11;
	bra.uni 	$L__BB0_350;
$L__BB0_346:                            // %__nv_isinff.exit8.i.i772
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p264, %f468, 0f7F800000;
	@%p264 bra 	$L__BB0_348;
// %bb.347:                             // %__nv_fabsf.exit5.i.i776
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.gt.f32 	%p267, %f464, 0f3F800000;
	selp.b32 	%r697, 2139095040, 0, %p267;
	setp.lt.f32 	%p268, %f11, 0f00000000;
	xor.b32  	%r698, %r697, 2139095040;
	selp.b32 	%r699, %r698, %r697, %p268;
	setp.eq.f32 	%p269, %f3649, 0fBF800000;
	mov.b32 	%f1514, %r699;
	selp.f32 	%f3730, 0f3F800000, %f1514, %p269;
	bra.uni 	$L__BB0_350;
$L__BB0_348:                            // %__nv_isinff.exit.i.i773
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p265, %f464, 0f7F800000;
	@%p265 bra 	$L__BB0_350;
// %bb.349:                             //   in Loop: Header=BB0_1 Depth=1
	setp.ge.f32 	%p266, %f11, 0f00000000;
	selp.b32 	%r694, 2139095040, 0, %p266;
	or.b32  	%r695, %r694, -2147483648;
	selp.b32 	%r696, %r695, %r694, %p3;
	mov.b32 	%f3730, %r696;
$L__BB0_350:                            // %__nv_powf.exit781
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f1518, %f12, 0f3F000000;
	cvt.rzi.f32.f32 	%f1519, %f1518;
	add.rn.f32 	%f1520, %f1519, %f1519;
	sub.rn.f32 	%f1521, %f12, %f1520;
	abs.f32 	%f1522, %f1521;
	setp.eq.f32 	%p272, %f1522, 0f3F800000;
	abs.f32 	%f478, %f3650;
	abs.f32 	%f482, %f12;
	setp.lt.f32 	%p275, %f3650, 0f00000000;
	and.pred  	%p4, %p275, %p272;
	setp.neu.f32 	%p276, %f3650, 0f00000000;
	@%p276 bra 	$L__BB0_352;
// %bb.351:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1598, %f3650, %f3650;
	mov.b32 	%r706, %f1598;
	selp.b32 	%r707, %r706, 0, %p272;
	setp.lt.f32 	%p286, %f12, 0f00000000;
	or.b32  	%r708, %r707, 2139095040;
	selp.b32 	%r709, %r708, %r707, %p286;
	mov.b32 	%f3732, %r709;
	bra.uni 	$L__BB0_353;
$L__BB0_352:                            //   in Loop: Header=BB0_1 Depth=1
	setp.lt.f32 	%p273, %f478, 0f00800000;
	mul.rn.f32 	%f1523, %f478, 0f4B800000;
	selp.f32 	%f1524, %f1523, %f478, %p273;
	mov.b32 	%r364, %f1524;
	and.b32  	%r700, %r364, 8388607;
	or.b32  	%r701, %r700, 1065353216;
	mov.b32 	%f479, %r701;
	setp.gt.f32 	%p274, %f479, 0f3FB504F3;
	mul.rn.f32 	%f1525, %f479, 0f3F000000;
	selp.f32 	%f480, %f1525, %f479, %p274;
	add.rn.f32 	%f1516, %f480, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1515,%f1516;
	// end inline asm
	setp.gt.f32 	%p280, %f482, 0f77F684DF;
	mul.rn.f32 	%f1526, %f12, 0f39000000;
	selp.f32 	%f1527, %f1526, %f12, %p280;
	selp.f32 	%f1528, 0fC3170000, 0fC2FE0000, %p273;
	shr.u32 	%r702, %r364, 23;
	cvt.rn.f32.u32 	%f1529, %r702;
	add.rn.f32 	%f1530, %f1528, %f1529;
	add.rn.f32 	%f1531, %f1530, 0f3F800000;
	selp.f32 	%f1532, %f1531, %f1530, %p274;
	mov.f32 	%f1533, 0f3F317200;
	mul.rn.f32 	%f1534, %f1532, %f1533;
	add.rn.f32 	%f1535, %f480, 0fBF800000;
	add.rn.f32 	%f1536, %f1535, %f1535;
	mul.rn.f32 	%f1537, %f1536, %f1515;
	mul.rn.f32 	%f1538, %f1537, %f1537;
	fma.rn.f32 	%f1539, %f1538, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1540, %f1539, %f1538, 0f3DAAAABD;
	mul.rn.f32 	%f1541, %f1540, %f1538;
	mul.rn.f32 	%f1542, %f1541, %f1537;
	add.rn.f32 	%f1543, %f1537, %f1542;
	sub.rn.f32 	%f1544, %f1537, %f1543;
	add.rn.f32 	%f1545, %f1542, %f1544;
	neg.f32 	%f1546, %f1537;
	sub.rn.f32 	%f1547, %f1535, %f1537;
	add.rn.f32 	%f1548, %f1547, %f1547;
	fma.rn.f32 	%f1549, %f1546, %f1535, %f1548;
	mul.rn.f32 	%f1550, %f1515, %f1549;
	add.rn.f32 	%f1551, %f1550, %f1545;
	add.rn.f32 	%f1552, %f1543, %f1551;
	add.rn.f32 	%f1553, %f1534, %f1552;
	sub.rn.f32 	%f1554, %f1534, %f1553;
	add.rn.f32 	%f1555, %f1552, %f1554;
	sub.rn.f32 	%f1556, %f1543, %f1552;
	add.rn.f32 	%f1557, %f1551, %f1556;
	add.rn.f32 	%f1558, %f1557, %f1555;
	mov.f32 	%f1559, 0f35BFBE8E;
	mul.rn.f32 	%f1560, %f1532, %f1559;
	add.rn.f32 	%f1561, %f1560, %f1558;
	add.rn.f32 	%f1562, %f1553, %f1561;
	mul.rn.f32 	%f1563, %f1527, %f1562;
	sub.rn.f32 	%f1564, %f1553, %f1562;
	add.rn.f32 	%f1565, %f1561, %f1564;
	neg.f32 	%f1566, %f1563;
	fma.rn.f32 	%f1567, %f1527, %f1562, %f1566;
	fma.rn.f32 	%f1568, %f1527, %f1565, %f1567;
	fma.rn.f32 	%f1569, %f1562, 0f00000000, %f1568;
	add.rn.f32 	%f1570, %f1563, %f1569;
	mov.b32 	%r703, %f1570;
	setp.eq.s32 	%p281, %r703, 1118925336;
	selp.f32 	%f1571, 0f42B17217, %f1570, %p281;
	neg.f32 	%f1572, %f1570;
	add.rn.f32 	%f1573, %f1563, %f1572;
	add.rn.f32 	%f1574, %f1573, %f1569;
	add.rn.f32 	%f1575, %f1574, 0f37000000;
	selp.f32 	%f1576, %f1575, %f1574, %p281;
	mov.f32 	%f1577, 0f3FB8AA3B;
	mul.rn.f32 	%f1578, %f1571, %f1577;
	cvt.rzi.f32.f32 	%f1579, %f1578;
	abs.f32 	%f1580, %f1579;
	setp.gt.f32 	%p282, %f1580, 0f42FC0000;
	mov.f32 	%f1581, 0f42FC0000;
	copysign.f32 	%f1582, %f1579, %f1581;
	selp.f32 	%f1583, %f1582, %f1579, %p282;
	fma.rn.f32 	%f1584, %f1583, 0fBF317218, %f1571;
	fma.rn.f32 	%f1585, %f1583, 0f3102E308, %f1584;
	mul.rn.f32 	%f1586, %f1585, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1587, %f1586;
	add.rn.f32 	%f1588, %f1583, 0f4B40007F;
	mov.b32 	%r704, %f1588;
	shl.b32 	%r705, %r704, 23;
	mov.b32 	%f1589, %r705;
	mul.rn.f32 	%f1590, %f1587, %f1589;
	setp.neu.f32 	%p283, %f1590, 0f7F800000;
	fma.rn.f32 	%f1591, %f1590, %f1576, %f1590;
	selp.f32 	%f1592, %f1591, 0f7F800000, %p283;
	neg.f32 	%f1593, %f1592;
	selp.f32 	%f1594, %f1593, %f1592, %p4;
	cvt.rzi.f32.f32 	%f1595, %f12;
	setp.neu.f32 	%p284, %f12, %f1595;
	selp.f32 	%f1597, 0f7FFFFFFF, %f1594, %p284;
	selp.f32 	%f3732, %f1597, %f1594, %p275;
$L__BB0_353:                            // %__internal_powf_corner_cases.exit.i795
                                        //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1599, %f478, %f482;
	mov.b32 	%r710, %f1599;
	setp.lt.s32 	%p287, %r710, 2139095040;
	@%p287 bra 	$L__BB0_360;
// %bb.354:                             // %__nv_isnanf.exit.i.i800
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.num.f32 	%p288, %f478, %f478;
	setp.num.f32 	%p289, %f482, %f482;
	and.pred  	%p290, %p288, %p289;
	@%p290 bra 	$L__BB0_356;
// %bb.355:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f3732, %f3650, %f12;
	bra.uni 	$L__BB0_360;
$L__BB0_356:                            // %__nv_isinff.exit8.i.i802
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p291, %f482, 0f7F800000;
	@%p291 bra 	$L__BB0_358;
// %bb.357:                             // %__nv_fabsf.exit5.i.i806
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.gt.f32 	%p294, %f478, 0f3F800000;
	selp.b32 	%r714, 2139095040, 0, %p294;
	setp.lt.f32 	%p295, %f12, 0f00000000;
	xor.b32  	%r715, %r714, 2139095040;
	selp.b32 	%r716, %r715, %r714, %p295;
	setp.eq.f32 	%p296, %f3650, 0fBF800000;
	mov.b32 	%f1600, %r716;
	selp.f32 	%f3732, 0f3F800000, %f1600, %p296;
	bra.uni 	$L__BB0_360;
$L__BB0_358:                            // %__nv_isinff.exit.i.i803
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p292, %f478, 0f7F800000;
	@%p292 bra 	$L__BB0_360;
// %bb.359:                             //   in Loop: Header=BB0_1 Depth=1
	setp.ge.f32 	%p293, %f12, 0f00000000;
	selp.b32 	%r711, 2139095040, 0, %p293;
	or.b32  	%r712, %r711, -2147483648;
	selp.b32 	%r713, %r712, %r711, %p4;
	mov.b32 	%f3732, %r713;
$L__BB0_360:                            // %__nv_powf.exit811
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f1604, %f13, 0f3F000000;
	cvt.rzi.f32.f32 	%f1605, %f1604;
	add.rn.f32 	%f1606, %f1605, %f1605;
	sub.rn.f32 	%f1607, %f13, %f1606;
	abs.f32 	%f1608, %f1607;
	setp.eq.f32 	%p299, %f1608, 0f3F800000;
	abs.f32 	%f492, %f3651;
	abs.f32 	%f496, %f13;
	setp.lt.f32 	%p302, %f3651, 0f00000000;
	and.pred  	%p5, %p302, %p299;
	setp.neu.f32 	%p303, %f3651, 0f00000000;
	@%p303 bra 	$L__BB0_362;
// %bb.361:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1684, %f3651, %f3651;
	mov.b32 	%r723, %f1684;
	selp.b32 	%r724, %r723, 0, %p299;
	setp.lt.f32 	%p313, %f13, 0f00000000;
	or.b32  	%r725, %r724, 2139095040;
	selp.b32 	%r726, %r725, %r724, %p313;
	mov.b32 	%f3734, %r726;
	bra.uni 	$L__BB0_363;
$L__BB0_362:                            //   in Loop: Header=BB0_1 Depth=1
	setp.lt.f32 	%p300, %f492, 0f00800000;
	mul.rn.f32 	%f1609, %f492, 0f4B800000;
	selp.f32 	%f1610, %f1609, %f492, %p300;
	mov.b32 	%r365, %f1610;
	and.b32  	%r717, %r365, 8388607;
	or.b32  	%r718, %r717, 1065353216;
	mov.b32 	%f493, %r718;
	setp.gt.f32 	%p301, %f493, 0f3FB504F3;
	mul.rn.f32 	%f1611, %f493, 0f3F000000;
	selp.f32 	%f494, %f1611, %f493, %p301;
	add.rn.f32 	%f1602, %f494, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1601,%f1602;
	// end inline asm
	setp.gt.f32 	%p307, %f496, 0f77F684DF;
	mul.rn.f32 	%f1612, %f13, 0f39000000;
	selp.f32 	%f1613, %f1612, %f13, %p307;
	selp.f32 	%f1614, 0fC3170000, 0fC2FE0000, %p300;
	shr.u32 	%r719, %r365, 23;
	cvt.rn.f32.u32 	%f1615, %r719;
	add.rn.f32 	%f1616, %f1614, %f1615;
	add.rn.f32 	%f1617, %f1616, 0f3F800000;
	selp.f32 	%f1618, %f1617, %f1616, %p301;
	mov.f32 	%f1619, 0f3F317200;
	mul.rn.f32 	%f1620, %f1618, %f1619;
	add.rn.f32 	%f1621, %f494, 0fBF800000;
	add.rn.f32 	%f1622, %f1621, %f1621;
	mul.rn.f32 	%f1623, %f1622, %f1601;
	mul.rn.f32 	%f1624, %f1623, %f1623;
	fma.rn.f32 	%f1625, %f1624, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1626, %f1625, %f1624, 0f3DAAAABD;
	mul.rn.f32 	%f1627, %f1626, %f1624;
	mul.rn.f32 	%f1628, %f1627, %f1623;
	add.rn.f32 	%f1629, %f1623, %f1628;
	sub.rn.f32 	%f1630, %f1623, %f1629;
	add.rn.f32 	%f1631, %f1628, %f1630;
	neg.f32 	%f1632, %f1623;
	sub.rn.f32 	%f1633, %f1621, %f1623;
	add.rn.f32 	%f1634, %f1633, %f1633;
	fma.rn.f32 	%f1635, %f1632, %f1621, %f1634;
	mul.rn.f32 	%f1636, %f1601, %f1635;
	add.rn.f32 	%f1637, %f1636, %f1631;
	add.rn.f32 	%f1638, %f1629, %f1637;
	add.rn.f32 	%f1639, %f1620, %f1638;
	sub.rn.f32 	%f1640, %f1620, %f1639;
	add.rn.f32 	%f1641, %f1638, %f1640;
	sub.rn.f32 	%f1642, %f1629, %f1638;
	add.rn.f32 	%f1643, %f1637, %f1642;
	add.rn.f32 	%f1644, %f1643, %f1641;
	mov.f32 	%f1645, 0f35BFBE8E;
	mul.rn.f32 	%f1646, %f1618, %f1645;
	add.rn.f32 	%f1647, %f1646, %f1644;
	add.rn.f32 	%f1648, %f1639, %f1647;
	mul.rn.f32 	%f1649, %f1613, %f1648;
	sub.rn.f32 	%f1650, %f1639, %f1648;
	add.rn.f32 	%f1651, %f1647, %f1650;
	neg.f32 	%f1652, %f1649;
	fma.rn.f32 	%f1653, %f1613, %f1648, %f1652;
	fma.rn.f32 	%f1654, %f1613, %f1651, %f1653;
	fma.rn.f32 	%f1655, %f1648, 0f00000000, %f1654;
	add.rn.f32 	%f1656, %f1649, %f1655;
	mov.b32 	%r720, %f1656;
	setp.eq.s32 	%p308, %r720, 1118925336;
	selp.f32 	%f1657, 0f42B17217, %f1656, %p308;
	neg.f32 	%f1658, %f1656;
	add.rn.f32 	%f1659, %f1649, %f1658;
	add.rn.f32 	%f1660, %f1659, %f1655;
	add.rn.f32 	%f1661, %f1660, 0f37000000;
	selp.f32 	%f1662, %f1661, %f1660, %p308;
	mov.f32 	%f1663, 0f3FB8AA3B;
	mul.rn.f32 	%f1664, %f1657, %f1663;
	cvt.rzi.f32.f32 	%f1665, %f1664;
	abs.f32 	%f1666, %f1665;
	setp.gt.f32 	%p309, %f1666, 0f42FC0000;
	mov.f32 	%f1667, 0f42FC0000;
	copysign.f32 	%f1668, %f1665, %f1667;
	selp.f32 	%f1669, %f1668, %f1665, %p309;
	fma.rn.f32 	%f1670, %f1669, 0fBF317218, %f1657;
	fma.rn.f32 	%f1671, %f1669, 0f3102E308, %f1670;
	mul.rn.f32 	%f1672, %f1671, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1673, %f1672;
	add.rn.f32 	%f1674, %f1669, 0f4B40007F;
	mov.b32 	%r721, %f1674;
	shl.b32 	%r722, %r721, 23;
	mov.b32 	%f1675, %r722;
	mul.rn.f32 	%f1676, %f1673, %f1675;
	setp.neu.f32 	%p310, %f1676, 0f7F800000;
	fma.rn.f32 	%f1677, %f1676, %f1662, %f1676;
	selp.f32 	%f1678, %f1677, 0f7F800000, %p310;
	neg.f32 	%f1679, %f1678;
	selp.f32 	%f1680, %f1679, %f1678, %p5;
	cvt.rzi.f32.f32 	%f1681, %f13;
	setp.neu.f32 	%p311, %f13, %f1681;
	selp.f32 	%f1683, 0f7FFFFFFF, %f1680, %p311;
	selp.f32 	%f3734, %f1683, %f1680, %p302;
$L__BB0_363:                            // %__internal_powf_corner_cases.exit.i825
                                        //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1685, %f492, %f496;
	mov.b32 	%r727, %f1685;
	setp.lt.s32 	%p314, %r727, 2139095040;
	@%p314 bra 	$L__BB0_370;
// %bb.364:                             // %__nv_isnanf.exit.i.i830
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.num.f32 	%p315, %f492, %f492;
	setp.num.f32 	%p316, %f496, %f496;
	and.pred  	%p317, %p315, %p316;
	@%p317 bra 	$L__BB0_366;
// %bb.365:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f3734, %f3651, %f13;
	bra.uni 	$L__BB0_370;
$L__BB0_366:                            // %__nv_isinff.exit8.i.i832
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p318, %f496, 0f7F800000;
	@%p318 bra 	$L__BB0_368;
// %bb.367:                             // %__nv_fabsf.exit5.i.i836
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.gt.f32 	%p321, %f492, 0f3F800000;
	selp.b32 	%r731, 2139095040, 0, %p321;
	setp.lt.f32 	%p322, %f13, 0f00000000;
	xor.b32  	%r732, %r731, 2139095040;
	selp.b32 	%r733, %r732, %r731, %p322;
	setp.eq.f32 	%p323, %f3651, 0fBF800000;
	mov.b32 	%f1686, %r733;
	selp.f32 	%f3734, 0f3F800000, %f1686, %p323;
	bra.uni 	$L__BB0_370;
$L__BB0_368:                            // %__nv_isinff.exit.i.i833
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p319, %f492, 0f7F800000;
	@%p319 bra 	$L__BB0_370;
// %bb.369:                             //   in Loop: Header=BB0_1 Depth=1
	setp.ge.f32 	%p320, %f13, 0f00000000;
	selp.b32 	%r728, 2139095040, 0, %p320;
	or.b32  	%r729, %r728, -2147483648;
	selp.b32 	%r730, %r729, %r728, %p5;
	mov.b32 	%f3734, %r730;
$L__BB0_370:                            // %__nv_powf.exit841
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f1690, %f14, 0f3F000000;
	cvt.rzi.f32.f32 	%f1691, %f1690;
	add.rn.f32 	%f1692, %f1691, %f1691;
	sub.rn.f32 	%f1693, %f14, %f1692;
	abs.f32 	%f1694, %f1693;
	setp.eq.f32 	%p326, %f1694, 0f3F800000;
	abs.f32 	%f506, %f3652;
	abs.f32 	%f510, %f14;
	setp.lt.f32 	%p329, %f3652, 0f00000000;
	and.pred  	%p6, %p329, %p326;
	setp.neu.f32 	%p330, %f3652, 0f00000000;
	@%p330 bra 	$L__BB0_372;
// %bb.371:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1770, %f3652, %f3652;
	mov.b32 	%r740, %f1770;
	selp.b32 	%r741, %r740, 0, %p326;
	setp.lt.f32 	%p340, %f14, 0f00000000;
	or.b32  	%r742, %r741, 2139095040;
	selp.b32 	%r743, %r742, %r741, %p340;
	mov.b32 	%f3736, %r743;
	bra.uni 	$L__BB0_373;
$L__BB0_372:                            //   in Loop: Header=BB0_1 Depth=1
	setp.lt.f32 	%p327, %f506, 0f00800000;
	mul.rn.f32 	%f1695, %f506, 0f4B800000;
	selp.f32 	%f1696, %f1695, %f506, %p327;
	mov.b32 	%r366, %f1696;
	and.b32  	%r734, %r366, 8388607;
	or.b32  	%r735, %r734, 1065353216;
	mov.b32 	%f507, %r735;
	setp.gt.f32 	%p328, %f507, 0f3FB504F3;
	mul.rn.f32 	%f1697, %f507, 0f3F000000;
	selp.f32 	%f508, %f1697, %f507, %p328;
	add.rn.f32 	%f1688, %f508, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1687,%f1688;
	// end inline asm
	setp.gt.f32 	%p334, %f510, 0f77F684DF;
	mul.rn.f32 	%f1698, %f14, 0f39000000;
	selp.f32 	%f1699, %f1698, %f14, %p334;
	selp.f32 	%f1700, 0fC3170000, 0fC2FE0000, %p327;
	shr.u32 	%r736, %r366, 23;
	cvt.rn.f32.u32 	%f1701, %r736;
	add.rn.f32 	%f1702, %f1700, %f1701;
	add.rn.f32 	%f1703, %f1702, 0f3F800000;
	selp.f32 	%f1704, %f1703, %f1702, %p328;
	mov.f32 	%f1705, 0f3F317200;
	mul.rn.f32 	%f1706, %f1704, %f1705;
	add.rn.f32 	%f1707, %f508, 0fBF800000;
	add.rn.f32 	%f1708, %f1707, %f1707;
	mul.rn.f32 	%f1709, %f1708, %f1687;
	mul.rn.f32 	%f1710, %f1709, %f1709;
	fma.rn.f32 	%f1711, %f1710, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1712, %f1711, %f1710, 0f3DAAAABD;
	mul.rn.f32 	%f1713, %f1712, %f1710;
	mul.rn.f32 	%f1714, %f1713, %f1709;
	add.rn.f32 	%f1715, %f1709, %f1714;
	sub.rn.f32 	%f1716, %f1709, %f1715;
	add.rn.f32 	%f1717, %f1714, %f1716;
	neg.f32 	%f1718, %f1709;
	sub.rn.f32 	%f1719, %f1707, %f1709;
	add.rn.f32 	%f1720, %f1719, %f1719;
	fma.rn.f32 	%f1721, %f1718, %f1707, %f1720;
	mul.rn.f32 	%f1722, %f1687, %f1721;
	add.rn.f32 	%f1723, %f1722, %f1717;
	add.rn.f32 	%f1724, %f1715, %f1723;
	add.rn.f32 	%f1725, %f1706, %f1724;
	sub.rn.f32 	%f1726, %f1706, %f1725;
	add.rn.f32 	%f1727, %f1724, %f1726;
	sub.rn.f32 	%f1728, %f1715, %f1724;
	add.rn.f32 	%f1729, %f1723, %f1728;
	add.rn.f32 	%f1730, %f1729, %f1727;
	mov.f32 	%f1731, 0f35BFBE8E;
	mul.rn.f32 	%f1732, %f1704, %f1731;
	add.rn.f32 	%f1733, %f1732, %f1730;
	add.rn.f32 	%f1734, %f1725, %f1733;
	mul.rn.f32 	%f1735, %f1699, %f1734;
	sub.rn.f32 	%f1736, %f1725, %f1734;
	add.rn.f32 	%f1737, %f1733, %f1736;
	neg.f32 	%f1738, %f1735;
	fma.rn.f32 	%f1739, %f1699, %f1734, %f1738;
	fma.rn.f32 	%f1740, %f1699, %f1737, %f1739;
	fma.rn.f32 	%f1741, %f1734, 0f00000000, %f1740;
	add.rn.f32 	%f1742, %f1735, %f1741;
	mov.b32 	%r737, %f1742;
	setp.eq.s32 	%p335, %r737, 1118925336;
	selp.f32 	%f1743, 0f42B17217, %f1742, %p335;
	neg.f32 	%f1744, %f1742;
	add.rn.f32 	%f1745, %f1735, %f1744;
	add.rn.f32 	%f1746, %f1745, %f1741;
	add.rn.f32 	%f1747, %f1746, 0f37000000;
	selp.f32 	%f1748, %f1747, %f1746, %p335;
	mov.f32 	%f1749, 0f3FB8AA3B;
	mul.rn.f32 	%f1750, %f1743, %f1749;
	cvt.rzi.f32.f32 	%f1751, %f1750;
	abs.f32 	%f1752, %f1751;
	setp.gt.f32 	%p336, %f1752, 0f42FC0000;
	mov.f32 	%f1753, 0f42FC0000;
	copysign.f32 	%f1754, %f1751, %f1753;
	selp.f32 	%f1755, %f1754, %f1751, %p336;
	fma.rn.f32 	%f1756, %f1755, 0fBF317218, %f1743;
	fma.rn.f32 	%f1757, %f1755, 0f3102E308, %f1756;
	mul.rn.f32 	%f1758, %f1757, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1759, %f1758;
	add.rn.f32 	%f1760, %f1755, 0f4B40007F;
	mov.b32 	%r738, %f1760;
	shl.b32 	%r739, %r738, 23;
	mov.b32 	%f1761, %r739;
	mul.rn.f32 	%f1762, %f1759, %f1761;
	setp.neu.f32 	%p337, %f1762, 0f7F800000;
	fma.rn.f32 	%f1763, %f1762, %f1748, %f1762;
	selp.f32 	%f1764, %f1763, 0f7F800000, %p337;
	neg.f32 	%f1765, %f1764;
	selp.f32 	%f1766, %f1765, %f1764, %p6;
	cvt.rzi.f32.f32 	%f1767, %f14;
	setp.neu.f32 	%p338, %f14, %f1767;
	selp.f32 	%f1769, 0f7FFFFFFF, %f1766, %p338;
	selp.f32 	%f3736, %f1769, %f1766, %p329;
$L__BB0_373:                            // %__internal_powf_corner_cases.exit.i855
                                        //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1771, %f506, %f510;
	mov.b32 	%r744, %f1771;
	setp.lt.s32 	%p341, %r744, 2139095040;
	@%p341 bra 	$L__BB0_380;
// %bb.374:                             // %__nv_isnanf.exit.i.i860
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.num.f32 	%p342, %f506, %f506;
	setp.num.f32 	%p343, %f510, %f510;
	and.pred  	%p344, %p342, %p343;
	@%p344 bra 	$L__BB0_376;
// %bb.375:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f3736, %f3652, %f14;
	bra.uni 	$L__BB0_380;
$L__BB0_376:                            // %__nv_isinff.exit8.i.i862
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p345, %f510, 0f7F800000;
	@%p345 bra 	$L__BB0_378;
// %bb.377:                             // %__nv_fabsf.exit5.i.i866
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.gt.f32 	%p348, %f506, 0f3F800000;
	selp.b32 	%r748, 2139095040, 0, %p348;
	setp.lt.f32 	%p349, %f14, 0f00000000;
	xor.b32  	%r749, %r748, 2139095040;
	selp.b32 	%r750, %r749, %r748, %p349;
	setp.eq.f32 	%p350, %f3652, 0fBF800000;
	mov.b32 	%f1772, %r750;
	selp.f32 	%f3736, 0f3F800000, %f1772, %p350;
	bra.uni 	$L__BB0_380;
$L__BB0_378:                            // %__nv_isinff.exit.i.i863
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p346, %f506, 0f7F800000;
	@%p346 bra 	$L__BB0_380;
// %bb.379:                             //   in Loop: Header=BB0_1 Depth=1
	setp.ge.f32 	%p347, %f14, 0f00000000;
	selp.b32 	%r745, 2139095040, 0, %p347;
	or.b32  	%r746, %r745, -2147483648;
	selp.b32 	%r747, %r746, %r745, %p6;
	mov.b32 	%f3736, %r747;
$L__BB0_380:                            // %__nv_powf.exit871
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f1776, %f15, 0f3F000000;
	cvt.rzi.f32.f32 	%f1777, %f1776;
	add.rn.f32 	%f1778, %f1777, %f1777;
	sub.rn.f32 	%f1779, %f15, %f1778;
	abs.f32 	%f1780, %f1779;
	setp.eq.f32 	%p353, %f1780, 0f3F800000;
	abs.f32 	%f520, %f3653;
	abs.f32 	%f524, %f15;
	setp.lt.f32 	%p356, %f3653, 0f00000000;
	and.pred  	%p7, %p356, %p353;
	setp.neu.f32 	%p357, %f3653, 0f00000000;
	@%p357 bra 	$L__BB0_382;
// %bb.381:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1856, %f3653, %f3653;
	mov.b32 	%r757, %f1856;
	selp.b32 	%r758, %r757, 0, %p353;
	setp.lt.f32 	%p367, %f15, 0f00000000;
	or.b32  	%r759, %r758, 2139095040;
	selp.b32 	%r760, %r759, %r758, %p367;
	mov.b32 	%f3738, %r760;
	bra.uni 	$L__BB0_383;
$L__BB0_382:                            //   in Loop: Header=BB0_1 Depth=1
	setp.lt.f32 	%p354, %f520, 0f00800000;
	mul.rn.f32 	%f1781, %f520, 0f4B800000;
	selp.f32 	%f1782, %f1781, %f520, %p354;
	mov.b32 	%r367, %f1782;
	and.b32  	%r751, %r367, 8388607;
	or.b32  	%r752, %r751, 1065353216;
	mov.b32 	%f521, %r752;
	setp.gt.f32 	%p355, %f521, 0f3FB504F3;
	mul.rn.f32 	%f1783, %f521, 0f3F000000;
	selp.f32 	%f522, %f1783, %f521, %p355;
	add.rn.f32 	%f1774, %f522, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1773,%f1774;
	// end inline asm
	setp.gt.f32 	%p361, %f524, 0f77F684DF;
	mul.rn.f32 	%f1784, %f15, 0f39000000;
	selp.f32 	%f1785, %f1784, %f15, %p361;
	selp.f32 	%f1786, 0fC3170000, 0fC2FE0000, %p354;
	shr.u32 	%r753, %r367, 23;
	cvt.rn.f32.u32 	%f1787, %r753;
	add.rn.f32 	%f1788, %f1786, %f1787;
	add.rn.f32 	%f1789, %f1788, 0f3F800000;
	selp.f32 	%f1790, %f1789, %f1788, %p355;
	mov.f32 	%f1791, 0f3F317200;
	mul.rn.f32 	%f1792, %f1790, %f1791;
	add.rn.f32 	%f1793, %f522, 0fBF800000;
	add.rn.f32 	%f1794, %f1793, %f1793;
	mul.rn.f32 	%f1795, %f1794, %f1773;
	mul.rn.f32 	%f1796, %f1795, %f1795;
	fma.rn.f32 	%f1797, %f1796, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1798, %f1797, %f1796, 0f3DAAAABD;
	mul.rn.f32 	%f1799, %f1798, %f1796;
	mul.rn.f32 	%f1800, %f1799, %f1795;
	add.rn.f32 	%f1801, %f1795, %f1800;
	sub.rn.f32 	%f1802, %f1795, %f1801;
	add.rn.f32 	%f1803, %f1800, %f1802;
	neg.f32 	%f1804, %f1795;
	sub.rn.f32 	%f1805, %f1793, %f1795;
	add.rn.f32 	%f1806, %f1805, %f1805;
	fma.rn.f32 	%f1807, %f1804, %f1793, %f1806;
	mul.rn.f32 	%f1808, %f1773, %f1807;
	add.rn.f32 	%f1809, %f1808, %f1803;
	add.rn.f32 	%f1810, %f1801, %f1809;
	add.rn.f32 	%f1811, %f1792, %f1810;
	sub.rn.f32 	%f1812, %f1792, %f1811;
	add.rn.f32 	%f1813, %f1810, %f1812;
	sub.rn.f32 	%f1814, %f1801, %f1810;
	add.rn.f32 	%f1815, %f1809, %f1814;
	add.rn.f32 	%f1816, %f1815, %f1813;
	mov.f32 	%f1817, 0f35BFBE8E;
	mul.rn.f32 	%f1818, %f1790, %f1817;
	add.rn.f32 	%f1819, %f1818, %f1816;
	add.rn.f32 	%f1820, %f1811, %f1819;
	mul.rn.f32 	%f1821, %f1785, %f1820;
	sub.rn.f32 	%f1822, %f1811, %f1820;
	add.rn.f32 	%f1823, %f1819, %f1822;
	neg.f32 	%f1824, %f1821;
	fma.rn.f32 	%f1825, %f1785, %f1820, %f1824;
	fma.rn.f32 	%f1826, %f1785, %f1823, %f1825;
	fma.rn.f32 	%f1827, %f1820, 0f00000000, %f1826;
	add.rn.f32 	%f1828, %f1821, %f1827;
	mov.b32 	%r754, %f1828;
	setp.eq.s32 	%p362, %r754, 1118925336;
	selp.f32 	%f1829, 0f42B17217, %f1828, %p362;
	neg.f32 	%f1830, %f1828;
	add.rn.f32 	%f1831, %f1821, %f1830;
	add.rn.f32 	%f1832, %f1831, %f1827;
	add.rn.f32 	%f1833, %f1832, 0f37000000;
	selp.f32 	%f1834, %f1833, %f1832, %p362;
	mov.f32 	%f1835, 0f3FB8AA3B;
	mul.rn.f32 	%f1836, %f1829, %f1835;
	cvt.rzi.f32.f32 	%f1837, %f1836;
	abs.f32 	%f1838, %f1837;
	setp.gt.f32 	%p363, %f1838, 0f42FC0000;
	mov.f32 	%f1839, 0f42FC0000;
	copysign.f32 	%f1840, %f1837, %f1839;
	selp.f32 	%f1841, %f1840, %f1837, %p363;
	fma.rn.f32 	%f1842, %f1841, 0fBF317218, %f1829;
	fma.rn.f32 	%f1843, %f1841, 0f3102E308, %f1842;
	mul.rn.f32 	%f1844, %f1843, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1845, %f1844;
	add.rn.f32 	%f1846, %f1841, 0f4B40007F;
	mov.b32 	%r755, %f1846;
	shl.b32 	%r756, %r755, 23;
	mov.b32 	%f1847, %r756;
	mul.rn.f32 	%f1848, %f1845, %f1847;
	setp.neu.f32 	%p364, %f1848, 0f7F800000;
	fma.rn.f32 	%f1849, %f1848, %f1834, %f1848;
	selp.f32 	%f1850, %f1849, 0f7F800000, %p364;
	neg.f32 	%f1851, %f1850;
	selp.f32 	%f1852, %f1851, %f1850, %p7;
	cvt.rzi.f32.f32 	%f1853, %f15;
	setp.neu.f32 	%p365, %f15, %f1853;
	selp.f32 	%f1855, 0f7FFFFFFF, %f1852, %p365;
	selp.f32 	%f3738, %f1855, %f1852, %p356;
$L__BB0_383:                            // %__internal_powf_corner_cases.exit.i885
                                        //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1857, %f520, %f524;
	mov.b32 	%r761, %f1857;
	setp.lt.s32 	%p368, %r761, 2139095040;
	@%p368 bra 	$L__BB0_390;
// %bb.384:                             // %__nv_isnanf.exit.i.i890
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.num.f32 	%p369, %f520, %f520;
	setp.num.f32 	%p370, %f524, %f524;
	and.pred  	%p371, %p369, %p370;
	@%p371 bra 	$L__BB0_386;
// %bb.385:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f3738, %f3653, %f15;
	bra.uni 	$L__BB0_390;
$L__BB0_386:                            // %__nv_isinff.exit8.i.i892
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p372, %f524, 0f7F800000;
	@%p372 bra 	$L__BB0_388;
// %bb.387:                             // %__nv_fabsf.exit5.i.i896
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.gt.f32 	%p375, %f520, 0f3F800000;
	selp.b32 	%r765, 2139095040, 0, %p375;
	setp.lt.f32 	%p376, %f15, 0f00000000;
	xor.b32  	%r766, %r765, 2139095040;
	selp.b32 	%r767, %r766, %r765, %p376;
	setp.eq.f32 	%p377, %f3653, 0fBF800000;
	mov.b32 	%f1858, %r767;
	selp.f32 	%f3738, 0f3F800000, %f1858, %p377;
	bra.uni 	$L__BB0_390;
$L__BB0_388:                            // %__nv_isinff.exit.i.i893
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p373, %f520, 0f7F800000;
	@%p373 bra 	$L__BB0_390;
// %bb.389:                             //   in Loop: Header=BB0_1 Depth=1
	setp.ge.f32 	%p374, %f15, 0f00000000;
	selp.b32 	%r762, 2139095040, 0, %p374;
	or.b32  	%r763, %r762, -2147483648;
	selp.b32 	%r764, %r763, %r762, %p7;
	mov.b32 	%f3738, %r764;
$L__BB0_390:                            // %__nv_powf.exit901
                                        //   in Loop: Header=BB0_1 Depth=1
	mul.rn.f32 	%f1862, %f16, 0f3F000000;
	cvt.rzi.f32.f32 	%f1863, %f1862;
	add.rn.f32 	%f1864, %f1863, %f1863;
	sub.rn.f32 	%f1865, %f16, %f1864;
	abs.f32 	%f1866, %f1865;
	setp.eq.f32 	%p380, %f1866, 0f3F800000;
	abs.f32 	%f534, %f8;
	abs.f32 	%f538, %f16;
	setp.lt.f32 	%p383, %f8, 0f00000000;
	and.pred  	%p8, %p383, %p380;
	setp.neu.f32 	%p384, %f8, 0f00000000;
	@%p384 bra 	$L__BB0_392;
// %bb.391:                             //   in Loop: Header=BB0_1 Depth=1
	add.rn.f32 	%f1942, %f8, %f8;
	mov.b32 	%r774, %f1942;
	selp.b32 	%r775, %r774, 0, %p380;
	setp.lt.f32 	%p394, %f16, 0f00000000;
	or.b32  	%r776, %r775, 2139095040;
	selp.b32 	%r777, %r776, %r775, %p394;
	mov.b32 	%f3740, %r777;
	bra.uni 	$L__BB0_393;
$L__BB0_392:                            //   in Loop: Header=BB0_1 Depth=1
	setp.lt.f32 	%p381, %f534, 0f00800000;
	mul.rn.f32 	%f1867, %f534, 0f4B800000;
	selp.f32 	%f1868, %f1867, %f534, %p381;
	mov.b32 	%r368, %f1868;
	and.b32  	%r768, %r368, 8388607;
	or.b32  	%r769, %r768, 1065353216;
	mov.b32 	%f535, %r769;
	setp.gt.f32 	%p382, %f535, 0f3FB504F3;
	mul.rn.f32 	%f1869, %f535, 0f3F000000;
	selp.f32 	%f536, %f1869, %f535, %p382;
	add.rn.f32 	%f1860, %f536, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1859,%f1860;
	// end inline asm
	setp.gt.f32 	%p388, %f538, 0f77F684DF;
	mul.rn.f32 	%f1870, %f16, 0f39000000;
	selp.f32 	%f1871, %f1870, %f16, %p388;
	selp.f32 	%f1872, 0fC3170000, 0fC2FE0000, %p381;
	shr.u32 	%r770, %r368, 23;
	cvt.rn.f32.u32 	%f1873, %r770;
	add.rn.f32 	%f1874, %f1872, %f1873;
	add.rn.f32 	%f1875, %f1874, 0f3F800000;
	selp.f32 	%f1876, %f1875, %f1874, %p382;
	mov.f32 	%f1877, 0f3F317200;
	mul.rn.f32 	%f1878, %f1876, %f1877;
	add.rn.f32 	%f1879, %f536, 0fBF800000;
	add.rn.f32 	%f1880, %f1879, %f1879;
	mul.rn.f32 	%f1881, %f1880, %f1859;
	mul.rn.f32 	%f1882, %f1881, %f1881;
	fma.rn.f32 	%f1883, %f1882, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f1884, %f1883, %f1882, 0f3DAAAABD;
	mul.rn.f32 	%f1885, %f1884, %f1882;
	mul.rn.f32 	%f1886, %f1885, %f1881;
	add.rn.f32 	%f1887, %f1881, %f1886;
	sub.rn.f32 	%f1888, %f1881, %f1887;
	add.rn.f32 	%f1889, %f1886, %f1888;
	neg.f32 	%f1890, %f1881;
	sub.rn.f32 	%f1891, %f1879, %f1881;
	add.rn.f32 	%f1892, %f1891, %f1891;
	fma.rn.f32 	%f1893, %f1890, %f1879, %f1892;
	mul.rn.f32 	%f1894, %f1859, %f1893;
	add.rn.f32 	%f1895, %f1894, %f1889;
	add.rn.f32 	%f1896, %f1887, %f1895;
	add.rn.f32 	%f1897, %f1878, %f1896;
	sub.rn.f32 	%f1898, %f1878, %f1897;
	add.rn.f32 	%f1899, %f1896, %f1898;
	sub.rn.f32 	%f1900, %f1887, %f1896;
	add.rn.f32 	%f1901, %f1895, %f1900;
	add.rn.f32 	%f1902, %f1901, %f1899;
	mov.f32 	%f1903, 0f35BFBE8E;
	mul.rn.f32 	%f1904, %f1876, %f1903;
	add.rn.f32 	%f1905, %f1904, %f1902;
	add.rn.f32 	%f1906, %f1897, %f1905;
	mul.rn.f32 	%f1907, %f1871, %f1906;
	sub.rn.f32 	%f1908, %f1897, %f1906;
	add.rn.f32 	%f1909, %f1905, %f1908;
	neg.f32 	%f1910, %f1907;
	fma.rn.f32 	%f1911, %f1871, %f1906, %f1910;
	fma.rn.f32 	%f1912, %f1871, %f1909, %f1911;
	fma.rn.f32 	%f1913, %f1906, 0f00000000, %f1912;
	add.rn.f32 	%f1914, %f1907, %f1913;
	mov.b32 	%r771, %f1914;
	setp.eq.s32 	%p389, %r771, 1118925336;
	selp.f32 	%f1915, 0f42B17217, %f1914, %p389;
	neg.f32 	%f1916, %f1914;
	add.rn.f32 	%f1917, %f1907, %f1916;
	add.rn.f32 	%f1918, %f1917, %f1913;
	add.rn.f32 	%f1919, %f1918, 0f37000000;
	selp.f32 	%f1920, %f1919, %f1918, %p389;
	mov.f32 	%f1921, 0f3FB8AA3B;
	mul.rn.f32 	%f1922, %f1915, %f1921;
	cvt.rzi.f32.f32 	%f1923, %f1922;
	abs.f32 	%f1924, %f1923;
	setp.gt.f32 	%p390, %f1924, 0f42FC0000;
	mov.f32 	%f1925, 0f42FC0000;
	copysign.f32 	%f1926, %f1923, %f1925;
	selp.f32 	%f1927, %f1926, %f1923, %p390;
	fma.rn.f32 	%f1928, %f1927, 0fBF317218, %f1915;
	fma.rn.f32 	%f1929, %f1927, 0f3102E308, %f1928;
	mul.rn.f32 	%f1930, %f1929, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1931, %f1930;
	add.rn.f32 	%f1932, %f1927, 0f4B40007F;
	mov.b32 	%r772, %f1932;
	shl.b32 	%r773, %r772, 23;
	mov.b32 	%f1933, %r773;
	mul.rn.f32 	%f1934, %f1931, %f1933;
	setp.neu.f32 	%p391, %f1934, 0f7F800000;
	fma.rn.f32 	%f1935, %f1934, %f1920, %f1934;
	selp.f32 	%f1936, %f1935, 0f7F800000, %p391;
	neg.f32 	%f1937, %f1936;
	selp.f32 	%f1938, %f1937, %f1936, %p8;
	cvt.rzi.f32.f32 	%f1939, %f16;
	setp.neu.f32 	%p392, %f16, %f1939;
	selp.f32 	%f1941, 0f7FFFFFFF, %f1938, %p392;
	selp.f32 	%f3740, %f1941, %f1938, %p383;
$L__BB0_393:                            // %__internal_powf_corner_cases.exit.i915
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.eq.f32 	%p217, %f9, 0f00000000;
	selp.f32 	%f1345, 0f3F800000, %f3726, %p217;
	setp.eq.f32 	%p244, %f10, 0f00000000;
	selp.f32 	%f1431, 0f3F800000, %f3728, %p244;
	setp.eq.f32 	%p271, %f11, 0f00000000;
	selp.f32 	%f1517, 0f3F800000, %f3730, %p271;
	setp.eq.f32 	%p298, %f12, 0f00000000;
	selp.f32 	%f1603, 0f3F800000, %f3732, %p298;
	setp.eq.f32 	%p325, %f13, 0f00000000;
	selp.f32 	%f1689, 0f3F800000, %f3734, %p325;
	setp.eq.f32 	%p352, %f14, 0f00000000;
	selp.f32 	%f1775, 0f3F800000, %f3736, %p352;
	setp.eq.f32 	%p379, %f15, 0f00000000;
	selp.f32 	%f1861, 0f3F800000, %f3738, %p379;
	add.rn.f32 	%f1943, %f534, %f538;
	mov.b32 	%r778, %f1943;
	setp.lt.s32 	%p395, %r778, 2139095040;
	@%p395 bra 	$L__BB0_400;
// %bb.394:                             // %__nv_isnanf.exit.i.i920
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.num.f32 	%p396, %f534, %f534;
	setp.num.f32 	%p397, %f538, %f538;
	and.pred  	%p398, %p396, %p397;
	@%p398 bra 	$L__BB0_396;
	bra.uni 	$L__BB0_395;
$L__BB0_396:                            // %__nv_isinff.exit8.i.i922
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p399, %f538, 0f7F800000;
	@%p399 bra 	$L__BB0_398;
// %bb.397:                             // %__nv_fabsf.exit5.i.i926
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.gt.f32 	%p402, %f534, 0f3F800000;
	selp.b32 	%r782, 2139095040, 0, %p402;
	setp.lt.f32 	%p403, %f16, 0f00000000;
	xor.b32  	%r783, %r782, 2139095040;
	selp.b32 	%r784, %r783, %r782, %p403;
	setp.eq.f32 	%p404, %f8, 0fBF800000;
	mov.b32 	%f1944, %r784;
	selp.f32 	%f3740, 0f3F800000, %f1944, %p404;
	bra.uni 	$L__BB0_400;
$L__BB0_398:                            // %__nv_isinff.exit.i.i923
                                        //   in Loop: Header=BB0_1 Depth=1
	setp.neu.f32 	%p400, %f534, 0f7F800000;
	@%p400 bra 	$L__BB0_400;
// %bb.399:                             //   in Loop: Header=BB0_1 Depth=1
	setp.ge.f32 	%p401, %f16, 0f00000000;
	selp.b32 	%r779, 2139095040, 0, %p401;
	or.b32  	%r780, %r779, -2147483648;
	selp.b32 	%r781, %r780, %r779, %p8;
	mov.b32 	%f3740, %r781;
	bra.uni 	$L__BB0_400;
$L__BB0_2:                              // %Halt
	ret;
                                        // -- End function
}
	// .globl	__nv_rsqrtf             // -- Begin function __nv_rsqrtf
.visible .func  (.param .b32 func_retval0) __nv_rsqrtf(
	.param .b32 __nv_rsqrtf_param_0
)                                       // @__nv_rsqrtf
{
	.reg .f32 	%f<3>;

// %bb.0:
	ld.param.f32 	%f1, [__nv_rsqrtf_param_0];
	rsqrt.approx.f32 	%f2, %f1;
	st.param.f32 	[func_retval0], %f2;
	ret;
                                        // -- End function
}
	// .globl	__nv_exp2f              // -- Begin function __nv_exp2f
.visible .func  (.param .b32 func_retval0) __nv_exp2f(
	.param .b32 __nv_exp2f_param_0
)                                       // @__nv_exp2f
{
	.reg .f32 	%f<3>;

// %bb.0:                               // %__exp2f.exit
	ld.param.f32 	%f1, [__nv_exp2f_param_0];
	ex2.approx.f32 	%f2, %f1;
	st.param.f32 	[func_retval0], %f2;
	ret;
                                        // -- End function
}
	// .globl	__nv_sqrtf              // -- Begin function __nv_sqrtf
.visible .func  (.param .b32 func_retval0) __nv_sqrtf(
	.param .b32 __nv_sqrtf_param_0
)                                       // @__nv_sqrtf
{
	.reg .f32 	%f<3>;

// %bb.0:                               // %__nvvm_sqrt_f.exit
	ld.param.f32 	%f1, [__nv_sqrtf_param_0];
	sqrt.approx.f32 	%f2, %f1;
	st.param.f32 	[func_retval0], %f2;
	ret;
                                        // -- End function
}
	// .globl	__nv_sinf               // -- Begin function __nv_sinf
.visible .func  (.param .b32 func_retval0) __nv_sinf(
	.param .b32 __nv_sinf_param_0
)                                       // @__nv_sinf
{
	.local .align 4 .b8 	__local_depot4[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<44>;
	.reg .f32 	%f<28>;
	.reg .b64 	%rd<16>;
	.reg .f64 	%fd<3>;

// %bb.0:                               // %__nv_float2int_rn.exit.i.i
	mov.u64 	%SPL, __local_depot4;
	ld.param.f32 	%f6, [__nv_sinf_param_0];
	add.u64 	%rd1, %SPL, 0;
	mul.rn.f32 	%f7, %f6, 0f3F22F983;
	cvt.rni.s32.f32 	%r43, %f7;
	cvt.rn.f32.s32 	%f8, %r43;
	fma.rn.f32 	%f9, %f8, 0fBFC90FDA, %f6;
	fma.rn.f32 	%f10, %f8, 0fB3A22168, %f9;
	fma.rn.f32 	%f27, %f8, 0fA7C234C5, %f10;
	abs.f32 	%f2, %f6;
	setp.ltu.f32 	%p1, %f2, 0f47CE4780;
	@%p1 bra 	$L__BB4_8;
// %bb.1:                               // %__nv_isinff.exit.i.i
	setp.neu.f32 	%p2, %f2, 0f7F800000;
	@%p2 bra 	$L__BB4_3;
// %bb.2:                               // %__nv_fmul_rn.exit.i.i
	mov.f32 	%f13, 0f00000000;
	mul.rn.f32 	%f27, %f6, %f13;
	mov.b32 	%r43, 0;
	bra.uni 	$L__BB4_8;
$L__BB4_3:
	mov.b32 	%r2, %f6;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r15, %r3, 224;
	add.s32 	%r16, %r15, -128;
	shl.b32 	%r17, %r2, 8;
	or.b32  	%r21, %r17, -2147483648;
	shr.u32 	%r5, %r16, 5;
	mov.b32 	%r41, 0;
	mov.b64 	%rd15, 0;
	mov.u64 	%rd7, __cudart_i2opi_f;
$L__BB4_4:                              // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd8, %rd7, %rd15;
	ld.global.nc.u32 	%r20, [%rd8];
	// begin inline asm
	{
	mad.lo.cc.u32   %r18, %r20, %r21, %r41;
	madc.hi.u32     %r41, %r20, %r21,  0;
	}
	// end inline asm
	add.s64 	%rd9, %rd1, %rd15;
	st.local.u32 	[%rd9], %r18;
	add.s64 	%rd15, %rd15, 4;
	cvt.u32.u64 	%r23, %rd15;
	setp.ne.s32 	%p3, %r23, 24;
	@%p3 bra 	$L__BB4_4;
// %bb.5:
	st.local.u32 	[%rd1+24], %r41;
	mul.wide.u32 	%rd10, %r5, 4;
	sub.s64 	%rd4, %rd1, %rd10;
	ld.local.u32 	%r8, [%rd4+24];
	ld.local.u32 	%r9, [%rd4+20];
	and.b32  	%r25, %r2, 260046848;
	setp.eq.s32 	%p4, %r25, 0;
	mov.u32 	%r42, %r9;
	@%p4 bra 	$L__BB4_7;
// %bb.6:
	ld.local.u32 	%r26, [%rd4+16];
	shf.l.wrap.b32 	%r42, %r26, %r9, %r3;
$L__BB4_7:                              // %__internal_trig_reduction_slowpath.exit.i.i
	shf.l.wrap.b32 	%r27, %r9, %r8, %r3;
	shr.u32 	%r28, %r27, 30;
	shf.l.wrap.b32 	%r29, %r42, %r27, 2;
	shl.b32 	%r30, %r42, 2;
	shr.u32 	%r31, %r29, 31;
	add.s32 	%r32, %r31, %r28;
	neg.s32 	%r33, %r32;
	setp.lt.s32 	%p5, %r2, 0;
	selp.b32 	%r43, %r33, %r32, %p5;
	xor.b32  	%r34, %r29, %r2;
	shr.s32 	%r35, %r29, 31;
	xor.b32  	%r36, %r35, %r29;
	xor.b32  	%r37, %r35, %r30;
	cvt.u64.u32 	%rd11, %r36;
	shl.b64 	%rd12, %rd11, 32;
	cvt.u64.u32 	%rd13, %r37;
	or.b64  	%rd14, %rd12, %rd13;
	cvt.rn.f64.s64 	%fd1, %rd14;
	mul.rn.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f11, %fd2;
	neg.f32 	%f12, %f11;
	setp.lt.s32 	%p6, %r34, 0;
	selp.f32 	%f27, %f12, %f11, %p6;
$L__BB4_8:                              // %__internal_trig_reduction_kernel.exit.i
	mul.rn.f32 	%f14, %f27, %f27;
	and.b32  	%r39, %r43, 1;
	setp.eq.b32 	%p7, %r39, 1;
	selp.f32 	%f15, 0f3F800000, %f27, %p7;
	fma.rn.f32 	%f16, %f14, %f15, 0f00000000;
	fma.rn.f32 	%f17, %f14, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f18, %f17, 0fB94D4153, %p7;
	selp.f32 	%f19, 0f3D2AAABB, 0f3C0885E4, %p7;
	fma.rn.f32 	%f20, %f18, %f14, %f19;
	selp.f32 	%f21, 0fBEFFFFFF, 0fBE2AAAA8, %p7;
	fma.rn.f32 	%f22, %f20, %f14, %f21;
	fma.rn.f32 	%f23, %f22, %f16, %f15;
	and.b32  	%r40, %r43, 2;
	setp.eq.s32 	%p8, %r40, 0;
	mov.f32 	%f24, 0f00000000;
	sub.rn.f32 	%f25, %f24, %f23;
	selp.f32 	%f26, %f23, %f25, %p8;
	st.param.f32 	[func_retval0], %f26;
	ret;
                                        // -- End function
}
	// .globl	__nv_cosf               // -- Begin function __nv_cosf
.visible .func  (.param .b32 func_retval0) __nv_cosf(
	.param .b32 __nv_cosf_param_0
)                                       // @__nv_cosf
{
	.local .align 4 .b8 	__local_depot5[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<45>;
	.reg .f32 	%f<28>;
	.reg .b64 	%rd<16>;
	.reg .f64 	%fd<3>;

// %bb.0:                               // %__nv_float2int_rn.exit.i.i
	mov.u64 	%SPL, __local_depot5;
	ld.param.f32 	%f6, [__nv_cosf_param_0];
	add.u64 	%rd1, %SPL, 0;
	mul.rn.f32 	%f7, %f6, 0f3F22F983;
	cvt.rni.s32.f32 	%r44, %f7;
	cvt.rn.f32.s32 	%f8, %r44;
	fma.rn.f32 	%f9, %f8, 0fBFC90FDA, %f6;
	fma.rn.f32 	%f10, %f8, 0fB3A22168, %f9;
	fma.rn.f32 	%f27, %f8, 0fA7C234C5, %f10;
	abs.f32 	%f2, %f6;
	setp.ltu.f32 	%p1, %f2, 0f47CE4780;
	@%p1 bra 	$L__BB5_8;
// %bb.1:                               // %__nv_isinff.exit.i.i
	setp.neu.f32 	%p2, %f2, 0f7F800000;
	@%p2 bra 	$L__BB5_3;
// %bb.2:                               // %__nv_fmul_rn.exit.i.i
	mov.f32 	%f13, 0f00000000;
	mul.rn.f32 	%f27, %f6, %f13;
	mov.b32 	%r44, 0;
	bra.uni 	$L__BB5_8;
$L__BB5_3:
	mov.b32 	%r2, %f6;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r15, %r3, 224;
	add.s32 	%r16, %r15, -128;
	shl.b32 	%r17, %r2, 8;
	or.b32  	%r21, %r17, -2147483648;
	shr.u32 	%r5, %r16, 5;
	mov.b32 	%r42, 0;
	mov.b64 	%rd15, 0;
	mov.u64 	%rd7, __cudart_i2opi_f;
$L__BB5_4:                              // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd8, %rd7, %rd15;
	ld.global.nc.u32 	%r20, [%rd8];
	// begin inline asm
	{
	mad.lo.cc.u32   %r18, %r20, %r21, %r42;
	madc.hi.u32     %r42, %r20, %r21,  0;
	}
	// end inline asm
	add.s64 	%rd9, %rd1, %rd15;
	st.local.u32 	[%rd9], %r18;
	add.s64 	%rd15, %rd15, 4;
	cvt.u32.u64 	%r23, %rd15;
	setp.ne.s32 	%p3, %r23, 24;
	@%p3 bra 	$L__BB5_4;
// %bb.5:
	st.local.u32 	[%rd1+24], %r42;
	mul.wide.u32 	%rd10, %r5, 4;
	sub.s64 	%rd4, %rd1, %rd10;
	ld.local.u32 	%r8, [%rd4+24];
	ld.local.u32 	%r9, [%rd4+20];
	and.b32  	%r25, %r2, 260046848;
	setp.eq.s32 	%p4, %r25, 0;
	mov.u32 	%r43, %r9;
	@%p4 bra 	$L__BB5_7;
// %bb.6:
	ld.local.u32 	%r26, [%rd4+16];
	shf.l.wrap.b32 	%r43, %r26, %r9, %r3;
$L__BB5_7:                              // %__internal_trig_reduction_slowpath.exit.i.i
	shf.l.wrap.b32 	%r27, %r9, %r8, %r3;
	shr.u32 	%r28, %r27, 30;
	shf.l.wrap.b32 	%r29, %r43, %r27, 2;
	shl.b32 	%r30, %r43, 2;
	shr.u32 	%r31, %r29, 31;
	add.s32 	%r32, %r31, %r28;
	neg.s32 	%r33, %r32;
	setp.lt.s32 	%p5, %r2, 0;
	selp.b32 	%r44, %r33, %r32, %p5;
	xor.b32  	%r34, %r29, %r2;
	shr.s32 	%r35, %r29, 31;
	xor.b32  	%r36, %r35, %r29;
	xor.b32  	%r37, %r35, %r30;
	cvt.u64.u32 	%rd11, %r36;
	shl.b64 	%rd12, %rd11, 32;
	cvt.u64.u32 	%rd13, %r37;
	or.b64  	%rd14, %rd12, %rd13;
	cvt.rn.f64.s64 	%fd1, %rd14;
	mul.rn.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f11, %fd2;
	neg.f32 	%f12, %f11;
	setp.lt.s32 	%p6, %r34, 0;
	selp.f32 	%f27, %f12, %f11, %p6;
$L__BB5_8:                              // %__internal_trig_reduction_kernel.exit.i
	add.s32 	%r39, %r44, 1;
	mul.rn.f32 	%f14, %f27, %f27;
	and.b32  	%r40, %r44, 1;
	setp.eq.b32 	%p7, %r40, 1;
	selp.f32 	%f15, %f27, 0f3F800000, %p7;
	fma.rn.f32 	%f16, %f14, %f15, 0f00000000;
	fma.rn.f32 	%f17, %f14, 0f37CBAC00, 0fBAB607ED;
	selp.f32 	%f18, 0fB94D4153, %f17, %p7;
	selp.f32 	%f19, 0f3C0885E4, 0f3D2AAABB, %p7;
	fma.rn.f32 	%f20, %f18, %f14, %f19;
	selp.f32 	%f21, 0fBE2AAAA8, 0fBEFFFFFF, %p7;
	fma.rn.f32 	%f22, %f20, %f14, %f21;
	fma.rn.f32 	%f23, %f22, %f16, %f15;
	and.b32  	%r41, %r39, 2;
	setp.eq.s32 	%p8, %r41, 0;
	mov.f32 	%f24, 0f00000000;
	sub.rn.f32 	%f25, %f24, %f23;
	selp.f32 	%f26, %f23, %f25, %p8;
	st.param.f32 	[func_retval0], %f26;
	ret;
                                        // -- End function
}
	// .globl	__nv_tanf               // -- Begin function __nv_tanf
.visible .func  (.param .b32 func_retval0) __nv_tanf(
	.param .b32 __nv_tanf_param_0
)                                       // @__nv_tanf
{
	.local .align 4 .b8 	__local_depot6[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<43>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<16>;
	.reg .f64 	%fd<3>;

// %bb.0:                               // %__nv_float2int_rn.exit.i
	mov.u64 	%SPL, __local_depot6;
	ld.param.f32 	%f10, [__nv_tanf_param_0];
	add.u64 	%rd1, %SPL, 0;
	mul.rn.f32 	%f11, %f10, 0f3F22F983;
	cvt.rni.s32.f32 	%r42, %f11;
	cvt.rn.f32.s32 	%f12, %r42;
	fma.rn.f32 	%f13, %f12, 0fBFC90FDA, %f10;
	fma.rn.f32 	%f14, %f12, 0fB3A22168, %f13;
	fma.rn.f32 	%f29, %f12, 0fA7C234C5, %f14;
	abs.f32 	%f2, %f10;
	setp.ltu.f32 	%p1, %f2, 0f47CE4780;
	@%p1 bra 	$L__BB6_8;
// %bb.1:                               // %__nv_isinff.exit.i
	setp.neu.f32 	%p2, %f2, 0f7F800000;
	@%p2 bra 	$L__BB6_3;
// %bb.2:                               // %__nv_fmul_rn.exit.i
	mov.f32 	%f17, 0f00000000;
	mul.rn.f32 	%f29, %f10, %f17;
	mov.b32 	%r42, 0;
	bra.uni 	$L__BB6_8;
$L__BB6_3:
	mov.b32 	%r2, %f10;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r15, %r3, 224;
	add.s32 	%r16, %r15, -128;
	shl.b32 	%r17, %r2, 8;
	or.b32  	%r21, %r17, -2147483648;
	shr.u32 	%r5, %r16, 5;
	mov.b32 	%r40, 0;
	mov.b64 	%rd15, 0;
	mov.u64 	%rd7, __cudart_i2opi_f;
$L__BB6_4:                              // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd8, %rd7, %rd15;
	ld.global.nc.u32 	%r20, [%rd8];
	// begin inline asm
	{
	mad.lo.cc.u32   %r18, %r20, %r21, %r40;
	madc.hi.u32     %r40, %r20, %r21,  0;
	}
	// end inline asm
	add.s64 	%rd9, %rd1, %rd15;
	st.local.u32 	[%rd9], %r18;
	add.s64 	%rd15, %rd15, 4;
	cvt.u32.u64 	%r23, %rd15;
	setp.ne.s32 	%p3, %r23, 24;
	@%p3 bra 	$L__BB6_4;
// %bb.5:
	st.local.u32 	[%rd1+24], %r40;
	mul.wide.u32 	%rd10, %r5, 4;
	sub.s64 	%rd4, %rd1, %rd10;
	ld.local.u32 	%r8, [%rd4+24];
	ld.local.u32 	%r9, [%rd4+20];
	and.b32  	%r25, %r2, 260046848;
	setp.eq.s32 	%p4, %r25, 0;
	mov.u32 	%r41, %r9;
	@%p4 bra 	$L__BB6_7;
// %bb.6:
	ld.local.u32 	%r26, [%rd4+16];
	shf.l.wrap.b32 	%r41, %r26, %r9, %r3;
$L__BB6_7:                              // %__internal_trig_reduction_slowpath.exit.i
	shf.l.wrap.b32 	%r27, %r9, %r8, %r3;
	shr.u32 	%r28, %r27, 30;
	shf.l.wrap.b32 	%r29, %r41, %r27, 2;
	shl.b32 	%r30, %r41, 2;
	shr.u32 	%r31, %r29, 31;
	add.s32 	%r32, %r31, %r28;
	neg.s32 	%r33, %r32;
	setp.lt.s32 	%p5, %r2, 0;
	selp.b32 	%r42, %r33, %r32, %p5;
	xor.b32  	%r34, %r29, %r2;
	shr.s32 	%r35, %r29, 31;
	xor.b32  	%r36, %r35, %r29;
	xor.b32  	%r37, %r35, %r30;
	cvt.u64.u32 	%rd11, %r36;
	shl.b64 	%rd12, %rd11, 32;
	cvt.u64.u32 	%rd13, %r37;
	or.b64  	%rd14, %rd12, %rd13;
	cvt.rn.f64.s64 	%fd1, %rd14;
	mul.rn.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f15, %fd2;
	neg.f32 	%f16, %f15;
	setp.lt.s32 	%p6, %r34, 0;
	selp.f32 	%f29, %f16, %f15, %p6;
$L__BB6_8:                              // %__internal_trig_reduction_kernel.exit
	mul.rn.f32 	%f18, %f29, %f29;
	fma.rn.f32 	%f19, %f18, 0f3C190000, 0f3B560000;
	fma.rn.f32 	%f20, %f19, %f18, 0f3CC70000;
	fma.rn.f32 	%f21, %f20, %f18, 0f3D5B0000;
	fma.rn.f32 	%f22, %f21, %f18, 0f3E089438;
	fma.rn.f32 	%f23, %f22, %f18, 0f3EAAAA88;
	mul.rn.f32 	%f24, %f18, %f29;
	fma.rn.f32 	%f25, %f23, %f24, %f29;
	abs.f32 	%f26, %f29;
	setp.eq.f32 	%p7, %f26, 0f3A00B43C;
	selp.f32 	%f30, %f29, %f25, %p7;
	and.b32  	%r39, %r42, 1;
	setp.eq.b32 	%p8, %r39, 1;
	not.pred 	%p9, %p8;
	@%p9 bra 	$L__BB6_10;
// %bb.9:
	neg.f32 	%f28, %f30;
	// begin inline asm
	rcp.approx.ftz.f32 %f30,%f28;
	// end inline asm
$L__BB6_10:
	st.param.f32 	[func_retval0], %f30;
	ret;
                                        // -- End function
}
	// .globl	__nv_log2f              // -- Begin function __nv_log2f
.visible .func  (.param .b32 func_retval0) __nv_log2f(
	.param .b32 __nv_log2f_param_0
)                                       // @__nv_log2f
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<5>;
	.reg .f32 	%f<25>;

// %bb.0:                               // %__nv_fmaf_rn.exit10.i
	ld.param.f32 	%f1, [__nv_log2f_param_0];
	setp.lt.f32 	%p1, %f1, 0f00800000;
	mul.rn.f32 	%f2, %f1, 0f4B000000;
	selp.f32 	%f3, %f2, %f1, %p1;
	selp.f32 	%f4, 0fC1B80000, 0f00000000, %p1;
	mov.b32 	%r1, %f3;
	add.s32 	%r2, %r1, -1060439283;
	and.b32  	%r3, %r2, -8388608;
	sub.s32 	%r4, %r1, %r3;
	mov.b32 	%f5, %r4;
	cvt.rn.f32.s32 	%f6, %r3;
	fma.rn.f32 	%f7, %f6, 0f34000000, %f4;
	add.rn.f32 	%f8, %f5, 0fBF800000;
	fma.rn.f32 	%f9, %f8, 0f3DC6B27F, 0fBE2C7F30;
	fma.rn.f32 	%f10, %f9, %f8, 0f3E2FCF2A;
	fma.rn.f32 	%f11, %f10, %f8, 0fBE374E43;
	fma.rn.f32 	%f12, %f11, %f8, 0f3E520BF4;
	fma.rn.f32 	%f13, %f12, %f8, 0fBE763C8B;
	fma.rn.f32 	%f14, %f13, %f8, 0f3E93BF99;
	fma.rn.f32 	%f15, %f14, %f8, 0fBEB8AA49;
	fma.rn.f32 	%f16, %f15, %f8, 0f3EF6384A;
	fma.rn.f32 	%f17, %f16, %f8, 0fBF38AA3B;
	mul.rn.f32 	%f18, %f8, %f17;
	mul.rn.f32 	%f19, %f8, %f18;
	fma.rn.f32 	%f20, %f8, 0f3FB8AA3B, %f19;
	add.rn.f32 	%f21, %f7, %f20;
	setp.gt.u32 	%p2, %r1, 2139095039;
	fma.rn.f32 	%f22, %f3, 0f7F800000, 0f7F800000;
	selp.f32 	%f23, %f22, %f21, %p2;
	setp.eq.f32 	%p3, %f3, 0f00000000;
	selp.f32 	%f24, 0fFF800000, %f23, %p3;
	st.param.f32 	[func_retval0], %f24;
	ret;
                                        // -- End function
}
	// .globl	__nv_expf               // -- Begin function __nv_expf
.visible .func  (.param .b32 func_retval0) __nv_expf(
	.param .b32 __nv_expf_param_0
)                                       // @__nv_expf
{
	.reg .b32 	%r<3>;
	.reg .f32 	%f<14>;

// %bb.0:                               // %__nv_fmaf_rn.exit.i.i
	ld.param.f32 	%f1, [__nv_expf_param_0];
	fma.rn.f32 	%f2, %f1, 0f3BBB989D, 0f3F000000;
	cvt.sat.f32.f32 	%f3, %f2;
	mov.f32 	%f4, 0f4B400001;
	mov.f32 	%f5, 0f437C0000;
	fma.rm.f32 	%f6, %f3, %f5, %f4;
	add.rn.f32 	%f7, %f6, 0fCB40007F;
	neg.f32 	%f8, %f7;
	fma.rn.f32 	%f9, %f1, 0f3FB8AA3B, %f8;
	fma.rn.f32 	%f10, %f1, 0f32A57060, %f9;
	mov.b32 	%r1, %f6;
	shl.b32 	%r2, %r1, 23;
	mov.b32 	%f11, %r2;
	ex2.approx.ftz.f32 	%f12, %f10;
	mul.rn.f32 	%f13, %f12, %f11;
	st.param.f32 	[func_retval0], %f13;
	ret;
                                        // -- End function
}
	// .globl	__nv_atan2f             // -- Begin function __nv_atan2f
.visible .func  (.param .b32 func_retval0) __nv_atan2f(
	.param .b32 __nv_atan2f_param_0,
	.param .b32 __nv_atan2f_param_1
)                                       // @__nv_atan2f
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<11>;
	.reg .f32 	%f<34>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f8, [__nv_atan2f_param_1];
	ld.param.f32 	%f7, [__nv_atan2f_param_0];
	abs.f32 	%f1, %f8;
	abs.f32 	%f9, %f7;
	setp.neu.f32 	%p1, %f1, 0f00000000;
	setp.neu.f32 	%p2, %f9, 0f00000000;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB9_2;
// %bb.1:
	mov.b32 	%r8, %f8;
	shr.s32 	%r9, %r8, 31;
	and.b32  	%r10, %r9, 1078530011;
	mov.b32 	%f32, %r10;
	copysign.f32 	%f33, %f7, %f32;
	bra.uni 	$L__BB9_5;
$L__BB9_2:
	setp.neu.f32 	%p4, %f1, 0f7F800000;
	setp.neu.f32 	%p5, %f9, 0f7F800000;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB9_4;
// %bb.3:
	mov.b32 	%r6, %f8;
	setp.lt.s32 	%p10, %r6, 0;
	selp.b32 	%r7, 1075235812, 1061752795, %p10;
	mov.b32 	%f31, %r7;
	copysign.f32 	%f33, %f7, %f31;
	bra.uni 	$L__BB9_5;
$L__BB9_4:                              // %__nv_fmaxf.exit
	max.f32 	%f10, %f9, %f1;
	min.f32 	%f11, %f9, %f1;
	div.rn.f32 	%f12, %f11, %f10;
	mul.rn.f32 	%f13, %f12, %f12;
	fma.rn.f32 	%f14, %f13, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f15, %f14, %f13, 0fC0D21907;
	mul.rn.f32 	%f16, %f13, %f15;
	mul.rn.f32 	%f17, %f12, %f16;
	add.rn.f32 	%f18, %f13, 0f41355DC0;
	fma.rn.f32 	%f19, %f18, %f13, 0f41E6BD60;
	fma.rn.f32 	%f20, %f19, %f13, 0f419D92C8;
	rcp.rn.f32 	%f21, %f20;
	fma.rn.f32 	%f22, %f17, %f21, %f12;
	setp.gt.f32 	%p7, %f9, %f1;
	mov.f32 	%f23, 0f3FC90FDB;
	sub.rn.f32 	%f24, %f23, %f22;
	selp.f32 	%f25, %f24, %f22, %p7;
	mov.b32 	%r1, %f8;
	setp.lt.s32 	%p8, %r1, 0;
	mov.f32 	%f26, 0f40490FDB;
	sub.rn.f32 	%f27, %f26, %f25;
	selp.f32 	%f28, %f27, %f25, %p8;
	mov.b32 	%r2, %f28;
	mov.b32 	%r3, %f7;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	%f29, %r5;
	add.rn.f32 	%f30, %f9, %f1;
	setp.num.f32 	%p9, %f30, %f30;
	selp.f32 	%f33, %f29, %f30, %p9;
$L__BB9_5:
	st.param.f32 	[func_retval0], %f33;
	ret;
                                        // -- End function
}
	// .globl	__nv_atanf              // -- Begin function __nv_atanf
.visible .func  (.param .b32 func_retval0) __nv_atanf(
	.param .b32 __nv_atanf_param_0
)                                       // @__nv_atanf
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<5>;
	.reg .f32 	%f<20>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f1, [__nv_atanf_param_0];
	abs.f32 	%f2, %f1;
	setp.gt.f32 	%p1, %f2, 0f3F800000;
	rcp.rn.f32 	%f3, %f2;
	selp.f32 	%f4, %f3, %f2, %p1;
	mul.rn.f32 	%f5, %f4, %f4;
	fma.rn.f32 	%f6, %f5, 0fBF52C7EA, 0fC0B59883;
	fma.rn.f32 	%f7, %f6, %f5, 0fC0D21907;
	mul.rn.f32 	%f8, %f5, %f7;
	mul.rn.f32 	%f9, %f4, %f8;
	add.rn.f32 	%f10, %f5, 0f41355DC0;
	fma.rn.f32 	%f11, %f10, %f5, 0f41E6BD60;
	fma.rn.f32 	%f12, %f11, %f5, 0f419D92C8;
	rcp.rn.f32 	%f13, %f12;
	fma.rn.f32 	%f14, %f9, %f13, %f4;
	mov.f32 	%f15, 0f3FC90FDB;
	sub.rn.f32 	%f16, %f15, %f14;
	selp.f32 	%f17, %f16, %f14, %p1;
	setp.num.f32 	%p2, %f2, %f2;
	mov.b32 	%r1, %f17;
	mov.b32 	%r2, %f1;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r3, %r1;
	mov.b32 	%f18, %r4;
	selp.f32 	%f19, %f18, %f17, %p2;
	st.param.f32 	[func_retval0], %f19;
	ret;
                                        // -- End function
}
	// .globl	__nv_asinf              // -- Begin function __nv_asinf
.visible .func  (.param .b32 func_retval0) __nv_asinf(
	.param .b32 __nv_asinf_param_0
)                                       // @__nv_asinf
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<5>;
	.reg .f32 	%f<19>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f1, [__nv_asinf_param_0];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.rn.f32 	%f4, %f3, %f2;
	mul.rn.f32 	%f5, %f4, 0f3F000000;
	sqrt.approx.f32 	%f6, %f5;
	setp.gt.f32 	%p1, %f2, 0f3F11EB85;
	selp.f32 	%f7, %f6, %f2, %p1;
	mul.rn.f32 	%f8, %f7, %f7;
	fma.rn.f32 	%f9, %f8, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f10, %f9, %f8, 0f3D3F841F;
	fma.rn.f32 	%f11, %f10, %f8, 0f3D994929;
	fma.rn.f32 	%f12, %f11, %f8, 0f3E2AAB94;
	mul.rn.f32 	%f13, %f8, %f12;
	fma.rn.f32 	%f14, %f13, %f7, %f7;
	fma.rn.f32 	%f15, %f14, 0fC0000000, 0f3FC90FDB;
	selp.f32 	%f16, %f15, %f14, %p1;
	setp.num.f32 	%p2, %f16, %f16;
	mov.b32 	%r1, %f16;
	mov.b32 	%r2, %f1;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r3, %r1;
	mov.b32 	%f17, %r4;
	selp.f32 	%f18, %f17, %f16, %p2;
	st.param.f32 	[func_retval0], %f18;
	ret;
                                        // -- End function
}
	// .globl	__nv_acosf              // -- Begin function __nv_acosf
.visible .func  (.param .b32 func_retval0) __nv_acosf(
	.param .b32 __nv_acosf_param_0
)                                       // @__nv_acosf
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<22>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f1, [__nv_acosf_param_0];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.rn.f32 	%f4, %f3, %f2;
	mul.rn.f32 	%f5, %f4, 0f3F000000;
	sqrt.approx.f32 	%f6, %f5;
	setp.gt.f32 	%p1, %f2, 0f3F11EB85;
	selp.f32 	%f7, %f6, %f2, %p1;
	mul.rn.f32 	%f8, %f7, %f7;
	fma.rn.f32 	%f9, %f8, 0f3D53F941, 0f3C94D2E9;
	fma.rn.f32 	%f10, %f9, %f8, 0f3D3F841F;
	fma.rn.f32 	%f11, %f10, %f8, 0f3D994929;
	fma.rn.f32 	%f12, %f11, %f8, 0f3E2AAB94;
	mul.rn.f32 	%f13, %f8, %f12;
	fma.rn.f32 	%f14, %f13, %f7, %f7;
	add.rn.f32 	%f15, %f14, %f14;
	mov.f32 	%f16, 0f3FC90FDB;
	sub.rn.f32 	%f17, %f16, %f14;
	selp.f32 	%f18, %f15, %f17, %p1;
	setp.lt.f32 	%p2, %f1, 0f00000000;
	mov.f32 	%f19, 0f40490FDB;
	sub.rn.f32 	%f20, %f19, %f18;
	selp.f32 	%f21, %f20, %f18, %p2;
	st.param.f32 	[func_retval0], %f21;
	ret;
                                        // -- End function
}
	// .globl	__nv_logf               // -- Begin function __nv_logf
.visible .func  (.param .b32 func_retval0) __nv_logf(
	.param .b32 __nv_logf_param_0
)                                       // @__nv_logf
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<5>;
	.reg .f32 	%f<23>;

// %bb.0:                               // %__nv_fmaf_rn.exit10.i
	ld.param.f32 	%f1, [__nv_logf_param_0];
	setp.lt.f32 	%p1, %f1, 0f00800000;
	mul.rn.f32 	%f2, %f1, 0f4B000000;
	selp.f32 	%f3, %f2, %f1, %p1;
	selp.f32 	%f4, 0fC1B80000, 0f00000000, %p1;
	mov.b32 	%r1, %f3;
	add.s32 	%r2, %r1, -1059760811;
	and.b32  	%r3, %r2, -8388608;
	sub.s32 	%r4, %r1, %r3;
	mov.b32 	%f5, %r4;
	cvt.rn.f32.s32 	%f6, %r3;
	fma.rn.f32 	%f7, %f6, 0f34000000, %f4;
	add.rn.f32 	%f8, %f5, 0fBF800000;
	fma.rn.f32 	%f9, %f8, 0fBE055027, 0f3E1039F6;
	fma.rn.f32 	%f10, %f9, %f8, 0fBDF8CDCC;
	fma.rn.f32 	%f11, %f10, %f8, 0f3E0F2955;
	fma.rn.f32 	%f12, %f11, %f8, 0fBE2AD8B9;
	fma.rn.f32 	%f13, %f12, %f8, 0f3E4CED0B;
	fma.rn.f32 	%f14, %f13, %f8, 0fBE7FFF22;
	fma.rn.f32 	%f15, %f14, %f8, 0f3EAAAA78;
	fma.rn.f32 	%f16, %f15, %f8, 0fBF000000;
	mul.rn.f32 	%f17, %f8, %f16;
	fma.rn.f32 	%f18, %f17, %f8, %f8;
	fma.rn.f32 	%f19, %f7, 0f3F317218, %f18;
	setp.gt.u32 	%p2, %r1, 2139095039;
	fma.rn.f32 	%f20, %f3, 0f7F800000, 0f7F800000;
	selp.f32 	%f21, %f20, %f19, %p2;
	setp.eq.f32 	%p3, %f3, 0f00000000;
	selp.f32 	%f22, 0fFF800000, %f21, %p3;
	st.param.f32 	[func_retval0], %f22;
	ret;
                                        // -- End function
}
	// .globl	__nv_erff               // -- Begin function __nv_erff
.visible .func  (.param .b32 func_retval0) __nv_erff(
	.param .b32 __nv_erff_param_0
)                                       // @__nv_erff
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<5>;
	.reg .f32 	%f<27>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f4, [__nv_erff_param_0];
	abs.f32 	%f5, %f4;
	setp.ltu.f32 	%p1, %f5, 0f3F8060FE;
	setp.ge.f32 	%p2, %f5, 0f3F8060FE;
	mul.rn.f32 	%f6, %f4, %f4;
	selp.f32 	%f7, %f5, %f6, %p2;
	selp.f32 	%f8, 0f3789CA3C, 0f38B1E96A, %p2;
	selp.f32 	%f9, 0fB9F560B9, 0fBA574D20, %p2;
	fma.rn.f32 	%f10, %f8, %f7, %f9;
	selp.f32 	%f11, 0f3BAC840B, 0f3BAAD5EA, %p2;
	fma.rn.f32 	%f12, %f10, %f7, %f11;
	selp.f32 	%f13, 0fBD0C8162, 0fBCDC1BE7, %p2;
	fma.rn.f32 	%f14, %f12, %f7, %f13;
	selp.f32 	%f15, 0f3E1CF906, 0f3DE718AF, %p2;
	fma.rn.f32 	%f16, %f14, %f7, %f15;
	selp.f32 	%f17, 0f3F6A937E, 0fBEC093AC, %p2;
	fma.rn.f32 	%f18, %f16, %f7, %f17;
	selp.f32 	%f19, 0f3F20D842, 0f3E0375D3, %p2;
	fma.rn.f32 	%f20, %f18, %f7, %f19;
	neg.f32 	%f21, %f7;
	selp.f32 	%f22, %f21, %f4, %p2;
	fma.rn.f32 	%f26, %f20, %f22, %f22;
	@%p1 bra 	$L__BB14_2;
// %bb.1:
	ex2.approx.ftz.f32 	%f23, %f26;
	mov.f32 	%f24, 0f3F800000;
	sub.rn.f32 	%f25, %f24, %f23;
	mov.b32 	%r1, %f25;
	mov.b32 	%r2, %f4;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r3, %r1;
	mov.b32 	%f26, %r4;
$L__BB14_2:
	st.param.f32 	[func_retval0], %f26;
	ret;
                                        // -- End function
}
	// .globl	__nv_powf               // -- Begin function __nv_powf
.visible .func  (.param .b32 func_retval0) __nv_powf(
	.param .b32 __nv_powf_param_0,
	.param .b32 __nv_powf_param_1
)                                       // @__nv_powf
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<19>;
	.reg .f32 	%f<105>;

// %bb.0:                               // %__nv_fabsf.exit
	ld.param.f32 	%f15, [__nv_powf_param_1];
	ld.param.f32 	%f14, [__nv_powf_param_0];
	mul.rn.f32 	%f18, %f15, 0f3F000000;
	cvt.rzi.f32.f32 	%f19, %f18;
	add.rn.f32 	%f20, %f19, %f19;
	sub.rn.f32 	%f21, %f15, %f20;
	abs.f32 	%f22, %f21;
	setp.eq.f32 	%p2, %f22, 0f3F800000;
	abs.f32 	%f2, %f14;
	abs.f32 	%f6, %f15;
	setp.lt.f32 	%p5, %f14, 0f00000000;
	and.pred  	%p1, %p5, %p2;
	setp.neu.f32 	%p6, %f14, 0f00000000;
	@%p6 bra 	$L__BB15_2;
// %bb.1:
	add.rn.f32 	%f98, %f14, %f14;
	mov.b32 	%r8, %f98;
	selp.b32 	%r9, %r8, 0, %p2;
	setp.lt.f32 	%p16, %f15, 0f00000000;
	or.b32  	%r10, %r9, 2139095040;
	selp.b32 	%r11, %r10, %r9, %p16;
	mov.b32 	%f104, %r11;
	bra.uni 	$L__BB15_3;
$L__BB15_2:
	setp.lt.f32 	%p3, %f2, 0f00800000;
	mul.rn.f32 	%f23, %f2, 0f4B800000;
	selp.f32 	%f24, %f23, %f2, %p3;
	mov.b32 	%r1, %f24;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	%f3, %r3;
	setp.gt.f32 	%p4, %f3, 0f3FB504F3;
	mul.rn.f32 	%f25, %f3, 0f3F000000;
	selp.f32 	%f4, %f25, %f3, %p4;
	add.rn.f32 	%f17, %f4, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// end inline asm
	setp.gt.f32 	%p10, %f6, 0f77F684DF;
	mul.rn.f32 	%f26, %f15, 0f39000000;
	selp.f32 	%f27, %f26, %f15, %p10;
	selp.f32 	%f28, 0fC3170000, 0fC2FE0000, %p3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32 	%f29, %r4;
	add.rn.f32 	%f30, %f28, %f29;
	add.rn.f32 	%f31, %f30, 0f3F800000;
	selp.f32 	%f32, %f31, %f30, %p4;
	mov.f32 	%f33, 0f3F317200;
	mul.rn.f32 	%f34, %f32, %f33;
	add.rn.f32 	%f35, %f4, 0fBF800000;
	add.rn.f32 	%f36, %f35, %f35;
	mul.rn.f32 	%f37, %f36, %f16;
	mul.rn.f32 	%f38, %f37, %f37;
	fma.rn.f32 	%f39, %f38, 0f3B18F0FE, 0f3C4CAF63;
	fma.rn.f32 	%f40, %f39, %f38, 0f3DAAAABD;
	mul.rn.f32 	%f41, %f40, %f38;
	mul.rn.f32 	%f42, %f41, %f37;
	add.rn.f32 	%f43, %f37, %f42;
	sub.rn.f32 	%f44, %f37, %f43;
	add.rn.f32 	%f45, %f42, %f44;
	neg.f32 	%f46, %f37;
	sub.rn.f32 	%f47, %f35, %f37;
	add.rn.f32 	%f48, %f47, %f47;
	fma.rn.f32 	%f49, %f46, %f35, %f48;
	mul.rn.f32 	%f50, %f16, %f49;
	add.rn.f32 	%f51, %f50, %f45;
	add.rn.f32 	%f52, %f43, %f51;
	add.rn.f32 	%f53, %f34, %f52;
	sub.rn.f32 	%f54, %f34, %f53;
	add.rn.f32 	%f55, %f52, %f54;
	sub.rn.f32 	%f56, %f43, %f52;
	add.rn.f32 	%f57, %f51, %f56;
	add.rn.f32 	%f58, %f57, %f55;
	mov.f32 	%f59, 0f35BFBE8E;
	mul.rn.f32 	%f60, %f32, %f59;
	add.rn.f32 	%f61, %f60, %f58;
	add.rn.f32 	%f62, %f53, %f61;
	mul.rn.f32 	%f63, %f27, %f62;
	sub.rn.f32 	%f64, %f53, %f62;
	add.rn.f32 	%f65, %f61, %f64;
	neg.f32 	%f66, %f63;
	fma.rn.f32 	%f67, %f27, %f62, %f66;
	fma.rn.f32 	%f68, %f27, %f65, %f67;
	fma.rn.f32 	%f69, %f62, 0f00000000, %f68;
	add.rn.f32 	%f70, %f63, %f69;
	mov.b32 	%r5, %f70;
	setp.eq.s32 	%p11, %r5, 1118925336;
	selp.f32 	%f71, 0f42B17217, %f70, %p11;
	neg.f32 	%f72, %f70;
	add.rn.f32 	%f73, %f63, %f72;
	add.rn.f32 	%f74, %f73, %f69;
	add.rn.f32 	%f75, %f74, 0f37000000;
	selp.f32 	%f76, %f75, %f74, %p11;
	mov.f32 	%f77, 0f3FB8AA3B;
	mul.rn.f32 	%f78, %f71, %f77;
	cvt.rzi.f32.f32 	%f79, %f78;
	abs.f32 	%f80, %f79;
	setp.gt.f32 	%p12, %f80, 0f42FC0000;
	mov.f32 	%f81, 0f42FC0000;
	copysign.f32 	%f82, %f79, %f81;
	selp.f32 	%f83, %f82, %f79, %p12;
	fma.rn.f32 	%f84, %f83, 0fBF317218, %f71;
	fma.rn.f32 	%f85, %f83, 0f3102E308, %f84;
	mul.rn.f32 	%f86, %f85, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f87, %f86;
	add.rn.f32 	%f88, %f83, 0f4B40007F;
	mov.b32 	%r6, %f88;
	shl.b32 	%r7, %r6, 23;
	mov.b32 	%f89, %r7;
	mul.rn.f32 	%f90, %f87, %f89;
	setp.neu.f32 	%p13, %f90, 0f7F800000;
	fma.rn.f32 	%f91, %f90, %f76, %f90;
	selp.f32 	%f92, %f91, 0f7F800000, %p13;
	neg.f32 	%f93, %f92;
	selp.f32 	%f94, %f93, %f92, %p1;
	cvt.rzi.f32.f32 	%f95, %f15;
	setp.neu.f32 	%p14, %f15, %f95;
	selp.f32 	%f97, 0f7FFFFFFF, %f94, %p14;
	selp.f32 	%f104, %f97, %f94, %p5;
$L__BB15_3:                             // %__internal_powf_corner_cases.exit
	add.rn.f32 	%f99, %f2, %f6;
	mov.b32 	%r12, %f99;
	setp.lt.s32 	%p17, %r12, 2139095040;
	@%p17 bra 	$L__BB15_10;
// %bb.4:                               // %__nv_isnanf.exit.i
	setp.num.f32 	%p18, %f2, %f2;
	setp.num.f32 	%p19, %f6, %f6;
	and.pred  	%p20, %p18, %p19;
	@%p20 bra 	$L__BB15_6;
// %bb.5:
	add.rn.f32 	%f104, %f14, %f15;
	bra.uni 	$L__BB15_10;
$L__BB15_6:                             // %__nv_isinff.exit8.i
	setp.neu.f32 	%p21, %f6, 0f7F800000;
	@%p21 bra 	$L__BB15_8;
// %bb.7:                               // %__nv_fabsf.exit5.i
	setp.gt.f32 	%p24, %f2, 0f3F800000;
	selp.b32 	%r16, 2139095040, 0, %p24;
	setp.lt.f32 	%p25, %f15, 0f00000000;
	xor.b32  	%r17, %r16, 2139095040;
	selp.b32 	%r18, %r17, %r16, %p25;
	setp.eq.f32 	%p26, %f14, 0fBF800000;
	mov.b32 	%f100, %r18;
	selp.f32 	%f104, 0f3F800000, %f100, %p26;
	bra.uni 	$L__BB15_10;
$L__BB15_8:                             // %__nv_isinff.exit.i
	setp.neu.f32 	%p22, %f2, 0f7F800000;
	@%p22 bra 	$L__BB15_10;
// %bb.9:
	setp.ge.f32 	%p23, %f15, 0f00000000;
	selp.b32 	%r13, 2139095040, 0, %p23;
	or.b32  	%r14, %r13, -2147483648;
	selp.b32 	%r15, %r14, %r13, %p1;
	mov.b32 	%f104, %r15;
$L__BB15_10:                            // %__internal_powf_infinite_cases.exit
	setp.eq.f32 	%p27, %f14, 0f3F800000;
	setp.eq.f32 	%p28, %f15, 0f00000000;
	selp.f32 	%f101, 0f3F800000, %f104, %p28;
	selp.f32 	%f102, 0f3F800000, %f101, %p27;
	st.param.f32 	[func_retval0], %f102;
	ret;
                                        // -- End function
}
